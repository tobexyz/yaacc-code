@startuml
class de.yaacc.upnp.server.contentdirectory.MusicGenresFolderBrowser {
+ <<Create>> MusicGenresFolderBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
- Integer getSize(YaaccContentDirectory,String)
- Integer getMusicTrackSize(YaaccContentDirectory,String)
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
enum org.fourthline.cling.support.model.RecordMediumWriteStatus {
+  WRITABLE
+  PROTECTED
+  NOT_WRITABLE
+  UNKNOWN
+  NOT_IMPLEMENTED
+ {static} RecordMediumWriteStatus valueOrUnknownOf(String)
}
class de.yaacc.databinding.ActivityThirdPartieMusicPlayerBinding {
- RelativeLayout rootView
+ RelativeLayout thirdPartieMusicActivityControls
+ ImageButton thirdPratieMusicActivityControlExit
+ ImageButton thirdPratieMusicActivityControlNext
+ ImageButton thirdPratieMusicActivityControlPause
+ ImageButton thirdPratieMusicActivityControlPlay
+ ImageButton thirdPratieMusicActivityControlPrev
+ ImageButton thirdPratieMusicActivityControlStop
+ ImageView thirdPratieMusicActivityImageView
- <<Create>> ActivityThirdPartieMusicPlayerBinding(RelativeLayout,RelativeLayout,ImageButton,ImageButton,ImageButton,ImageButton,ImageButton,ImageButton,ImageView)
+ RelativeLayout getRoot()
+ {static} ActivityThirdPartieMusicPlayerBinding inflate(LayoutInflater)
+ {static} ActivityThirdPartieMusicPlayerBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityThirdPartieMusicPlayerBinding bind(View)
}
class org.seamless.xhtml.Anchor {
+ <<Create>> Anchor(XPath,Element)
+ String getType()
+ Anchor setType(String)
+ Href getHref()
+ Anchor setHref(String)
+ String toString()
}
class org.fourthline.cling.model.meta.Action {
- {static} Logger log
- String name
- ActionArgument[] arguments
- ActionArgument[] inputArguments
- ActionArgument[] outputArguments
- S service
+ <<Create>> Action(String,ActionArgument[])
+ String getName()
+ boolean hasArguments()
+ ActionArgument[] getArguments()
+ S getService()
~ void setService(S)
+ ActionArgument<S> getFirstInputArgument()
+ ActionArgument<S> getFirstOutputArgument()
+ ActionArgument<S>[] getInputArguments()
+ ActionArgument<S> getInputArgument(String)
+ ActionArgument<S>[] getOutputArguments()
+ ActionArgument<S> getOutputArgument(String)
+ boolean hasInputArguments()
+ boolean hasOutputArguments()
+ String toString()
+ List<ValidationError> validate()
+ Action<S> deepCopy()
}
class de.yaacc.player.MultiContentPlayer {
- int appPid
+ <<Create>> MultiContentPlayer(UpnpClient,String)
+ <<Create>> MultiContentPlayer(UpnpClient)
# void stopItem(PlayableItem)
# Object loadItem(PlayableItem)
# void startItem(PlayableItem,Object)
- void discoverStartedActivityPid()
+ void onDestroy()
+ URI getAlbumArt()
+ PendingIntent getNotificationIntent()
# int getNotificationId()
+ void seekTo(long)
}
abstract class org.fourthline.cling.registry.RegistryItems {
# RegistryImpl registry
# Set<RegistryItem<UDN,D>> deviceItems
# Set<RegistryItem<String,S>> subscriptionItems
~ <<Create>> RegistryItems(RegistryImpl)
~ Set<RegistryItem<UDN,D>> getDeviceItems()
~ Set<RegistryItem<String,S>> getSubscriptionItems()
~ {abstract}void add(D)
~ {abstract}boolean remove(D)
~ {abstract}void removeAll()
~ {abstract}void maintain()
~ {abstract}void shutdown()
~ D get(UDN,boolean)
~ Collection<D> get(DeviceType)
~ Collection<D> get(ServiceType)
~ Collection<D> get()
~ boolean contains(D)
~ boolean contains(UDN)
~ void addSubscription(S)
~ boolean updateSubscription(S)
~ boolean removeSubscription(S)
~ S getSubscription(String)
~ Resource[] getResources(Device)
}
class de.yaacc.databinding.ActivityMultiContentPlayerBinding {
- RelativeLayout rootView
+ ImageButton multiContentPlayerActivityControlExit
+ ImageButton multiContentPlayerActivityControlNext
+ ImageButton multiContentPlayerActivityControlPause
+ ImageButton multiContentPlayerActivityControlPlay
+ ImageButton multiContentPlayerActivityControlPrev
+ ImageButton multiContentPlayerActivityControlStop
+ RelativeLayout multiContentPlayerActivityControls
+ ImageView multiContentPlayerActivityImageView
- <<Create>> ActivityMultiContentPlayerBinding(RelativeLayout,ImageButton,ImageButton,ImageButton,ImageButton,ImageButton,ImageButton,RelativeLayout,ImageView)
+ RelativeLayout getRoot()
+ {static} ActivityMultiContentPlayerBinding inflate(LayoutInflater)
+ {static} ActivityMultiContentPlayerBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityMultiContentPlayerBinding bind(View)
}
class org.fourthline.cling.registry.RemoteItems {
- {static} Logger log
~ <<Create>> RemoteItems(RegistryImpl)
~ void add(RemoteDevice)
~ boolean update(RemoteDeviceIdentity)
~ boolean remove(RemoteDevice)
~ boolean remove(RemoteDevice,boolean)
~ void removeAll()
~ void removeAll(boolean)
~ void start()
~ void maintain()
+ void resume()
~ void shutdown()
# void renewOutgoingSubscription(RemoteGENASubscription)
}
class org.seamless.util.io.HexBin {
- {static} int BASELENGTH
- {static} int LOOKUPLENGTH
- {static} byte[] hexNumberTable
- {static} byte[] lookUpHexAlphabet
~ {static} boolean isHex(byte)
+ {static} String bytesToString(byte[])
+ {static} String bytesToString(byte[],String)
+ {static} byte[] stringToBytes(String)
+ {static} byte[] stringToBytes(String,String)
+ {static} byte[] encode(byte[])
+ {static} byte[] decode(byte[])
+ {static} String decode(String)
+ {static} String encode(String)
}
class de.yaacc.upnp.SynchronizationInfo {
~ String speed
~ String referencedPositionUnits
~ String referencedPosition
~ String referencedPresentationTime
~ String referencedClockId
~ SyncOffset offset
+ <<Create>> SynchronizationInfo()
+ <<Create>> SynchronizationInfo(String,String,String,String,String)
+ String getReferencedClockId()
+ void setReferencedClockId(String)
+ String getSpeed()
+ void setSpeed(String)
+ String getReferencedPositionUnits()
+ void setReferencedPositionUnits(String)
+ String getReferencedPosition()
+ void setReferencedPosition(String)
+ String getReferencedPresentationTime()
+ void setReferencedPresentationTime(String)
+ SyncOffset getReferencedPresentationTimeOffset()
+ SyncOffset getOffset()
+ void setOffset(SyncOffset)
}
abstract class org.fourthline.cling.support.avtransport.callback.GetMediaInfo {
- {static} Logger log
+ <<Create>> GetMediaInfo(Service)
+ <<Create>> GetMediaInfo(UnsignedIntegerFourBytes,Service)
+ void success(ActionInvocation)
+ {abstract}void received(ActionInvocation,MediaInfo)
}
abstract class org.fourthline.cling.model.meta.Service {
- {static} Logger log
- ServiceType serviceType
- ServiceId serviceId
- Map<String,Action> actions
- Map<String,StateVariable> stateVariables
- D device
+ <<Create>> Service(ServiceType,ServiceId)
+ <<Create>> Service(ServiceType,ServiceId,Action<S>[],StateVariable<S>[])
+ ServiceType getServiceType()
+ ServiceId getServiceId()
+ boolean hasActions()
+ Action<S>[] getActions()
+ boolean hasStateVariables()
+ StateVariable<S>[] getStateVariables()
+ D getDevice()
~ void setDevice(D)
+ Action<S> getAction(String)
+ StateVariable<S> getStateVariable(String)
+ StateVariable<S> getRelatedStateVariable(ActionArgument)
+ Datatype<S> getDatatype(ActionArgument)
+ ServiceReference getReference()
+ List<ValidationError> validate()
+ {abstract}Action getQueryStateVariableAction()
+ String toString()
}
interface org.fourthline.cling.transport.spi.DatagramProcessor {
+ IncomingDatagramMessage read(InetAddress,DatagramPacket)
+ DatagramPacket write(OutgoingDatagramMessage)
}
class org.seamless.test.http.QueryTest {
+ void createQuery()
+ void addParameter()
}
class org.fourthline.cling.model.types.ServiceId {
- {static} Logger log
+ {static} String UNKNOWN
+ {static} Pattern PATTERN
+ {static} Pattern BROKEN_PATTERN
- String namespace
- String id
+ <<Create>> ServiceId(String,String)
+ String getNamespace()
+ String getId()
+ {static} ServiceId valueOf(String)
+ String toString()
+ boolean equals(Object)
+ int hashCode()
}
class org.seamless.statemachine.TransitionException {
+ <<Create>> TransitionException(String)
+ <<Create>> TransitionException(String,Throwable)
}
class org.fourthline.cling.model.message.UpnpRequest {
- Method method
- URI uri
+ <<Create>> UpnpRequest(Method)
+ <<Create>> UpnpRequest(Method,URI)
+ <<Create>> UpnpRequest(Method,URL)
+ Method getMethod()
+ String getHttpMethodName()
+ URI getURI()
+ void setUri(URI)
+ String toString()
}
enum org.fourthline.cling.model.message.Method {
+  GET
+  POST
+  NOTIFY
+  MSEARCH
+  SUBSCRIBE
+  UNSUBSCRIBE
+  UNKNOWN
- {static} Map<String,Method> byName
- String httpName
~ <<Create>> Method(String)
+ String getHttpName()
+ {static} Method getByHttpName(String)
}
class org.fourthline.cling.protocol.RetrieveRemoteDescriptors {
- {static} Logger log
- UpnpService upnpService
- RemoteDevice rd
- {static} Set<URL> activeRetrievals
# List<UDN> errorsAlreadyLogged
+ <<Create>> RetrieveRemoteDescriptors(UpnpService,RemoteDevice)
+ UpnpService getUpnpService()
+ void run()
# void describe()
# void describe(String)
# RemoteDevice describeServices(RemoteDevice)
# RemoteService describeService(RemoteService)
# List<RemoteService> filterExclusiveServices(RemoteService[])
}
class org.fourthline.cling.support.test.model.DIDLObjectTest {
+ void testHasPropertyWithNormalClass()
+ void testHasPropertyWithAnonymousClass()
}
class org.seamless.xhtml.XHTMLParser {
+ <<Create>> XHTMLParser()
# XHTML createDOM(Document)
+ void checkDuplicateIdentifiers(XHTML)
+ NamespaceContextMap createDefaultNamespaceContext(String)
+ XPath createXPath()
}
class de.yaacc.util.YaaccLogActivity {
+ {static} void showLog(Activity)
# void onCreate(Bundle)
# void onResume()
- void displayLog()
}
class org.fourthline.cling.support.model.dlna.message.header.ContentFeaturesHeader {
+ <<Create>> ContentFeaturesHeader()
+ void setString(String)
+ String getString()
}
abstract class org.fourthline.cling.support.igd.callback.PortMappingDelete {
# PortMapping portMapping
+ <<Create>> PortMappingDelete(Service,PortMapping)
# <<Create>> PortMappingDelete(Service,ControlPoint,PortMapping)
}
class org.fourthline.cling.test.gena.InvalidEventXMLProcessingTest {
+ {static} Object[][] invalidXMLFile()
+ {static} Object[][] invalidRecoverableXMLFile()
+ {static} Object[][] invalidUnrecoverableXMLFile()
+ void readDefaultFailure(String)
+ void readRecoverableFailure(String)
+ void readRecoveringFailure(String)
+ void readPull(String)
+ void readRecovering(String)
# void read(String,UpnpService)
# Map<String,Object> parseLastChangeXML(String)
}
class org.fourthline.cling.protocol.async.ReceivingNotification {
- {static} Logger log
+ <<Create>> ReceivingNotification(UpnpService,IncomingDatagramMessage<UpnpRequest>)
# void execute()
}
abstract class org.fourthline.cling.support.renderingcontrol.AbstractAudioRenderingControl {
- LastChange lastChange
# PropertyChangeSupport propertyChangeSupport
# <<Create>> AbstractAudioRenderingControl()
# <<Create>> AbstractAudioRenderingControl(LastChange)
# <<Create>> AbstractAudioRenderingControl(PropertyChangeSupport)
# <<Create>> AbstractAudioRenderingControl(PropertyChangeSupport,LastChange)
+ LastChange getLastChange()
+ void appendCurrentState(LastChange,UnsignedIntegerFourBytes)
+ PropertyChangeSupport getPropertyChangeSupport()
+ {static} UnsignedIntegerFourBytes getDefaultInstanceID()
+ String listPresets(UnsignedIntegerFourBytes)
+ void selectPreset(UnsignedIntegerFourBytes,String)
+ {abstract}boolean getMute(UnsignedIntegerFourBytes,String)
+ {abstract}void setMute(UnsignedIntegerFourBytes,String,boolean)
+ {abstract}UnsignedIntegerTwoBytes getVolume(UnsignedIntegerFourBytes,String)
+ {abstract}void setVolume(UnsignedIntegerFourBytes,String,UnsignedIntegerTwoBytes)
+ Integer getVolumeDB(UnsignedIntegerFourBytes,String)
+ void setVolumeDB(UnsignedIntegerFourBytes,String,Integer)
+ VolumeDBRange getVolumeDBRange(UnsignedIntegerFourBytes,String)
+ boolean getLoudness(UnsignedIntegerFourBytes,String)
+ void setLoudness(UnsignedIntegerFourBytes,String,boolean)
# {abstract}Channel[] getCurrentChannels()
# Channel getChannel(String)
}
interface example.mediarenderer.MyRendererStateMachine {
}
class org.fourthline.cling.protocol.sync.SendingAction {
- {static} Logger log
# ActionInvocation actionInvocation
+ <<Create>> SendingAction(UpnpService,ActionInvocation,URL)
# IncomingActionResponseMessage executeSync()
# IncomingActionResponseMessage invokeRemote(OutgoingActionRequestMessage)
# StreamResponseMessage sendRemoteRequest(OutgoingActionRequestMessage)
# void handleResponse(IncomingActionResponseMessage)
# void handleResponseFailure(IncomingActionResponseMessage)
}
class org.fourthline.cling.model.action.ActionInvocation {
# Action<S> action
# ClientInfo clientInfo
# Map<String,ActionArgumentValue<S>> input
# Map<String,ActionArgumentValue<S>> output
# ActionException failure
+ <<Create>> ActionInvocation(Action<S>)
+ <<Create>> ActionInvocation(Action<S>,ClientInfo)
+ <<Create>> ActionInvocation(Action<S>,ActionArgumentValue<S>[])
+ <<Create>> ActionInvocation(Action<S>,ActionArgumentValue<S>[],ClientInfo)
+ <<Create>> ActionInvocation(Action<S>,ActionArgumentValue<S>[],ActionArgumentValue<S>[])
+ <<Create>> ActionInvocation(Action<S>,ActionArgumentValue<S>[],ActionArgumentValue<S>[],ClientInfo)
+ <<Create>> ActionInvocation(ActionException)
+ Action<S> getAction()
+ ActionArgumentValue<S>[] getInput()
+ ActionArgumentValue<S> getInput(String)
+ ActionArgumentValue<S> getInput(ActionArgument<S>)
+ Map<String,ActionArgumentValue<S>> getInputMap()
+ ActionArgumentValue<S>[] getOutput()
+ ActionArgumentValue<S> getOutput(String)
+ Map<String,ActionArgumentValue<S>> getOutputMap()
+ ActionArgumentValue<S> getOutput(ActionArgument<S>)
+ void setInput(String,Object)
+ void setInput(ActionArgumentValue<S>)
+ void setInput(ActionArgumentValue<S>[])
+ void setOutput(String,Object)
+ void setOutput(ActionArgumentValue<S>)
+ void setOutput(ActionArgumentValue<S>[])
# ActionArgument<S> getInputArgument(String)
# ActionArgument<S> getOutputArgument(String)
+ ActionException getFailure()
+ void setFailure(ActionException)
+ ClientInfo getClientInfo()
+ String toString()
}
class org.fourthline.cling.support.model.dlna.message.header.RealTimeInfoHeader {
+ {static} String PREFIX
+ <<Create>> RealTimeInfoHeader()
+ void setString(String)
+ String getString()
}
interface org.fourthline.cling.transport.spi.SOAPActionProcessor {
+ void writeBody(ActionRequestMessage,ActionInvocation)
+ void writeBody(ActionResponseMessage,ActionInvocation)
+ void readBody(ActionRequestMessage,ActionInvocation)
+ void readBody(ActionResponseMessage,ActionInvocation)
}
class org.fourthline.cling.model.ModelUtil {
+ {static} boolean ANDROID_RUNTIME
+ {static} boolean ANDROID_EMULATOR
+ {static} boolean isStringConvertibleType(Set<Class>,Class)
+ {static} boolean isValidUDAName(String)
+ {static} InetAddress getInetAddressByName(String)
+ {static} String toCommaSeparatedList(Object[])
+ {static} String toCommaSeparatedList(Object[],boolean,boolean)
+ {static} String[] fromCommaSeparatedList(String)
+ {static} String[] fromCommaSeparatedList(String,boolean)
+ {static} String toTimeString(long)
+ {static} long fromTimeString(String)
+ {static} String commaToNewline(String)
+ {static} String getLocalHostName(boolean)
+ {static} byte[] getFirstNetworkInterfaceHardwareAddress()
}
class org.fourthline.cling.model.action.RemoteActionInvocation {
# RemoteClientInfo remoteClientInfo
+ <<Create>> RemoteActionInvocation(Action,ActionArgumentValue[],ActionArgumentValue[],RemoteClientInfo)
+ <<Create>> RemoteActionInvocation(Action,RemoteClientInfo)
+ <<Create>> RemoteActionInvocation(ActionException,RemoteClientInfo)
+ RemoteClientInfo getRemoteClientInfo()
}
class org.fourthline.cling.model.message.header.InterfaceMacHeader {
+ <<Create>> InterfaceMacHeader()
+ <<Create>> InterfaceMacHeader(byte[])
+ <<Create>> InterfaceMacHeader(String)
+ void setString(String)
+ String getString()
+ String toString()
}
class org.fourthline.cling.model.message.gena.OutgoingUnsubscribeRequestMessage {
+ <<Create>> OutgoingUnsubscribeRequestMessage(RemoteGENASubscription,UpnpHeaders)
}
abstract class org.fourthline.cling.controlpoint.ActionCallback {
# ActionInvocation actionInvocation
# ControlPoint controlPoint
# <<Create>> ActionCallback(ActionInvocation,ControlPoint)
# <<Create>> ActionCallback(ActionInvocation)
+ ActionInvocation getActionInvocation()
+ ControlPoint getControlPoint()
+ ActionCallback setControlPoint(ControlPoint)
+ void run()
# String createDefaultFailureMessage(ActionInvocation,UpnpResponse)
# void failure(ActionInvocation,UpnpResponse)
+ {abstract}void success(ActionInvocation)
+ {abstract}void failure(ActionInvocation,UpnpResponse,String)
+ String toString()
}
class org.fourthline.cling.controlpoint.ActionCallback.Default {
+ <<Create>> Default(ActionInvocation,ControlPoint)
+ void success(ActionInvocation)
+ void failure(ActionInvocation,UpnpResponse,String)
}
class org.fourthline.cling.transport.impl.DatagramProcessorImpl {
- {static} Logger log
+ IncomingDatagramMessage read(InetAddress,DatagramPacket)
+ DatagramPacket write(OutgoingDatagramMessage)
# IncomingDatagramMessage readRequestMessage(InetAddress,DatagramPacket,ByteArrayInputStream,String,String)
# IncomingDatagramMessage readResponseMessage(InetAddress,DatagramPacket,ByteArrayInputStream,int,String,String)
}
enum org.fourthline.cling.support.contentdirectory.ContentDirectoryErrorCode {
+  NO_SUCH_OBJECT
+  UNSUPPORTED_SORT_CRITERIA
+  CANNOT_PROCESS
- int code
- String description
~ <<Create>> ContentDirectoryErrorCode(int,String)
+ int getCode()
+ String getDescription()
+ {static} ContentDirectoryErrorCode getByCode(int)
}
class org.fourthline.cling.transport.impl.MulticastReceiverImpl {
- {static} Logger log
# MulticastReceiverConfigurationImpl configuration
# Router router
# NetworkAddressFactory networkAddressFactory
# DatagramProcessor datagramProcessor
# NetworkInterface multicastInterface
# InetSocketAddress multicastAddress
# MulticastSocket socket
+ <<Create>> MulticastReceiverImpl(MulticastReceiverConfigurationImpl)
+ MulticastReceiverConfigurationImpl getConfiguration()
+ void init(NetworkInterface,Router,NetworkAddressFactory,DatagramProcessor)
+ void stop()
+ void run()
}
abstract class org.fourthline.cling.support.avtransport.callback.GetPositionInfo {
- {static} Logger log
+ <<Create>> GetPositionInfo(Service)
+ <<Create>> GetPositionInfo(UnsignedIntegerFourBytes,Service)
+ void success(ActionInvocation)
+ {abstract}void received(ActionInvocation,PositionInfo)
}
class de.yaacc.upnp.server.contentdirectory.MusicAlbumsFolderBrowser {
+ <<Create>> MusicAlbumsFolderBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
- Integer getSize(YaaccContentDirectory,String)
- Integer getMusicTrackSize(YaaccContentDirectory,String)
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
enum org.fourthline.cling.support.model.dlna.DLNAFlags {
+  SENDER_PACED
+  TIME_BASED_SEEK
+  BYTE_BASED_SEEK
+  FLAG_PLAY_CONTAINER
+  S0_INCREASE
+  SN_INCREASE
+  RTSP_PAUSE
+  STREAMING_TRANSFER_MODE
+  INTERACTIVE_TRANSFERT_MODE
+  BACKGROUND_TRANSFERT_MODE
+  CONNECTION_STALL
+  DLNA_V15
- int code
~ <<Create>> DLNAFlags(int)
+ int getCode()
+ {static} DLNAFlags valueOf(int)
}
enum de.yaacc.upnp.server.avtransport.TransportAction {
+  Play
+  Stop
+  Pause
+  Seek
+  Next
+  Previous
+  Record
+  SyncPlay
+  SyncStop
+  SyncPause
+ {static} TransportAction[] valueOfCommaSeparatedList(String)
}
class org.fourthline.cling.model.types.UDAServiceType {
+ {static} String DEFAULT_NAMESPACE
+ {static} Pattern PATTERN
+ <<Create>> UDAServiceType(String)
+ <<Create>> UDAServiceType(String,int)
+ {static} UDAServiceType valueOf(String)
}
class org.fourthline.cling.support.lastchange.LastChangeAwareServiceManager {
# LastChangeParser lastChangeParser
+ <<Create>> LastChangeAwareServiceManager(LocalService<T>,LastChangeParser)
+ <<Create>> LastChangeAwareServiceManager(LocalService<T>,Class<T>,LastChangeParser)
# LastChangeParser getLastChangeParser()
+ void fireLastChange()
# Collection<StateVariableValue> readInitialEventedStateVariableValues()
}
class org.fourthline.cling.transport.impl.MulticastReceiverConfigurationImpl {
- InetAddress group
- int port
- int maxDatagramBytes
+ <<Create>> MulticastReceiverConfigurationImpl(InetAddress,int,int)
+ <<Create>> MulticastReceiverConfigurationImpl(InetAddress,int)
+ <<Create>> MulticastReceiverConfigurationImpl(String,int,int)
+ <<Create>> MulticastReceiverConfigurationImpl(String,int)
+ InetAddress getGroup()
+ void setGroup(InetAddress)
+ int getPort()
+ void setPort(int)
+ int getMaxDatagramBytes()
+ void setMaxDatagramBytes(int)
}
class org.fourthline.cling.model.resource.DeviceDescriptorResource {
+ <<Create>> DeviceDescriptorResource(URI,LocalDevice)
}
class de.yaacc.browser.Navigator {
+ {static} String ITEM_ROOT_OBJECT_ID
- LinkedList<Position> navigationPath
+ <<Create>> Navigator()
+ Position getCurrentPosition()
+ void pushPosition(Position)
+ Position popPosition()
}
class org.fourthline.cling.support.model.item.VideoBroadcast {
+ {static} Class CLASS
+ <<Create>> VideoBroadcast()
+ <<Create>> VideoBroadcast(Item)
+ <<Create>> VideoBroadcast(String,Container,String,String,Res)
+ <<Create>> VideoBroadcast(String,String,String,String,Res)
+ URI getIcon()
+ VideoBroadcast setIcon(URI)
+ String getRegion()
+ VideoBroadcast setRegion(String)
+ Integer getChannelNr()
+ VideoBroadcast setChannelNr(Integer)
}
class org.fourthline.cling.support.model.dlna.message.header.BufferInfoHeader {
+ <<Create>> BufferInfoHeader()
+ void setString(String)
+ String getString()
}
abstract class org.fourthline.cling.support.renderingcontrol.callback.SetMute {
- {static} Logger log
+ <<Create>> SetMute(Service,boolean)
+ <<Create>> SetMute(UnsignedIntegerFourBytes,Service,boolean)
+ void success(ActionInvocation)
}
class org.fourthline.cling.model.action.ActionCancelledException {
+ <<Create>> ActionCancelledException(InterruptedException)
}
abstract class org.fourthline.cling.model.types.UnsignedVariableInteger {
- {static} Logger log
# long value
# <<Create>> UnsignedVariableInteger()
+ <<Create>> UnsignedVariableInteger(long)
+ <<Create>> UnsignedVariableInteger(String)
# UnsignedVariableInteger setValue(long)
+ Long getValue()
+ void isInRange(long)
+ int getMinValue()
+ {abstract}Bits getBits()
+ UnsignedVariableInteger increment(boolean)
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
enum org.fourthline.cling.model.types.Bits {
+  EIGHT
+  SIXTEEN
+  TWENTYFOUR
+  THIRTYTWO
- long maxValue
~ <<Create>> Bits(long)
+ long getMaxValue()
}
class org.fourthline.cling.model.message.header.EXTHeader {
+ {static} String DEFAULT_VALUE
+ <<Create>> EXTHeader()
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.model.types.ShortDatatype {
+ boolean isHandlingJavaType(Class)
+ Short valueOf(String)
}
class org.fourthline.cling.controlpoint.ControlPointImpl {
- {static} Logger log
# UpnpServiceConfiguration configuration
# ProtocolFactory protocolFactory
# Registry registry
# <<Create>> ControlPointImpl()
+ <<Create>> ControlPointImpl(UpnpServiceConfiguration,ProtocolFactory,Registry)
+ UpnpServiceConfiguration getConfiguration()
+ ProtocolFactory getProtocolFactory()
+ Registry getRegistry()
+ void search(Search)
+ void search()
+ void search(UpnpHeader)
+ void search(int)
+ void search(UpnpHeader,int)
+ void execute(ExecuteAction)
+ Future execute(ActionCallback)
+ void execute(SubscriptionCallback)
}
abstract class org.fourthline.cling.support.lastchange.EventedValue {
# V value
+ <<Create>> EventedValue(V)
+ <<Create>> EventedValue(Map.Entry<String,String>[])
+ String getName()
+ V getValue()
+ Map.Entry<String,String>[] getAttributes()
# V valueOf(Map.Entry<String,String>[])
# V valueOf(String)
+ String toString()
# {abstract}Datatype getDatatype()
}
abstract class org.fourthline.cling.model.message.discovery.OutgoingNotificationRequest {
- NotificationSubtype type
# <<Create>> OutgoingNotificationRequest(Location,LocalDevice,NotificationSubtype)
+ NotificationSubtype getType()
}
class org.fourthline.cling.support.lastchange.EventedValueURI {
- {static} Logger log
+ <<Create>> EventedValueURI(URI)
+ <<Create>> EventedValueURI(Map.Entry<String,String>[])
# URI valueOf(String)
# Datatype getDatatype()
}
interface org.fourthline.cling.transport.spi.StreamServerConfiguration {
+ int getListenPort()
}
class org.fourthline.cling.model.resource.ServiceEventSubscriptionResource {
+ <<Create>> ServiceEventSubscriptionResource(URI,LocalService)
}
class example.localservice.MyStringConvertible {
- String msg
+ <<Create>> MyStringConvertible(String)
+ String toString()
}
class example.binarylight.BinaryLightServer {
+ {static} void main(String[])
+ void run()
~ LocalDevice createDevice()
}
abstract class org.fourthline.cling.model.gena.LocalGENASubscription {
- {static} Logger log
~ List<URL> callbackURLs
~ Map<String,Long> lastSentTimestamp
~ Map<String,Long> lastSentNumericValue
# <<Create>> LocalGENASubscription(LocalService,List<URL>)
+ <<Create>> LocalGENASubscription(LocalService,Integer,List<URL>)
+ List<URL> getCallbackURLs()
+ void registerOnService()
+ void establish()
+ void end(CancelReason)
+ void propertyChange(PropertyChangeEvent)
# Set<String> moderateStateVariables(long,Collection<StateVariableValue>)
+ void incrementSequence()
+ void setSubscriptionDuration(Integer)
+ {abstract}void ended(CancelReason)
}
class org.fourthline.cling.model.message.gena.OutgoingRenewalRequestMessage {
+ <<Create>> OutgoingRenewalRequestMessage(RemoteGENASubscription,UpnpHeaders)
}
class org.fourthline.cling.model.message.discovery.OutgoingSearchResponseDeviceType {
+ <<Create>> OutgoingSearchResponseDeviceType(IncomingDatagramMessage,Location,LocalDevice)
}
abstract class org.fourthline.cling.support.contentdirectory.AbstractContentDirectoryService {
+ {static} String CAPS_WILDCARD
- CSV<String> searchCapabilities
- CSV<String> sortCapabilities
- UnsignedIntegerFourBytes systemUpdateID
# PropertyChangeSupport propertyChangeSupport
# <<Create>> AbstractContentDirectoryService()
# <<Create>> AbstractContentDirectoryService(List<String>,List<String>)
# <<Create>> AbstractContentDirectoryService(List<String>,List<String>,PropertyChangeSupport)
+ CSV<String> getSearchCapabilities()
+ CSV<String> getSortCapabilities()
+ UnsignedIntegerFourBytes getSystemUpdateID()
+ PropertyChangeSupport getPropertyChangeSupport()
# void changeSystemUpdateID()
+ BrowseResult browse(String,String,String,UnsignedIntegerFourBytes,UnsignedIntegerFourBytes,String)
+ {abstract}BrowseResult browse(String,BrowseFlag,String,long,long,SortCriterion[])
+ BrowseResult search(String,String,String,UnsignedIntegerFourBytes,UnsignedIntegerFourBytes,String)
+ BrowseResult search(String,String,String,long,long,SortCriterion[])
}
class de.yaacc.util.AboutActivity {
+ {static} void showAbout(Activity)
+ void onCreate(Bundle)
}
class org.fourthline.cling.support.model.container.PhotoAlbum {
+ {static} Class CLASS
+ <<Create>> PhotoAlbum()
+ <<Create>> PhotoAlbum(Container)
+ <<Create>> PhotoAlbum(String,Container,String,String,Integer)
+ <<Create>> PhotoAlbum(String,Container,String,String,Integer,List<Photo>)
+ <<Create>> PhotoAlbum(String,String,String,String,Integer)
+ <<Create>> PhotoAlbum(String,String,String,String,Integer,List<Photo>)
+ Photo[] getPhotos()
+ void addPhotos(List<Photo>)
+ void addPhotos(Photo[])
}
class example.localservice.SwitchPowerWithBundledPropertyChange {
- PropertyChangeSupport propertyChangeSupport
- boolean target
- boolean status
+ <<Create>> SwitchPowerWithBundledPropertyChange()
+ PropertyChangeSupport getPropertyChangeSupport()
+ void setTarget(boolean)
+ boolean getTarget()
+ boolean getStatus()
}
abstract class org.fourthline.cling.support.avtransport.callback.Next {
- {static} Logger log
# <<Create>> Next(ActionInvocation,ControlPoint)
# <<Create>> Next(ActionInvocation)
+ <<Create>> Next(Service)
+ <<Create>> Next(UnsignedIntegerFourBytes,Service)
+ void success(ActionInvocation)
}
class de.yaacc.util.image.IconDownloadTask {
- BrowseItemAdapter browseItemAdapter
- ListView listView
- int position
- IconDownloadCacheHandler cache
+ <<Create>> IconDownloadTask(ListView,int)
+ <<Create>> IconDownloadTask(BrowseItemAdapter,ListView,int)
# Bitmap doInBackground(Uri)
+ int getPosition()
# void onPostExecute(Bitmap)
}
class de.yaacc.browser.BrowseReceiverDeviceAdapter {
~ LinkedList<Device> devices
- LayoutInflater inflator
- LinkedList<Device> selectedDevices
+ <<Create>> BrowseReceiverDeviceAdapter(Context,Collection<Device>,Collection<Device>)
+ int getCount()
+ Object getItem(int)
+ long getItemId(int)
+ View getView(int,View,ViewGroup)
+ void setDevices(Collection<Device<?,?,?>>)
+ void addSelectedDevice(Device<?,?,?>)
+ void removeSelectedDevice(Device<?,?,?>)
}
class de.yaacc.browser.BrowseReceiverDeviceAdapter.ViewHolder {
~ ImageView icon
~ TextView name
~ CheckBox checkBox
}
interface de.yaacc.util.SwipeReceiver {
~ void onRightToLeftSwipe()
~ void onLeftToRightSwipe()
~ void onTopToBottomSwipe()
~ void onBottomToTopSwipe()
~ void beginOnTouchProcessing(View,MotionEvent)
~ void endOnTouchProcessing(View,MotionEvent)
}
class org.fourthline.cling.support.model.container.StorageVolume {
+ {static} Class CLASS
+ <<Create>> StorageVolume()
+ <<Create>> StorageVolume(Container)
+ <<Create>> StorageVolume(String,Container,String,String,Integer,Long,Long,Long,StorageMedium)
+ <<Create>> StorageVolume(String,String,String,String,Integer,Long,Long,Long,StorageMedium)
+ Long getStorageTotal()
+ StorageVolume setStorageTotal(Long)
+ Long getStorageUsed()
+ StorageVolume setStorageUsed(Long)
+ Long getStorageFree()
+ StorageVolume setStorageFree(Long)
+ StorageMedium getStorageMedium()
+ StorageVolume setStorageMedium(StorageMedium)
}
class org.fourthline.cling.model.types.Base64Datatype {
+ <<Create>> Base64Datatype()
+ Class<byte[]> getValueType()
+ byte[] valueOf(String)
+ String getString(byte[])
}
class org.fourthline.cling.support.model.dlna.types.BufferInfoType {
~ {static} Pattern pattern
- Long dejitterSize
- CodedDataBuffer cdb
- Long targetDuration
- Boolean fullnessReports
+ <<Create>> BufferInfoType(Long)
+ <<Create>> BufferInfoType(Long,CodedDataBuffer,Long,Boolean)
+ {static} BufferInfoType valueOf(String)
+ String getString()
+ Long getDejitterSize()
+ CodedDataBuffer getCdb()
+ Long getTargetDuration()
+ Boolean isFullnessReports()
}
class de.yaacc.browser.ContentListFragment {
+ {static} String CONTENT_LIST_NAVIGATOR
# ListView contentList
~ ContentListClickListener bItemClickListener
- UpnpClient upnpClient
- BrowseItemAdapter bItemAdapter
- DIDLObject selectedDIDLObject
- Navigator navigator
+ void onResume()
- void init(Bundle,View)
+ void onSaveInstanceState(Bundle)
- void showMainFolder()
+ void onClick(View)
+ boolean onContextItemSelected(MenuItem)
+ void onCreate(Bundle)
- void initBrowsItemAdapter(ListView)
+ void onCreateContextMenu(ContextMenu,View,ContextMenuInfo)
+ void populateItemList()
- void clearItemList()
+ void deviceAdded(Device<?,?,?>)
+ void deviceRemoved(Device<?,?,?>)
+ void deviceUpdated(Device<?,?,?>)
+ Navigator getNavigator()
+ void setNavigator(Navigator)
+ View onCreateView(LayoutInflater,ViewGroup,Bundle)
}
interface org.fourthline.cling.UpnpService {
+ UpnpServiceConfiguration getConfiguration()
+ ControlPoint getControlPoint()
+ ProtocolFactory getProtocolFactory()
+ Registry getRegistry()
+ Router getRouter()
+ void shutdown()
}
class org.fourthline.cling.UpnpService.Start {
}
class org.fourthline.cling.UpnpService.Shutdown {
}
class de.yaacc.browser.Position {
- String objectId
- String deviceId
+ <<Create>> Position(String,String)
+ String getObjectId()
+ String getDeviceId()
+ String toString()
}
class org.fourthline.cling.binding.xml.RecoveringUDA10DeviceDescriptorBinderImpl {
- {static} Logger log
+ D describe(D,String)
- String fixGarbageLeadingChars(String)
# String fixGarbageTrailingChars(String,DescriptorBindingException)
# String fixMissingNamespaces(String,DescriptorBindingException)
# void handleInvalidDescriptor(String,DescriptorBindingException)
# D handleInvalidDevice(String,D,ValidationException)
}
class org.fourthline.cling.transport.impl.PullSOAPActionProcessorImpl {
# {static} Logger log
+ void readBody(ActionRequestMessage,ActionInvocation)
+ void readBody(ActionResponseMessage,ActionInvocation)
# void readBodyElement(XmlPullParser)
# void readBodyRequest(XmlPullParser,ActionRequestMessage,ActionInvocation)
# void readBodyResponse(XmlPullParser,ActionInvocation)
# void readActionInputArguments(XmlPullParser,ActionInvocation)
# void readActionOutputArguments(XmlPullParser,ActionInvocation)
# Map<String,String> getMatchingNodes(XmlPullParser,ActionArgument[])
# ActionArgumentValue[] readArgumentValues(XmlPullParser,ActionArgument[])
# String findActionArgumentValue(Map<String,String>,ActionArgument)
# ActionException readFaultElement(XmlPullParser)
}
abstract class org.fourthline.cling.support.xmicrosoft.AbstractMediaReceiverRegistrarService {
# PropertyChangeSupport propertyChangeSupport
- UnsignedIntegerFourBytes authorizationGrantedUpdateID
- UnsignedIntegerFourBytes authorizationDeniedUpdateID
- UnsignedIntegerFourBytes validationSucceededUpdateID
- UnsignedIntegerFourBytes validationRevokedUpdateID
# <<Create>> AbstractMediaReceiverRegistrarService()
# <<Create>> AbstractMediaReceiverRegistrarService(PropertyChangeSupport)
+ PropertyChangeSupport getPropertyChangeSupport()
+ UnsignedIntegerFourBytes getAuthorizationGrantedUpdateID()
+ UnsignedIntegerFourBytes getAuthorizationDeniedUpdateID()
+ UnsignedIntegerFourBytes getValidationSucceededUpdateID()
+ UnsignedIntegerFourBytes getValidationRevokedUpdateID()
+ int isAuthorized(String)
+ int isValidated(String)
+ byte[] registerDevice(byte[])
}
class org.fourthline.cling.model.state.FieldStateVariableAccessor {
# Field field
+ <<Create>> FieldStateVariableAccessor(Field)
+ Field getField()
+ Class<?> getReturnType()
+ Object read(Object)
+ String toString()
}
abstract class org.fourthline.cling.support.shared.AbstractMap {
~ Set<K> keySet
~ Collection<V> valuesCollection
# <<Create>> AbstractMap()
+ void clear()
+ boolean containsKey(Object)
+ boolean containsValue(Object)
+ {abstract}Set<Map.Entry<K,V>> entrySet()
+ boolean equals(Object)
+ V get(Object)
+ int hashCode()
+ boolean isEmpty()
+ Set<K> keySet()
+ V put(K,V)
+ void putAll(Map<? extends K,? extends V>)
+ V remove(Object)
+ int size()
+ String toString()
+ Collection<V> values()
# Object clone()
}
class org.fourthline.cling.support.shared.AbstractMap.SimpleImmutableEntry {
- {static} long serialVersionUID
- K key
- V value
+ <<Create>> SimpleImmutableEntry(K,V)
+ <<Create>> SimpleImmutableEntry(Map.Entry<? extends K,? extends V>)
+ K getKey()
+ V getValue()
+ V setValue(V)
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
class org.fourthline.cling.support.shared.AbstractMap.SimpleEntry {
- {static} long serialVersionUID
- K key
- V value
+ <<Create>> SimpleEntry(K,V)
+ <<Create>> SimpleEntry(Map.Entry<? extends K,? extends V>)
+ K getKey()
+ V getValue()
+ V setValue(V)
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
class org.fourthline.cling.protocol.async.ReceivingSearch {
- {static} Logger log
- {static} boolean LOG_ENABLED
# Random randomGenerator
+ <<Create>> ReceivingSearch(UpnpService,IncomingDatagramMessage<UpnpRequest>)
# void execute()
# boolean waitBeforeExecution()
# void sendResponses(UpnpHeader,NetworkAddress)
# void sendSearchResponseAll(NetworkAddress)
# List<OutgoingSearchResponse> createDeviceMessages(LocalDevice,NetworkAddress)
# List<OutgoingSearchResponse> createServiceTypeMessages(LocalDevice,NetworkAddress)
# void sendSearchResponseRootDevices(NetworkAddress)
# void sendSearchResponseUDN(UDN,NetworkAddress)
# void sendSearchResponseDeviceType(DeviceType,NetworkAddress)
# void sendSearchResponseServiceType(ServiceType,NetworkAddress)
# Location getDescriptorLocation(NetworkAddress,LocalDevice)
# boolean isAdvertisementDisabled(LocalDevice)
# void prepareOutgoingSearchResponse(OutgoingSearchResponse)
}
class org.fourthline.cling.support.avtransport.AVTransportException {
+ <<Create>> AVTransportException(int,String)
+ <<Create>> AVTransportException(int,String,Throwable)
+ <<Create>> AVTransportException(ErrorCode,String)
+ <<Create>> AVTransportException(ErrorCode)
+ <<Create>> AVTransportException(AVTransportErrorCode,String)
+ <<Create>> AVTransportException(AVTransportErrorCode)
}
class de.yaacc.browser.BrowseDeviceAdapter {
~ LinkedList<Device> devices
- LayoutInflater inflator
+ <<Create>> BrowseDeviceAdapter(Context,LinkedList<Device>)
+ int getCount()
+ Object getItem(int)
+ long getItemId(int)
+ View getView(int,View,ViewGroup)
+ void setDevices(Collection<Device>)
}
class de.yaacc.databinding.ActivityBrowseBinding {
- RelativeLayout rootView
+ ImageButton controlDevices
+ ImageButton controlNext
+ ImageButton controlPrev
+ ImageButton controlReceiverDevices
+ ImageButton controlStop
+ RelativeLayout controls
+ ListView itemList
- <<Create>> ActivityBrowseBinding(RelativeLayout,ImageButton,ImageButton,ImageButton,ImageButton,ImageButton,RelativeLayout,ListView)
+ RelativeLayout getRoot()
+ {static} ActivityBrowseBinding inflate(LayoutInflater)
+ {static} ActivityBrowseBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityBrowseBinding bind(View)
}
class org.seamless.xml.XmlPullParserUtils {
- {static} Logger log
~ {static} XmlPullParserFactory xmlPullParserFactory
+ {static} XmlPullParser createParser(String)
+ {static} XmlPullParser createParser()
+ {static} XmlSerializer createSerializer()
+ {static} void setSerializerIndentation(XmlSerializer,int)
+ {static} void skipTag(XmlPullParser,String)
+ {static} void searchTag(XmlPullParser,String)
+ {static} void serializeIfNotNullOrEmpty(XmlSerializer,String,String,String)
+ {static} boolean isNullOrEmpty(String)
+ {static} void serializeIfNotEqual(XmlSerializer,String,String,Object,Object)
+ {static} String fixXMLEntities(String)
}
class org.fourthline.cling.model.message.header.ContentTypeHeader {
+ {static} MimeType DEFAULT_CONTENT_TYPE
+ {static} MimeType DEFAULT_CONTENT_TYPE_UTF8
+ <<Create>> ContentTypeHeader()
+ <<Create>> ContentTypeHeader(MimeType)
+ <<Create>> ContentTypeHeader(String)
+ void setString(String)
+ String getString()
+ boolean isUDACompliantXML()
+ boolean isText()
}
enum org.fourthline.cling.support.model.TransportStatus {
+  OK
+  ERROR_OCCURRED
+  CUSTOM
~ String value
~ <<Create>> TransportStatus()
+ String getValue()
+ TransportStatus setValue(String)
+ {static} TransportStatus valueOrCustomOf(String)
}
class de.yaacc.player.MultiContentPlayerActivity {
- PlayerService playerService
+ void onServiceConnected(ComponentName,IBinder)
+ void onServiceDisconnected(ComponentName)
# void initialize()
- void exit()
# void onDestroy()
# void onCreate(Bundle)
- Player getPlayer()
+ boolean onCreateOptionsMenu(Menu)
+ boolean onOptionsItemSelected(MenuItem)
}
interface org.fourthline.cling.binding.LocalServiceBinder {
+ LocalService read(Class<?>)
+ LocalService read(Class<?>,ServiceId,ServiceType,boolean,Class[])
}
class example.mediaserver.MediaServerSampleData {
+ {static} LocalService readService(Class<?>)
+ {static} LocalDevice createDevice(Class<?>)
+ {static} ProtocolInfos createSourceProtocols()
}
class example.mediarenderer.MyRendererStopped {
+ <<Create>> MyRendererStopped(AVTransport)
+ void onEntry()
+ void onExit()
+ Class<? extends AbstractState> setTransportURI(URI,String)
+ Class<? extends AbstractState> stop()
+ Class<? extends AbstractState> play(String)
+ Class<? extends AbstractState> next()
+ Class<? extends AbstractState> previous()
+ Class<? extends AbstractState> seek(SeekMode,String)
}
class de.yaacc.util.image.IconDownloadCacheHandler {
- LruCache<String,Bitmap> cache
- {static} IconDownloadCacheHandler instance
- <<Create>> IconDownloadCacheHandler()
+ {static} IconDownloadCacheHandler getInstance()
+ Bitmap getBitmap(Uri,int,int)
+ void addBitmap(Uri,int,int,Bitmap)
+ void resetCache()
- void initializeCache()
}
class org.fourthline.cling.binding.staging.MutableStateVariable {
+ String name
+ Datatype dataType
+ String defaultValue
+ List<String> allowedValues
+ MutableAllowedValueRange allowedValueRange
+ StateVariableEventDetails eventDetails
+ StateVariable build()
}
class org.fourthline.cling.model.message.header.CallbackHeader {
- {static} Logger log
+ <<Create>> CallbackHeader()
+ <<Create>> CallbackHeader(List<URL>)
+ <<Create>> CallbackHeader(URL)
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.support.model.dlna.types.AvailableSeekRangeType {
- Mode modeFlag
- NormalPlayTimeRange normalPlayTimeRange
- BytesRange bytesRange
+ <<Create>> AvailableSeekRangeType(Mode,NormalPlayTimeRange)
+ <<Create>> AvailableSeekRangeType(Mode,BytesRange)
+ <<Create>> AvailableSeekRangeType(Mode,NormalPlayTimeRange,BytesRange)
+ NormalPlayTimeRange getNormalPlayTimeRange()
+ BytesRange getBytesRange()
+ Mode getModeFlag()
}
enum org.fourthline.cling.support.model.dlna.types.Mode {
+  MODE_0
+  MODE_1
}
class de.yaacc.upnp.callback.contentdirectory.ContentDirectoryBrowseActionCallback {
- ContentDirectoryBrowseResult browsingResult
+ <<Create>> ContentDirectoryBrowseActionCallback(Service<?,?>,String,BrowseFlag,String,long,Long,ContentDirectoryBrowseResult,SortCriterion)
+ boolean receivedRaw(ActionInvocation,BrowseResult)
+ void received(ActionInvocation,DIDLContent)
+ void updateStatus(Status)
+ void failure(ActionInvocation,UpnpResponse,String)
+ Status getStatus()
+ DIDLContent getResult()
+ UpnpFailure getUpnpFailure()
}
class org.fourthline.cling.binding.staging.MutableAllowedValueRange {
+ Long minimum
+ Long maximum
+ Long step
}
class org.fourthline.cling.support.model.dlna.DLNAProtocolInfo {
# Map<DLNAAttribute.Type,DLNAAttribute> attributes
+ <<Create>> DLNAProtocolInfo(String)
+ <<Create>> DLNAProtocolInfo(MimeType)
+ <<Create>> DLNAProtocolInfo(DLNAProfiles)
+ <<Create>> DLNAProtocolInfo(DLNAProfiles,EnumMap<DLNAAttribute.Type,DLNAAttribute>)
+ <<Create>> DLNAProtocolInfo(Protocol,String,String,String)
+ <<Create>> DLNAProtocolInfo(Protocol,String,String,EnumMap<DLNAAttribute.Type,DLNAAttribute>)
+ <<Create>> DLNAProtocolInfo(ProtocolInfo)
+ boolean contains(DLNAAttribute.Type)
+ DLNAAttribute getAttribute(DLNAAttribute.Type)
+ Map<DLNAAttribute.Type,DLNAAttribute> getAttributes()
# String getAttributesString()
# void parseAdditionalInfo()
}
class org.fourthline.cling.model.message.discovery.OutgoingNotificationRequestRootDevice {
+ <<Create>> OutgoingNotificationRequestRootDevice(Location,LocalDevice,NotificationSubtype)
}
class org.seamless.http.Query {
# Map<String,List<String>> parameters
+ <<Create>> Query()
+ <<Create>> Query(Map<String,String[]>)
+ <<Create>> Query(URL)
+ <<Create>> Query(String)
+ {static} Query newInstance(Map<String,List<String>>)
+ String get(String)
+ String[] getValues(String)
+ List<String> getValuesAsList(String)
+ Enumeration<String> getNames()
+ Map<String,String[]> getMap()
+ Map<String,List<String>> getMapWithLists()
+ boolean isEmpty()
+ Query cloneAndAdd(String,String)
+ String toString()
}
class de.yaacc.databinding.ActivityTabBrowseBinding {
- CoordinatorLayout rootView
+ TabLayout browserTabLayout
+ ViewPager2 browserTabPager
- <<Create>> ActivityTabBrowseBinding(CoordinatorLayout,TabLayout,ViewPager2)
+ CoordinatorLayout getRoot()
+ {static} ActivityTabBrowseBinding inflate(LayoutInflater)
+ {static} ActivityTabBrowseBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityTabBrowseBinding bind(View)
}
class de.yaacc.databinding.ActivityMusicPlayerBinding {
- RelativeLayout rootView
+ ImageButton musicActivityControlExit
+ ImageButton musicActivityControlNext
+ ImageButton musicActivityControlPause
+ ImageButton musicActivityControlPlay
+ ImageButton musicActivityControlPrev
+ ImageButton musicActivityControlStop
+ RelativeLayout musicActivityControls
+ TextView musicActivityCurrentItem
+ TextView musicActivityDuration
+ TextView musicActivityElapsedTime
+ ImageView musicActivityImageView
+ TextView musicActivityNextItem
+ TextView musicActivityNextLabel
+ TextView musicActivityPosition
+ SeekBar musicActivitySeekBar
+ RelativeLayout musicActivitySeekBarLayout
+ TextView musicActivitySeparator
+ Space musicActivitySeparator2
+ Space musicActivitySeparator3
- <<Create>> ActivityMusicPlayerBinding(RelativeLayout,ImageButton,ImageButton,ImageButton,ImageButton,ImageButton,ImageButton,RelativeLayout,TextView,TextView,TextView,ImageView,TextView,TextView,TextView,SeekBar,RelativeLayout,TextView,Space,Space)
+ RelativeLayout getRoot()
+ {static} ActivityMusicPlayerBinding inflate(LayoutInflater)
+ {static} ActivityMusicPlayerBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityMusicPlayerBinding bind(View)
}
class org.fourthline.cling.test.resources.UDA10DeviceDescriptorParsingTest {
+ void readUDA10DescriptorDOM()
+ void readUDA10DescriptorSAX()
+ void writeUDA10Descriptor()
+ void writeUDA10DescriptorWithProvider()
+ void readUDA10DescriptorWithURLBase()
+ void readUDA10DescriptorWithURLBase2()
+ void readUDA10DescriptorWithEmptyURLBase()
}
class de.yaacc.browser.PlayerListFragment {
# ListView contentList
~ PlayerListItemClickListener itemClickListener
- UpnpClient upnpClient
- PlayerListItemAdapter itemAdapter
- Player selectedPlayer
- void init(Bundle,View)
+ void onResume()
+ void onSaveInstanceState(Bundle)
- void populatePlayerList()
- SharedPreferences getPreferences()
+ void onCreate(Bundle)
+ void onCreateContextMenu(ContextMenu,View,ContextMenu.ContextMenuInfo)
+ boolean onContextItemSelected(MenuItem)
+ void deviceAdded(Device<?,?,?>)
+ void deviceRemoved(Device<?,?,?>)
+ void deviceUpdated(Device<?,?,?>)
+ View onCreateView(LayoutInflater,ViewGroup,Bundle)
}
enum org.fourthline.cling.support.model.SeekMode {
+  TRACK_NR
+  ABS_TIME
+  REL_TIME
+  ABS_COUNT
+  REL_COUNT
+  CHANNEL_FREQ
+  TAPE_INDEX
+  FRAME
- String protocolString
~ <<Create>> SeekMode(String)
+ String toString()
+ {static} SeekMode valueOrExceptionOf(String)
}
class org.fourthline.cling.model.resource.Resource {
- URI pathQuery
- M model
+ <<Create>> Resource(URI,M)
+ URI getPathQuery()
+ M getModel()
+ boolean matches(URI)
+ void maintain(List<Runnable>,ExpirationDetails)
+ void shutdown()
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
class org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueChannelMute {
+ <<Create>> EventedValueChannelMute(ChannelMute)
+ <<Create>> EventedValueChannelMute(Map.Entry<String,String>[])
# ChannelMute valueOf(Map.Entry<String,String>[])
+ Map.Entry<String,String>[] getAttributes()
+ String toString()
# Datatype getDatatype()
}
abstract class org.fourthline.cling.support.avtransport.callback.Play {
- {static} Logger log
+ <<Create>> Play(Service)
+ <<Create>> Play(Service,String)
+ <<Create>> Play(UnsignedIntegerFourBytes,Service)
+ <<Create>> Play(UnsignedIntegerFourBytes,Service,String)
+ void success(ActionInvocation)
}
class example.messagebox.MessageBoxSampleData {
+ {static} LocalService readService(Class<?>)
+ {static} LocalDevice createDevice(Class<?>)
}
class example.messagebox.MessageBoxSampleData.MessageBoxService {
+ void addMessage(String,String,String)
# void checkMessage(String,String,String)
}
class org.fourthline.cling.model.message.header.ServerHeader {
+ <<Create>> ServerHeader()
+ <<Create>> ServerHeader(ServerClientTokens)
+ void setString(String)
+ String getString()
}
class org.seamless.xhtml.Body {
+ <<Create>> Body(XPath,Element)
}
class org.fourthline.cling.support.model.container.MovieGenre {
+ {static} Class CLASS
+ <<Create>> MovieGenre()
+ <<Create>> MovieGenre(Container)
+ <<Create>> MovieGenre(String,Container,String,String,Integer)
+ <<Create>> MovieGenre(String,String,String,String,Integer)
}
class org.fourthline.cling.model.message.gena.IncomingSubscribeRequestMessage {
- LocalService service
+ <<Create>> IncomingSubscribeRequestMessage(StreamRequestMessage,LocalService)
+ LocalService getService()
+ List<URL> getCallbackURLs()
+ boolean hasNotificationHeader()
+ Integer getRequestedTimeoutSeconds()
+ String getSubscriptionId()
}
class de.yaacc.browser.ReceiverListFragment {
- {static} String RECEIVER_LIST_NAVIGATOR
# ListView contentList
~ BrowseReceiverDeviceClickListener bReceiverDeviceClickListener
- UpnpClient upnpClient
- Device selectedDevice
+ void onResume()
- void init(Bundle,View)
- SharedPreferences getPreferences()
+ void onCreate(Bundle)
- void populateReceiverDeviceList()
+ void deviceAdded(Device<?,?,?>)
+ void deviceRemoved(Device<?,?,?>)
+ void deviceUpdated(Device<?,?,?>)
+ void onCreateContextMenu(ContextMenu,View,ContextMenu.ContextMenuInfo)
+ boolean onContextItemSelected(MenuItem)
+ View onCreateView(LayoutInflater,ViewGroup,Bundle)
}
abstract class org.fourthline.cling.model.types.csv.CSV {
# Datatype.Builtin datatype
+ <<Create>> CSV()
+ <<Create>> CSV(String)
# List parseString(String)
# Datatype.Builtin getBuiltinDatatype()
+ String toString()
}
class org.fourthline.cling.model.action.MethodActionExecutor {
- {static} Logger log
# Method method
+ <<Create>> MethodActionExecutor(Method)
+ <<Create>> MethodActionExecutor(Map<ActionArgument<LocalService>,StateVariableAccessor>,Method)
+ Method getMethod()
# void execute(ActionInvocation<LocalService>,Object)
# boolean isUseOutputArgumentAccessors(ActionInvocation<LocalService>)
# Object[] createInputArgumentValues(ActionInvocation<LocalService>,Method)
}
class de.yaacc.settings.SettingsActivity {
+ void onCreate(Bundle)
# void onPause()
}
class org.fourthline.cling.transport.EnableRouter {
}
enum org.fourthline.cling.support.model.dlna.DLNAOperations {
+  NONE
+  RANGE
+  TIMESEEK
- int code
~ <<Create>> DLNAOperations(int)
+ int getCode()
+ {static} DLNAOperations valueOf(int)
}
class org.seamless.http.HttpFetch {
+ {static} Representation<byte[]> fetchBinary(URL)
+ {static} Representation<byte[]> fetchBinary(URL,int,int)
+ {static} Representation<String> fetchString(URL,int,int)
+ {static} Representation<E> fetch(URL,int,int,RepresentationFactory<E>)
+ {static} Representation<E> fetch(URL,String,int,int,RepresentationFactory<E>)
+ {static} void validate(URL)
}
interface org.seamless.http.HttpFetch.RepresentationFactory {
+ Representation<E> createRepresentation(URLConnection,InputStream)
}
interface org.fourthline.cling.model.Validatable {
+ List<ValidationError> validate()
}
interface de.yaacc.upnp.server.avtransport.AvTransportStateMachine {
+ {abstract}void syncPlay(String,String,String,String,String)
+ {abstract}void syncPause(String,String)
+ {abstract}void syncStop(String,String)
}
class org.fourthline.cling.test.gena.EventXMLProcessingTest {
+ {static} String EVENT_MSG
+ void writeReadRequest()
+ void writeReadRequestPull()
+ void writeReadRequestRecovering()
+ void writeReadRequest(MockUpnpService)
}
class org.fourthline.cling.test.control.ActionInvokeOutgoingTest {
+ {static} String RESPONSE_SUCCESSFUL
+ {static} String RESPONSE_QUERY_VARIABLE
+ {static} String RESPONSE_FAILURE
+ {static} String RESPONSE_NEGATIVE_VALUE
+ void callLocalGet()
+ void callLocalWrongAction()
+ void callLocalSetException()
+ void callRemoteGet()
+ void callRemoteGetFailure()
+ void callRemoteGetNotFoundFailure()
+ void callRemoteGetNoResponse()
+ void callRemoteNegativeValue()
+ void callRemoteQueryStateVariable()
}
class org.fourthline.cling.support.model.container.Album {
+ {static} Class CLASS
+ <<Create>> Album()
+ <<Create>> Album(Container)
+ <<Create>> Album(String,Container,String,String,Integer)
+ <<Create>> Album(String,String,String,String,Integer)
+ String getDescription()
+ Album setDescription(String)
+ String getLongDescription()
+ Album setLongDescription(String)
+ StorageMedium getStorageMedium()
+ Album setStorageMedium(StorageMedium)
+ String getDate()
+ Album setDate(String)
+ URI getFirstRelation()
+ URI[] getRelations()
+ Album setRelations(URI[])
+ String getFirstRights()
+ String[] getRights()
+ Album setRights(String[])
+ Person getFirstContributor()
+ Person[] getContributors()
+ Album setContributors(Person[])
+ Person getFirstPublisher()
+ Person[] getPublishers()
+ Album setPublishers(Person[])
}
class org.fourthline.cling.support.model.dlna.DLNAProfileAttribute {
+ <<Create>> DLNAProfileAttribute()
+ <<Create>> DLNAProfileAttribute(DLNAProfiles)
+ void setString(String,String)
+ String getString()
}
class de.yaacc.R {
}
class de.yaacc.R.array {
+ {static} int duration_entries
+ {static} int duration_entries_with_never
+ {static} int duration_values
+ {static} int duration_values_with_never
}
class de.yaacc.R.attr {
+ {static} int font
+ {static} int fontProviderAuthority
+ {static} int fontProviderCerts
+ {static} int fontProviderFetchStrategy
+ {static} int fontProviderFetchTimeout
+ {static} int fontProviderPackage
+ {static} int fontProviderQuery
+ {static} int fontStyle
+ {static} int fontWeight
}
class de.yaacc.R.bool {
+ {static} int abc_action_bar_embed_tabs
}
class de.yaacc.R.color {
+ {static} int ic_launcher_background
+ {static} int notification_action_color_filter
+ {static} int notification_icon_bg_color
+ {static} int notification_material_background_media_default_color
+ {static} int primary_text_default_material_dark
+ {static} int ripple_material_light
+ {static} int secondary_text_default_material_dark
+ {static} int secondary_text_default_material_light
}
class de.yaacc.R.dimen {
+ {static} int compat_button_inset_horizontal_material
+ {static} int compat_button_inset_vertical_material
+ {static} int compat_button_padding_horizontal_material
+ {static} int compat_button_padding_vertical_material
+ {static} int compat_control_corner_material
+ {static} int notification_action_icon_size
+ {static} int notification_action_text_size
+ {static} int notification_big_circle_margin
+ {static} int notification_content_margin_start
+ {static} int notification_large_icon_height
+ {static} int notification_large_icon_width
+ {static} int notification_main_column_padding_top
+ {static} int notification_media_narrow_margin
+ {static} int notification_right_icon_size
+ {static} int notification_right_side_padding_top
+ {static} int notification_small_icon_background_padding
+ {static} int notification_small_icon_size_as_large
+ {static} int notification_subtext_size
+ {static} int notification_top_pad
+ {static} int notification_top_pad_large_text
}
class de.yaacc.R.drawable {
+ {static} int button_cancel
+ {static} int cdtrack
+ {static} int device
+ {static} int device_48_48
+ {static} int download
+ {static} int folder
+ {static} int ic_action_search
+ {static} int ic_launcher_background
+ {static} int ic_launcher_foreground
+ {static} int ic_notification_default
+ {static} int image
+ {static} int laptop
+ {static} int laptop_48_48
+ {static} int notification_action_background
+ {static} int notification_bg
+ {static} int notification_bg_low
+ {static} int notification_bg_low_normal
+ {static} int notification_bg_low_pressed
+ {static} int notification_bg_normal
+ {static} int notification_bg_normal_pressed
+ {static} int notification_icon_background
+ {static} int notification_template_icon_bg
+ {static} int notification_template_icon_low_bg
+ {static} int notification_tile_bg
+ {static} int notify_panel_notification_icon_bg
+ {static} int player_end
+ {static} int player_pause
+ {static} int player_play
+ {static} int player_start
+ {static} int player_stop
+ {static} int playlist
+ {static} int refresh
+ {static} int txt
+ {static} int unknown
+ {static} int video
+ {static} int yaacc120_24_bmp
+ {static} int yaacc120_24_png
+ {static} int yaacc120_8_bmp
+ {static} int yaacc120_8_png
+ {static} int yaacc120_jpg
+ {static} int yaacc192_32
+ {static} int yaacc32_24_bmp
+ {static} int yaacc32_24_png
+ {static} int yaacc32_8_bmp
+ {static} int yaacc32_8_png
+ {static} int yaacc32_jpg
+ {static} int yaacc48_24_bmp
+ {static} int yaacc48_24_png
+ {static} int yaacc48_8_bmp
+ {static} int yaacc48_8_png
+ {static} int yaacc48_jpg
}
class de.yaacc.R.id {
+ {static} int Separator
+ {static} int about_descrip
+ {static} int action0
+ {static} int action_container
+ {static} int action_divider
+ {static} int action_image
+ {static} int action_text
+ {static} int actions
+ {static} int async
+ {static} int avtransportPlayerActivityControlExit
+ {static} int avtransportPlayerActivityControlMuteSwitch
+ {static} int avtransportPlayerActivityControlNext
+ {static} int avtransportPlayerActivityControlPause
+ {static} int avtransportPlayerActivityControlPlay
+ {static} int avtransportPlayerActivityControlPrev
+ {static} int avtransportPlayerActivityControlSeekBar
+ {static} int avtransportPlayerActivityControlStop
+ {static} int avtransportPlayerActivityControlVolumeSeekBar
+ {static} int avtransportPlayerActivityControlVolumeTextView
+ {static} int avtransportPlayerActivityControls
+ {static} int avtransportPlayerActivityCurrentItem
+ {static} int avtransportPlayerActivityDuration
+ {static} int avtransportPlayerActivityElapsedTime
+ {static} int avtransportPlayerActivityImageView
+ {static} int avtransportPlayerActivityNextItem
+ {static} int avtransportPlayerActivityNextLabel
+ {static} int avtransportPlayerActivityPosition
+ {static} int avtransportPlayerActivitySeekBarLayout
+ {static} int avtransportPlayerActivitySeparator
+ {static} int avtransportPlayerActivitySeparator2
+ {static} int avtransportPlayerActivitySeparator3
+ {static} int blocking
+ {static} int browseItemCheckbox
+ {static} int browseItemIcon
+ {static} int browseItemName
+ {static} int browserTabContent
+ {static} int browserTabHost
+ {static} int browserTabPlayer
+ {static} int browserTabReceiver
+ {static} int browserTabServer
+ {static} int cancel_action
+ {static} int chronometer
+ {static} int contentList
+ {static} int controlDevices
+ {static} int controlNext
+ {static} int controlPrev
+ {static} int controlReceiverDevices
+ {static} int controlStop
+ {static} int controls
+ {static} int dialogProgressBar
+ {static} int end_padder
+ {static} int forever
+ {static} int icon
+ {static} int icon_group
+ {static} int imageView
+ {static} int info
+ {static} int italic
+ {static} int itemList
+ {static} int layout
+ {static} int line1
+ {static} int line3
+ {static} int media_actions
+ {static} int menu_exit
+ {static} int menu_next
+ {static} int menu_pause
+ {static} int menu_play
+ {static} int menu_previous
+ {static} int menu_settings
+ {static} int menu_stop
+ {static} int multiContentPlayerActivityControlExit
+ {static} int multiContentPlayerActivityControlNext
+ {static} int multiContentPlayerActivityControlPause
+ {static} int multiContentPlayerActivityControlPlay
+ {static} int multiContentPlayerActivityControlPrev
+ {static} int multiContentPlayerActivityControlStop
+ {static} int multiContentPlayerActivityControls
+ {static} int multiContentPlayerActivityImageView
+ {static} int musicActivityControlExit
+ {static} int musicActivityControlNext
+ {static} int musicActivityControlPause
+ {static} int musicActivityControlPlay
+ {static} int musicActivityControlPrev
+ {static} int musicActivityControlStop
+ {static} int musicActivityControls
+ {static} int musicActivityCurrentItem
+ {static} int musicActivityDuration
+ {static} int musicActivityElapsedTime
+ {static} int musicActivityImageView
+ {static} int musicActivityNextItem
+ {static} int musicActivityNextLabel
+ {static} int musicActivityPosition
+ {static} int musicActivitySeekBar
+ {static} int musicActivitySeekBarLayout
+ {static} int musicActivitySeparator
+ {static} int musicActivitySeparator2
+ {static} int musicActivitySeparator3
+ {static} int normal
+ {static} int notification_background
+ {static} int notification_main_column
+ {static} int notification_main_column_container
+ {static} int playerList
+ {static} int providerEnabled
+ {static} int receiverEnabled
+ {static} int receiverList
+ {static} int right_icon
+ {static} int right_side
+ {static} int serverList
+ {static} int startServer
+ {static} int status_bar_latest_event_content
+ {static} int stopServer
+ {static} int text
+ {static} int text2
+ {static} int thirdPartieMusicActivityControls
+ {static} int thirdPratieMusicActivityControlExit
+ {static} int thirdPratieMusicActivityControlNext
+ {static} int thirdPratieMusicActivityControlPause
+ {static} int thirdPratieMusicActivityControlPlay
+ {static} int thirdPratieMusicActivityControlPrev
+ {static} int thirdPratieMusicActivityControlStop
+ {static} int thirdPratieMusicActivityImageView
+ {static} int time
+ {static} int title
+ {static} int yaaccLog_content
+ {static} int yaaccLog_scrollView
+ {static} int yaacc_about
+ {static} int yaacc_log
}
class de.yaacc.R.integer {
+ {static} int cancel_button_image_alpha
+ {static} int status_bar_notification_info_maxnum
}
class de.yaacc.R.layout {
+ {static} int about
+ {static} int activity_avtransport_player
+ {static} int activity_browse
+ {static} int activity_content_list
+ {static} int activity_image_viewer
+ {static} int activity_multi_content_player
+ {static} int activity_music_player
+ {static} int activity_player_list
+ {static} int activity_receiver_list
+ {static} int activity_server_list
+ {static} int activity_tab_browse
+ {static} int activity_third_partie_music_player
+ {static} int activity_yaacc_log
+ {static} int activity_yaacc_upnp_server_control
+ {static} int browse_item
+ {static} int browse_item_checkable
+ {static} int notification_action
+ {static} int notification_action_tombstone
+ {static} int notification_media_action
+ {static} int notification_media_cancel_action
+ {static} int notification_template_big_media
+ {static} int notification_template_big_media_custom
+ {static} int notification_template_big_media_narrow
+ {static} int notification_template_big_media_narrow_custom
+ {static} int notification_template_custom_big
+ {static} int notification_template_icon_group
+ {static} int notification_template_lines_media
+ {static} int notification_template_media
+ {static} int notification_template_media_custom
+ {static} int notification_template_part_chronometer
+ {static} int notification_template_part_time
+ {static} int yaacc_progress_dialog
}
class de.yaacc.R.menu {
+ {static} int activity_avtransport_player
+ {static} int activity_image_viewer
+ {static} int activity_main
+ {static} int activity_multi_content_player
+ {static} int activity_music_player
+ {static} int activity_third_partie_music_player
+ {static} int activity_yaacc_upnp_server_control
}
class de.yaacc.R.mipmap {
+ {static} int ic_launcher
+ {static} int ic_launcher_foreground
+ {static} int ic_launcher_round
}
class de.yaacc.R.string {
+ {static} int activity_remote_player_mute
+ {static} int activity_remote_player_volume
+ {static} int albums
+ {static} int all
+ {static} int all_images
+ {static} int app_descrip
+ {static} int app_name
+ {static} int artists
+ {static} int avtransportPlayerActivityImageView
+ {static} int avtransportPlayerActivityNextLabel
+ {static} int browse_button_devices
+ {static} int browse_button_next
+ {static} int browse_button_prev
+ {static} int browse_button_stop
+ {static} int browse_context_add_to_playplist
+ {static} int browse_context_control_device
+ {static} int browse_context_download
+ {static} int browse_context_play
+ {static} int browse_context_play_all
+ {static} int browse_context_title
+ {static} int browse_main_folder
+ {static} int browse_no_content_found
+ {static} int bucket_names
+ {static} int can_not_start_activity
+ {static} int error_no_activity_found
+ {static} int error_no_receiver_device_found
+ {static} int error_upnp_generic
+ {static} int error_upnp_specific
+ {static} int exit
+ {static} int exitActivity
+ {static} int genres
+ {static} int icon
+ {static} int image_viewer_settings_duration
+ {static} int image_viewer_settings_duration_key
+ {static} int images
+ {static} int logContent
+ {static} int menu_settings
+ {static} int multiContentPlayerActivityImageView
+ {static} int music
+ {static} int musicActivityImageView
+ {static} int musicActivityNextLabel
+ {static} int next
+ {static} int no_valid_uri_data_found_to_display
+ {static} int not_yet_implemented
+ {static} int open
+ {static} int pause
+ {static} int play
+ {static} int playerCurrentItem
+ {static} int playerNameAvTransport
+ {static} int playerNameImage
+ {static} int playerNameMultiContent
+ {static} int playerNameMusic
+ {static} int playerNextItem
+ {static} int playerPosition
+ {static} int playerTimeDuration
+ {static} int playerTimeElapsed
+ {static} int playerTimeSeparator
+ {static} int playerTiming
+ {static} int previous
+ {static} int settings_audio_app
+ {static} int settings_audio_app_off
+ {static} int settings_audio_app_on
+ {static} int settings_audio_chkbx
+ {static} int settings_browse_audio_off
+ {static} int settings_browse_audio_on
+ {static} int settings_browse_image_off
+ {static} int settings_browse_image_on
+ {static} int settings_browse_load_threads
+ {static} int settings_browse_load_threads_key
+ {static} int settings_browse_load_threads_summ
+ {static} int settings_browse_thumbnails_coverlookup_chkbx
+ {static} int settings_browse_thumbnails_coverlookup_off
+ {static} int settings_browse_thumbnails_coverlookup_on
+ {static} int settings_browse_thumbnails_off
+ {static} int settings_browse_thumbnails_on
+ {static} int settings_browse_video_off
+ {static} int settings_browse_video_on
+ {static} int settings_category_browsing
+ {static} int settings_category_playing
+ {static} int settings_category_send_rec
+ {static} int settings_category_synchronization
+ {static} int settings_change_provider
+ {static} int settings_change_receiver
+ {static} int settings_default_duration
+ {static} int settings_default_duration_key
+ {static} int settings_default_playback_delay
+ {static} int settings_default_playback_delay_key
+ {static} int settings_device_playback_offset
+ {static} int settings_device_playback_offset_key
+ {static} int settings_device_playback_offset_summ
+ {static} int settings_image_app
+ {static} int settings_image_app_off
+ {static} int settings_image_app_on
+ {static} int settings_image_chkbx
+ {static} int settings_local_server_autostart_activated
+ {static} int settings_local_server_autostart_chkbx
+ {static} int settings_local_server_autostart_deactivated
+ {static} int settings_local_server_chkbx
+ {static} int settings_local_server_mediastore
+ {static} int settings_local_server_name
+ {static} int settings_local_server_name_key
+ {static} int settings_local_server_provider_chkbx
+ {static} int settings_local_server_provider_off
+ {static} int settings_local_server_provider_on
+ {static} int settings_local_server_receiver_chkbx
+ {static} int settings_local_server_receiver_off
+ {static} int settings_local_server_receiver_on
+ {static} int settings_local_server_serve_images_chkbx
+ {static} int settings_local_server_serve_images_off
+ {static} int settings_local_server_serve_images_on
+ {static} int settings_local_server_serve_music_chkbx
+ {static} int settings_local_server_serve_music_off
+ {static} int settings_local_server_serve_music_on
+ {static} int settings_local_server_serve_video_chkbx
+ {static} int settings_local_server_serve_video_off
+ {static} int settings_local_server_serve_video_on
+ {static} int settings_local_server_started
+ {static} int settings_local_server_stopped
+ {static} int settings_local_server_testcontent
+ {static} int settings_local_server_testcontent_chkbx
+ {static} int settings_local_server_title
+ {static} int settings_music_player_shuffle_chkbx
+ {static} int settings_music_player_shuffle_off
+ {static} int settings_music_player_shuffle_on
+ {static} int settings_no_content_found
+ {static} int settings_replay_playlist_chkbx
+ {static} int settings_replay_playlist_off
+ {static} int settings_replay_playlist_on
+ {static} int settings_selected_provider_title
+ {static} int settings_selected_receivers_title
+ {static} int settings_sending_upnp_alive_interval
+ {static} int settings_sending_upnp_alive_interval_key
+ {static} int settings_silence_duration
+ {static} int settings_silence_duration_key
+ {static} int settings_thumbnails_chkbx
+ {static} int settings_video_app
+ {static} int settings_video_app_off
+ {static} int settings_video_app_on
+ {static} int settings_video_chkbx
+ {static} int status_bar_notification_info_overflow
+ {static} int stop
+ {static} int title_activity_avtransport_player
+ {static} int title_activity_content_list
+ {static} int title_activity_generic_browse
+ {static} int title_activity_image_viewer
+ {static} int title_activity_image_viewer_settings
+ {static} int title_activity_main
+ {static} int title_activity_multi_content_player
+ {static} int title_activity_music_player
+ {static} int title_activity_player_list
+ {static} int title_activity_receiver_list
+ {static} int title_activity_server_list
+ {static} int title_activity_settings
+ {static} int title_activity_upnp_browser
+ {static} int title_activity_yaacc_log
+ {static} int title_activity_yaacc_upnp_server_control
+ {static} int videos
+ {static} int yaacc_about
+ {static} int yaacc_menu_settings
+ {static} int yaacc_upnp_server_start_server
+ {static} int yaacc_upnp_server_stop_server
}
class de.yaacc.R.style {
+ {static} int AppTheme
+ {static} int TextAppearance_Compat_Notification
+ {static} int TextAppearance_Compat_Notification_Info
+ {static} int TextAppearance_Compat_Notification_Info_Media
+ {static} int TextAppearance_Compat_Notification_Line2
+ {static} int TextAppearance_Compat_Notification_Line2_Media
+ {static} int TextAppearance_Compat_Notification_Media
+ {static} int TextAppearance_Compat_Notification_Time
+ {static} int TextAppearance_Compat_Notification_Time_Media
+ {static} int TextAppearance_Compat_Notification_Title
+ {static} int TextAppearance_Compat_Notification_Title_Media
+ {static} int Theme_Transparent
+ {static} int Widget_Compat_NotificationActionContainer
+ {static} int Widget_Compat_NotificationActionText
}
class de.yaacc.R.styleable {
+ {static} int[] FontFamily
+ {static} int FontFamily_fontProviderAuthority
+ {static} int FontFamily_fontProviderCerts
+ {static} int FontFamily_fontProviderFetchStrategy
+ {static} int FontFamily_fontProviderFetchTimeout
+ {static} int FontFamily_fontProviderPackage
+ {static} int FontFamily_fontProviderQuery
+ {static} int[] FontFamilyFont
+ {static} int FontFamilyFont_font
+ {static} int FontFamilyFont_fontStyle
+ {static} int FontFamilyFont_fontWeight
}
class de.yaacc.R.xml {
+ {static} int preference
}
class org.fourthline.cling.mock.MockProtocolFactory {
+ UpnpService getUpnpService()
+ ReceivingAsync createReceivingAsync(IncomingDatagramMessage)
+ ReceivingSync createReceivingSync(StreamRequestMessage)
+ SendingNotificationAlive createSendingNotificationAlive(LocalDevice)
+ SendingNotificationByebye createSendingNotificationByebye(LocalDevice)
+ SendingSearch createSendingSearch(UpnpHeader,int)
+ SendingAction createSendingAction(ActionInvocation,URL)
+ SendingSubscribe createSendingSubscribe(RemoteGENASubscription)
+ SendingRenewal createSendingRenewal(RemoteGENASubscription)
+ SendingUnsubscribe createSendingUnsubscribe(RemoteGENASubscription)
+ SendingEvent createSendingEvent(LocalGENASubscription)
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportLastChangeParser {
+ {static} String NAMESPACE_URI
+ {static} String SCHEMA_RESOURCE
# String getNamespace()
# Source[] getSchemaSources()
# Set<Class<? extends EventedValue>> getEventedVariables()
}
abstract class org.fourthline.cling.test.data.SampleService {
+ {abstract}ServiceType getServiceType()
+ {abstract}ServiceId getServiceId()
+ {abstract}URI getDescriptorURI()
+ {abstract}URI getControlURI()
+ {abstract}URI getEventSubscriptionURI()
+ {abstract}Action[] getActions()
+ {abstract}StateVariable[] getStateVariables()
+ S newInstanceLocal(Constructor<S>)
+ S newInstanceRemote(Constructor<S>)
}
class de.yaacc.upnp.UpnpFailure {
- ActionInvocation invocation
- UpnpResponse response
- String defaultMsg
+ <<Create>> UpnpFailure(ActionInvocation,UpnpResponse,String)
+ ActionInvocation getInvocation()
+ UpnpResponse getOperation()
+ String getDefaultMsg()
+ String toString()
}
class org.fourthline.cling.model.message.header.USNRootDeviceHeader {
+ {static} String ROOT_DEVICE_SUFFIX
+ <<Create>> USNRootDeviceHeader()
+ <<Create>> USNRootDeviceHeader(UDN)
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.model.profile.HeaderDeviceDetailsProvider {
- DeviceDetails defaultDeviceDetails
- Map<Key,DeviceDetails> headerDetails
+ <<Create>> HeaderDeviceDetailsProvider(DeviceDetails)
+ <<Create>> HeaderDeviceDetailsProvider(DeviceDetails,Map<Key,DeviceDetails>)
+ DeviceDetails getDefaultDeviceDetails()
+ Map<Key,DeviceDetails> getHeaderDetails()
+ DeviceDetails provide(RemoteClientInfo)
}
class org.fourthline.cling.model.profile.HeaderDeviceDetailsProvider.Key {
~ String headerName
~ String valuePattern
~ Pattern pattern
+ <<Create>> Key(String,String)
+ String getHeaderName()
+ String getValuePattern()
+ boolean isValuePatternMatch(String)
}
class org.fourthline.cling.protocol.sync.SendingEvent {
- {static} Logger log
# String subscriptionId
# OutgoingEventRequestMessage[] requestMessages
# UnsignedIntegerFourBytes currentSequence
+ <<Create>> SendingEvent(UpnpService,LocalGENASubscription)
# StreamResponseMessage executeSync()
}
class org.fourthline.cling.protocol.async.SendingNotificationAlive {
- {static} Logger log
+ <<Create>> SendingNotificationAlive(UpnpService,LocalDevice)
# void execute()
# NotificationSubtype getNotificationSubtype()
}
class org.fourthline.cling.ManagedUpnpService {
- {static} Logger log
~ RegistryListenerAdapter registryListenerAdapter
~ Instance<UpnpServiceConfiguration> configuration
~ Instance<Registry> registryInstance
~ Instance<Router> routerInstance
~ Instance<ProtocolFactory> protocolFactoryInstance
~ Instance<ControlPoint> controlPointInstance
~ Event<EnableRouter> enableRouterEvent
~ Event<DisableRouter> disableRouterEvent
+ UpnpServiceConfiguration getConfiguration()
+ ControlPoint getControlPoint()
+ ProtocolFactory getProtocolFactory()
+ Registry getRegistry()
+ Router getRouter()
+ void start(Start)
+ void shutdown()
+ void shutdown(Shutdown)
}
class org.fourthline.cling.ManagedUpnpService.RegistryListenerAdapter {
~ Event<RemoteDeviceDiscovery> remoteDeviceDiscoveryEvent
~ Event<FailedRemoteDeviceDiscovery> failedRemoteDeviceDiscoveryEvent
~ Event<LocalDeviceDiscovery> localDeviceDiscoveryEvent
~ Event<RegistryShutdown> registryShutdownEvent
+ void remoteDeviceDiscoveryStarted(Registry,RemoteDevice)
+ void remoteDeviceDiscoveryFailed(Registry,RemoteDevice,Exception)
+ void remoteDeviceAdded(Registry,RemoteDevice)
+ void remoteDeviceUpdated(Registry,RemoteDevice)
+ void remoteDeviceRemoved(Registry,RemoteDevice)
+ void localDeviceAdded(Registry,LocalDevice)
+ void localDeviceRemoved(Registry,LocalDevice)
+ void beforeShutdown(Registry)
+ void afterShutdown()
}
class org.fourthline.cling.test.data.SampleDeviceRootLocal {
+ <<Create>> SampleDeviceRootLocal(DeviceIdentity,LocalService,Device)
+ {static} void assertLocalResourcesMatch(Resource[])
}
class org.seamless.util.URIUtil {
+ {static} BitSet ALLOWED
+ {static} BitSet PATH_SEGMENT
+ {static} BitSet PATH_PARAM_NAME
+ {static} BitSet PATH_PARAM_VALUE
+ {static} BitSet QUERY
+ {static} BitSet FRAGMENT
+ {static} URI createAbsoluteURI(URI,String)
+ {static} URI createAbsoluteURI(URI,URI)
+ {static} URL createAbsoluteURL(URL,String)
+ {static} URL createAbsoluteURL(URL,URI)
+ {static} URL createAbsoluteURL(URI,URI)
+ {static} URL createAbsoluteURL(InetAddress,int,URI)
+ {static} URI createRelativePathURI(URI)
+ {static} URI createRelativeURI(URI,URI)
+ {static} URI createRelativeURI(URL,URL)
+ {static} URI createRelativeURI(URI,URL)
+ {static} URI createRelativeURI(URL,URI)
+ {static} boolean isAbsoluteURI(String)
+ {static} void assertRelativeURI(String,URI)
+ {static} URL toURL(URI)
+ {static} URI toURI(URL)
+ {static} String percentEncode(String)
+ {static} String percentDecode(String)
+ {static} String encodePathSegment(String)
+ {static} String encodePathParamName(String)
+ {static} String encodePathParamValue(String)
+ {static} String encodeQueryNameOrValue(String)
+ {static} String encodeFragment(String)
+ {static} String encode(BitSet,String,String)
}
class org.fourthline.cling.support.model.dlna.message.header.GetAvailableSeekRangeHeader {
+ <<Create>> GetAvailableSeekRangeHeader()
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.model.types.UnsignedIntegerOneByte {
+ <<Create>> UnsignedIntegerOneByte(long)
+ <<Create>> UnsignedIntegerOneByte(String)
+ Bits getBits()
}
class de.yaacc.databinding.ActivityMusicPlayerBinding {
- RelativeLayout rootView
+ ImageButton musicActivityControlExit
+ ImageButton musicActivityControlNext
+ ImageButton musicActivityControlPause
+ ImageButton musicActivityControlPlay
+ ImageButton musicActivityControlPrev
+ ImageButton musicActivityControlStop
+ RelativeLayout musicActivityControls
+ TextView musicActivityCurrentItem
+ TextView musicActivityDuration
+ TextView musicActivityElapsedTime
+ ImageView musicActivityImageView
+ TextView musicActivityNextItem
+ TextView musicActivityNextLabel
+ TextView musicActivityPosition
+ SeekBar musicActivitySeekBar
+ RelativeLayout musicActivitySeekBarLayout
+ TextView musicActivitySeparator
+ Space musicActivitySeparator2
+ Space musicActivitySeparator3
- <<Create>> ActivityMusicPlayerBinding(RelativeLayout,ImageButton,ImageButton,ImageButton,ImageButton,ImageButton,ImageButton,RelativeLayout,TextView,TextView,TextView,ImageView,TextView,TextView,TextView,SeekBar,RelativeLayout,TextView,Space,Space)
+ RelativeLayout getRoot()
+ {static} ActivityMusicPlayerBinding inflate(LayoutInflater)
+ {static} ActivityMusicPlayerBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityMusicPlayerBinding bind(View)
}
class org.fourthline.cling.protocol.sync.ReceivingRetrieval {
- {static} Logger log
+ <<Create>> ReceivingRetrieval(UpnpService,StreamRequestMessage)
# StreamResponseMessage executeSync()
# StreamResponseMessage createResponse(URI,Resource)
# Resource onResourceNotFound(URI)
}
abstract class org.fourthline.cling.protocol.SendingAsync {
- {static} Logger log
- UpnpService upnpService
# <<Create>> SendingAsync(UpnpService)
+ UpnpService getUpnpService()
+ void run()
# {abstract}void execute()
+ String toString()
}
class org.fourthline.cling.support.messagebox.parser.MessageElement {
+ {static} String XPATH_PREFIX
+ <<Create>> MessageElement(XPath,Element)
# String prefix(String)
# Builder<MessageElement> createParentBuilder(DOMElement)
# ArrayBuilder<MessageElement> createChildBuilder(DOMElement)
}
class org.seamless.test.http.HeadersTest {
+ void readHeaderLine()
+ void readHeaders()
}
abstract class org.fourthline.cling.support.connectionmanager.callback.GetProtocolInfo {
+ <<Create>> GetProtocolInfo(Service)
# <<Create>> GetProtocolInfo(Service,ControlPoint)
+ void success(ActionInvocation)
+ {abstract}void received(ActionInvocation,ProtocolInfos,ProtocolInfos)
}
abstract class org.fourthline.cling.support.renderingcontrol.callback.SetVolume {
- {static} Logger log
+ <<Create>> SetVolume(Service,long)
+ <<Create>> SetVolume(UnsignedIntegerFourBytes,Service,long)
+ void success(ActionInvocation)
}
class org.fourthline.cling.support.model.item.AudioBook {
+ {static} Class CLASS
+ <<Create>> AudioBook()
+ <<Create>> AudioBook(Item)
+ <<Create>> AudioBook(String,Container,String,String,Res)
+ <<Create>> AudioBook(String,Container,String,String,String,String,String,Res)
+ <<Create>> AudioBook(String,String,String,String,Person,Person,String,Res)
+ StorageMedium getStorageMedium()
+ AudioBook setStorageMedium(StorageMedium)
+ Person getFirstProducer()
+ Person[] getProducers()
+ AudioBook setProducers(Person[])
+ Person getFirstContributor()
+ Person[] getContributors()
+ AudioBook setContributors(Person[])
+ String getDate()
+ AudioBook setDate(String)
}
class org.fourthline.cling.model.message.header.RangeHeader {
+ <<Create>> RangeHeader()
+ <<Create>> RangeHeader(BytesRange)
+ <<Create>> RangeHeader(String)
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.model.Namespace {
- {static} Logger log
+ {static} String DEVICE
+ {static} String SERVICE
+ {static} String CONTROL
+ {static} String EVENTS
+ {static} String DESCRIPTOR_FILE
+ {static} String CALLBACK_FILE
# URI basePath
# String decodedPath
+ <<Create>> Namespace()
+ <<Create>> Namespace(String)
+ <<Create>> Namespace(URI)
+ URI getBasePath()
+ URI getPath(Device)
+ URI getPath(Service)
+ URI getDescriptorPath(Device)
+ String getDescriptorPathString(Device)
+ URI getDescriptorPath(Service)
+ URI getControlPath(Service)
+ URI getIconPath(Icon)
+ URI getEventSubscriptionPath(Service)
+ URI getEventCallbackPath(Service)
+ String getEventCallbackPathString(Service)
+ URI prefixIfRelative(Device,URI)
+ boolean isControlPath(URI)
+ boolean isEventSubscriptionPath(URI)
+ boolean isEventCallbackPath(URI)
+ Resource[] getResources(Device)
# URI appendPathToBaseURI(String)
# String getDevicePath(Device)
# String getServicePath(Service)
}
class org.fourthline.cling.model.ServerClientTokens {
+ {static} String UNKNOWN_PLACEHOLDER
- int majorVersion
- int minorVersion
- String osName
- String osVersion
- String productName
- String productVersion
+ <<Create>> ServerClientTokens()
+ <<Create>> ServerClientTokens(int,int)
+ <<Create>> ServerClientTokens(String,String)
+ <<Create>> ServerClientTokens(int,int,String,String,String,String)
+ int getMajorVersion()
+ void setMajorVersion(int)
+ int getMinorVersion()
+ void setMinorVersion(int)
+ String getOsName()
+ void setOsName(String)
+ String getOsVersion()
+ void setOsVersion(String)
+ String getProductName()
+ void setProductName(String)
+ String getProductVersion()
+ void setProductVersion(String)
+ String toString()
+ String getHttpToken()
+ String getOsToken()
+ String getProductToken()
+ boolean equals(Object)
+ int hashCode()
}
class org.fourthline.cling.support.model.item.Item {
# String refID
+ <<Create>> Item()
+ <<Create>> Item(Item)
+ <<Create>> Item(String,String,String,String,boolean,WriteStatus,Class,List<Res>,List<Property>,List<DescMeta>)
+ <<Create>> Item(String,String,String,String,boolean,WriteStatus,Class,List<Res>,List<Property>,List<DescMeta>,String)
+ <<Create>> Item(String,Container,String,String,DIDLObject.Class)
+ <<Create>> Item(String,Container,String,String,DIDLObject.Class,String)
+ <<Create>> Item(String,String,String,String,DIDLObject.Class)
+ <<Create>> Item(String,String,String,String,DIDLObject.Class,String)
+ String getRefID()
+ void setRefID(String)
}
class example.controlpoint.EventSubscriptionTest {
+ void subscriptionLifecycle()
# MockUpnpService createMockUpnpService()
# StreamResponseMessage createSubscribeResponseMessage()
# StreamResponseMessage createUnsubscribeResponseMessage()
}
class org.fourthline.cling.model.types.URIDatatype {
+ <<Create>> URIDatatype()
+ URI valueOf(String)
}
class org.fourthline.cling.test.model.DeviceGraphTest {
+ void findRoot()
+ void findEmbeddedDevices()
+ void findDevicesWithUDN()
+ void findDevicesWithDeviceType()
+ void findServicesAll()
+ void findServicesType()
+ void findServicesId()
+ void findServicesFirst()
+ void findServiceTypes()
}
abstract class de.yaacc.player.AbstractPlayer {
+ {static} String PLAYER_ID
+ {static} String PROPERTY_ITEM
- List<PlayableItem> items
- int previousIndex
- int currentIndex
- Handler playerTimer
- Timer execTimer
- boolean isPlaying
- boolean isProcessingCommand
- UpnpClient upnpClient
- PlayerService playerService
- String name
- PropertyChangeSupport pcs
- SynchronizationInfo syncInfo
- boolean paused
- Object loadedItem
- int currentLoadedIndex
+ <<Create>> AbstractPlayer(UpnpClient)
+ void onServiceConnected(ComponentName,IBinder)
+ void onServiceDisconnected(ComponentName)
+ Context getContext()
+ UpnpClient getUpnpClient()
+ void startService()
+ void next()
+ void previous()
+ void pause()
+ void play()
+ void stop()
+ void setItems(PlayableItem)
# boolean isShufflePlay()
+ void clear()
# void cancelTimer()
+ boolean isPlaying()
+ void setPlaying(boolean)
+ int getCurrentIndex()
+ void setCurrentIndex(int)
+ List<PlayableItem> getItems()
+ String getPositionString()
+ String getCurrentItemTitle()
+ String getNextItemTitle()
# Object loadItem(int)
# void loadItem(int,int)
# void doPause()
# void doResume()
# long getSilenceDuration()
+ void startTimer(long)
+ void setName(String)
+ String getName()
+ boolean isProcessingCommand()
+ void setProcessingCommand(boolean)
+ void exit()
- void showNotification()
- void cancleNotification()
# int getNotificationId()
+ PendingIntent getNotificationIntent()
# {abstract}void stopItem(PlayableItem)
# {abstract}Object loadItem(PlayableItem)
# {abstract}void startItem(PlayableItem,Object)
+ void onDestroy()
+ int getId()
+ void addPropertyChangeListener(PropertyChangeListener)
+ void removePropertyChangeListener(PropertyChangeListener)
# void firePropertyChange(String,Object,Object)
+ String getDuration()
+ String getElapsedTime()
+ URI getAlbumArt()
+ void setSyncInfo(SynchronizationInfo)
+ SynchronizationInfo getSyncInfo()
# Date getExecutionTime()
# void executeCommand(TimerTask,Date)
+ boolean getMute()
+ void setMute(boolean)
+ void setVolume(int)
+ int getVolume()
+ int getIconResourceId()
+ String getDeviceId()
+ {abstract}void seekTo(long)
}
class org.fourthline.cling.support.model.PositionInfo {
- UnsignedIntegerFourBytes track
- String trackDuration
- String trackMetaData
- String trackURI
- String relTime
- String absTime
- int relCount
- int absCount
+ <<Create>> PositionInfo()
+ <<Create>> PositionInfo(Map<String,ActionArgumentValue>)
+ <<Create>> PositionInfo(PositionInfo,String,String)
+ <<Create>> PositionInfo(PositionInfo,long,long)
+ <<Create>> PositionInfo(long,String,String,String,String)
+ <<Create>> PositionInfo(long,String,String,String,String,String,int,int)
+ <<Create>> PositionInfo(long,String,String)
+ UnsignedIntegerFourBytes getTrack()
+ String getTrackDuration()
+ String getTrackMetaData()
+ String getTrackURI()
+ String getRelTime()
+ String getAbsTime()
+ int getRelCount()
+ int getAbsCount()
+ void setTrackDuration(String)
+ void setRelTime(String)
+ long getTrackDurationSeconds()
+ long getTrackElapsedSeconds()
+ long getTrackRemainingSeconds()
+ int getElapsedPercent()
+ String toString()
}
abstract class org.seamless.xml.NamespaceContextMap {
+ String getNamespaceURI(String)
+ String getPrefix(String)
+ Iterator getPrefixes(String)
# {abstract}String getDefaultNamespaceURI()
}
class de.yaacc.upnp.YaaccAsyncStreamServerRequestHandler {
- {static} Logger log
# <<Create>> YaaccAsyncStreamServerRequestHandler(ProtocolFactory)
+ AsyncRequestConsumer<Message<HttpRequest,byte[]>> prepare(HttpRequest,EntityDetails,HttpContext)
+ void handle(Message<HttpRequest,byte[]>,ResponseTrigger,HttpContext)
# StreamRequestMessage readRequestMessage(Message<HttpRequest,byte[]>)
# void writeResponseMessage(StreamResponseMessage,AsyncResponseBuilder)
+ void run()
}
class org.fourthline.cling.test.ssdp.NotifyTest {
+ void receivedByeBye()
+ void receivedNoUDN()
+ void receivedNoLocation()
+ void receivedNoMaxAge()
+ void receivedAlreadyKnownLocalUDN()
+ void receiveEmbeddedTriggersUpdate()
# IncomingNotificationRequest createRequestMessage()
}
class org.fourthline.cling.support.lastchange.InstanceID {
# UnsignedIntegerFourBytes id
# List<EventedValue> values
+ <<Create>> InstanceID(UnsignedIntegerFourBytes)
+ <<Create>> InstanceID(UnsignedIntegerFourBytes,List<EventedValue>)
+ UnsignedIntegerFourBytes getId()
+ List<EventedValue> getValues()
}
class org.fourthline.cling.model.DiscoveryOptions {
# boolean advertised
# boolean byeByeBeforeFirstAlive
- {static} String simpleName
+ <<Create>> DiscoveryOptions(boolean)
+ <<Create>> DiscoveryOptions(boolean,boolean)
+ boolean isAdvertised()
+ boolean isByeByeBeforeFirstAlive()
+ String toString()
}
abstract class org.fourthline.cling.transport.spi.UpnpStream {
- {static} Logger log
# ProtocolFactory protocolFactory
# ReceivingSync syncProtocol
# <<Create>> UpnpStream(ProtocolFactory)
+ ProtocolFactory getProtocolFactory()
+ StreamResponseMessage process(StreamRequestMessage)
# void responseSent(StreamResponseMessage)
# void responseException(Throwable)
+ String toString()
}
interface org.seamless.statemachine.StateMachine {
+ {static} String METHOD_CURRENT_STATE
+ {static} String METHOD_FORCE_STATE
+ S getCurrentState()
+ void forceState(Class<? extends S>)
}
class de.yaacc.upnp.server.avtransport.AvTransportVariable {
}
class de.yaacc.upnp.server.avtransport.AvTransportVariable.CurrentTransportActions {
+ <<Create>> CurrentTransportActions(TransportAction[])
+ <<Create>> CurrentTransportActions(Map.Entry<String,String>[])
# TransportAction[] enumValueOf(String[])
}
class org.fourthline.cling.model.DefaultServiceManager {
- {static} Logger log
# LocalService<T> service
# Class<T> serviceClass
# ReentrantLock lock
# T serviceImpl
# PropertyChangeSupport propertyChangeSupport
# <<Create>> DefaultServiceManager(LocalService<T>)
+ <<Create>> DefaultServiceManager(LocalService<T>,Class<T>)
# void lock()
# void unlock()
# int getLockTimeoutMillis()
+ LocalService<T> getService()
+ T getImplementation()
+ PropertyChangeSupport getPropertyChangeSupport()
+ void execute(Command<T>)
+ Collection<StateVariableValue> getCurrentState()
# Collection<StateVariableValue> getCurrentState(String[])
# void init()
# T createServiceInstance()
# PropertyChangeSupport createPropertyChangeSupport(T)
# PropertyChangeListener createPropertyChangeListener(T)
# Collection<StateVariableValue> readInitialEventedStateVariableValues()
+ String toString()
}
class org.fourthline.cling.model.DefaultServiceManager.DefaultPropertyChangeListener {
+ void propertyChange(PropertyChangeEvent)
}
class org.fourthline.cling.support.model.container.MusicAlbum {
+ {static} Class CLASS
+ <<Create>> MusicAlbum()
+ <<Create>> MusicAlbum(Container)
+ <<Create>> MusicAlbum(String,Container,String,String,Integer)
+ <<Create>> MusicAlbum(String,Container,String,String,Integer,List<MusicTrack>)
+ <<Create>> MusicAlbum(String,String,String,String,Integer)
+ <<Create>> MusicAlbum(String,String,String,String,Integer,List<MusicTrack>)
+ PersonWithRole getFirstArtist()
+ PersonWithRole[] getArtists()
+ MusicAlbum setArtists(PersonWithRole[])
+ String getFirstGenre()
+ String[] getGenres()
+ MusicAlbum setGenres(String[])
+ Person getFirstProducer()
+ Person[] getProducers()
+ MusicAlbum setProducers(Person[])
+ URI getFirstAlbumArtURI()
+ URI[] getAlbumArtURIs()
+ MusicAlbum setAlbumArtURIs(URI[])
+ String getToc()
+ MusicAlbum setToc(String)
+ MusicTrack[] getMusicTracks()
+ void addMusicTracks(List<MusicTrack>)
+ void addMusicTracks(MusicTrack[])
}
class org.fourthline.cling.model.message.header.UDAServiceTypeHeader {
+ <<Create>> UDAServiceTypeHeader()
+ <<Create>> UDAServiceTypeHeader(URI)
+ <<Create>> UDAServiceTypeHeader(UDAServiceType)
+ void setString(String)
}
class org.fourthline.cling.model.meta.DeviceDetails {
- {static} Logger log
- URL baseURL
- String friendlyName
- ManufacturerDetails manufacturerDetails
- ModelDetails modelDetails
- String serialNumber
- String upc
- URI presentationURI
- DLNADoc[] dlnaDocs
- DLNACaps dlnaCaps
- DLNACaps secProductCaps
+ <<Create>> DeviceDetails(String)
+ <<Create>> DeviceDetails(String,DLNADoc[],DLNACaps)
+ <<Create>> DeviceDetails(String,ManufacturerDetails)
+ <<Create>> DeviceDetails(String,ManufacturerDetails,DLNADoc[],DLNACaps)
+ <<Create>> DeviceDetails(String,ManufacturerDetails,ModelDetails)
+ <<Create>> DeviceDetails(String,ManufacturerDetails,ModelDetails,DLNADoc[],DLNACaps)
+ <<Create>> DeviceDetails(String,ManufacturerDetails,ModelDetails,DLNADoc[],DLNACaps,DLNACaps)
+ <<Create>> DeviceDetails(String,ManufacturerDetails,ModelDetails,String,String)
+ <<Create>> DeviceDetails(String,ManufacturerDetails,ModelDetails,String,String,DLNADoc[],DLNACaps)
+ <<Create>> DeviceDetails(String,URI)
+ <<Create>> DeviceDetails(String,URI,DLNADoc[],DLNACaps)
+ <<Create>> DeviceDetails(String,ManufacturerDetails,ModelDetails,URI)
+ <<Create>> DeviceDetails(String,ManufacturerDetails,ModelDetails,URI,DLNADoc[],DLNACaps)
+ <<Create>> DeviceDetails(String,ManufacturerDetails,ModelDetails,String,String,URI)
+ <<Create>> DeviceDetails(String,ManufacturerDetails,ModelDetails,String,String,URI,DLNADoc[],DLNACaps)
+ <<Create>> DeviceDetails(String,ManufacturerDetails,ModelDetails,String,String,String)
+ <<Create>> DeviceDetails(String,ManufacturerDetails,ModelDetails,String,String,String,DLNADoc[],DLNACaps)
+ <<Create>> DeviceDetails(URL,String,ManufacturerDetails,ModelDetails,String,String,URI)
+ <<Create>> DeviceDetails(URL,String,ManufacturerDetails,ModelDetails,String,String,URI,DLNADoc[],DLNACaps)
+ <<Create>> DeviceDetails(URL,String,ManufacturerDetails,ModelDetails,String,String,URI,DLNADoc[],DLNACaps,DLNACaps)
+ URL getBaseURL()
+ String getFriendlyName()
+ ManufacturerDetails getManufacturerDetails()
+ ModelDetails getModelDetails()
+ String getSerialNumber()
+ String getUpc()
+ URI getPresentationURI()
+ DLNADoc[] getDlnaDocs()
+ DLNACaps getDlnaCaps()
+ DLNACaps getSecProductCaps()
+ List<ValidationError> validate()
}
class org.fourthline.cling.model.XMLUtil {
+ {static} String documentToString(Document)
+ {static} String documentToString(Document,boolean)
+ {static} String documentToFragmentString(Document)
# {static} String nodeToString(Node,Set<String>,String)
+ {static} String encodeText(String)
+ {static} String encodeText(String,boolean)
+ {static} Element appendNewElement(Document,Element,Enum)
+ {static} Element appendNewElement(Document,Element,String)
+ {static} Element appendNewElementIfNotNull(Document,Element,Enum,Object)
+ {static} Element appendNewElementIfNotNull(Document,Element,Enum,Object,String)
+ {static} Element appendNewElementIfNotNull(Document,Element,String,Object)
+ {static} Element appendNewElementIfNotNull(Document,Element,String,Object,String)
+ {static} Element appendNewElement(Document,Element,String,Object)
+ {static} Element appendNewElement(Document,Element,String,Object,String)
+ {static} String getTextContent(Node)
}
class de.yaacc.upnp.server.contentdirectory.MusicGenreItemBrowser {
+ <<Create>> MusicGenreItemBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
class org.fourthline.cling.protocol.sync.ReceivingAction {
- {static} Logger log
+ <<Create>> ReceivingAction(UpnpService,StreamRequestMessage)
# StreamResponseMessage executeSync()
}
class org.fourthline.cling.binding.LocalServiceBindingException {
+ <<Create>> LocalServiceBindingException(String)
+ <<Create>> LocalServiceBindingException(String,Throwable)
}
class org.fourthline.cling.model.ServiceReference {
+ {static} String DELIMITER
- UDN udn
- ServiceId serviceId
+ <<Create>> ServiceReference(String)
+ <<Create>> ServiceReference(UDN,ServiceId)
+ UDN getUdn()
+ ServiceId getServiceId()
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
interface org.fourthline.cling.registry.Registry {
+ UpnpService getUpnpService()
+ UpnpServiceConfiguration getConfiguration()
+ ProtocolFactory getProtocolFactory()
+ void shutdown()
+ void pause()
+ void resume()
+ boolean isPaused()
+ void addListener(RegistryListener)
+ void removeListener(RegistryListener)
+ Collection<RegistryListener> getListeners()
+ boolean notifyDiscoveryStart(RemoteDevice)
+ void notifyDiscoveryFailure(RemoteDevice,Exception)
+ void addDevice(LocalDevice)
+ void addDevice(LocalDevice,DiscoveryOptions)
+ void setDiscoveryOptions(UDN,DiscoveryOptions)
+ DiscoveryOptions getDiscoveryOptions(UDN)
+ void addDevice(RemoteDevice)
+ boolean update(RemoteDeviceIdentity)
+ boolean removeDevice(LocalDevice)
+ boolean removeDevice(RemoteDevice)
+ boolean removeDevice(UDN)
+ void removeAllLocalDevices()
+ void removeAllRemoteDevices()
+ Device getDevice(UDN,boolean)
+ LocalDevice getLocalDevice(UDN,boolean)
+ RemoteDevice getRemoteDevice(UDN,boolean)
+ Collection<LocalDevice> getLocalDevices()
+ Collection<RemoteDevice> getRemoteDevices()
+ Collection<Device> getDevices()
+ Collection<Device> getDevices(DeviceType)
+ Collection<Device> getDevices(ServiceType)
+ Service getService(ServiceReference)
+ void addResource(Resource)
+ void addResource(Resource,int)
+ boolean removeResource(Resource)
+ Resource getResource(URI)
+ T getResource(Class<T>,URI)
+ Collection<Resource> getResources()
+ Collection<T> getResources(Class<T>)
+ void addLocalSubscription(LocalGENASubscription)
+ LocalGENASubscription getLocalSubscription(String)
+ boolean updateLocalSubscription(LocalGENASubscription)
+ boolean removeLocalSubscription(LocalGENASubscription)
+ void addRemoteSubscription(RemoteGENASubscription)
+ RemoteGENASubscription getRemoteSubscription(String)
+ void updateRemoteSubscription(RemoteGENASubscription)
+ void removeRemoteSubscription(RemoteGENASubscription)
+ void registerPendingRemoteSubscription(RemoteGENASubscription)
+ void unregisterPendingRemoteSubscription(RemoteGENASubscription)
+ RemoteGENASubscription getWaitRemoteSubscription(String)
+ void advertiseLocalDevices()
}
class org.fourthline.cling.model.message.header.RootDeviceHeader {
+ <<Create>> RootDeviceHeader()
+ void setString(String)
+ String getString()
}
interface org.fourthline.cling.model.action.ActionExecutor {
+ void execute(ActionInvocation<LocalService>)
}
class de.yaacc.databinding.ActivityAvtransportPlayerBinding {
- RelativeLayout rootView
+ ImageButton avtransportPlayerActivityControlExit
+ Switch avtransportPlayerActivityControlMuteSwitch
+ ImageButton avtransportPlayerActivityControlNext
+ ImageButton avtransportPlayerActivityControlPause
+ ImageButton avtransportPlayerActivityControlPlay
+ ImageButton avtransportPlayerActivityControlPrev
+ SeekBar avtransportPlayerActivityControlSeekBar
+ ImageButton avtransportPlayerActivityControlStop
+ SeekBar avtransportPlayerActivityControlVolumeSeekBar
+ TextView avtransportPlayerActivityControlVolumeTextView
+ RelativeLayout avtransportPlayerActivityControls
+ TextView avtransportPlayerActivityCurrentItem
+ TextView avtransportPlayerActivityDuration
+ TextView avtransportPlayerActivityElapsedTime
+ ImageView avtransportPlayerActivityImageView
+ TextView avtransportPlayerActivityNextItem
+ TextView avtransportPlayerActivityNextLabel
+ TextView avtransportPlayerActivityPosition
+ RelativeLayout avtransportPlayerActivitySeekBarLayout
+ TextView avtransportPlayerActivitySeparator
+ Space avtransportPlayerActivitySeparator2
+ Space avtransportPlayerActivitySeparator3
- <<Create>> ActivityAvtransportPlayerBinding(RelativeLayout,ImageButton,Switch,ImageButton,ImageButton,ImageButton,ImageButton,SeekBar,ImageButton,SeekBar,TextView,RelativeLayout,TextView,TextView,TextView,ImageView,TextView,TextView,TextView,RelativeLayout,TextView,Space,Space)
+ RelativeLayout getRoot()
+ {static} ActivityAvtransportPlayerBinding inflate(LayoutInflater)
+ {static} ActivityAvtransportPlayerBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityAvtransportPlayerBinding bind(View)
}
class org.fourthline.cling.test.local.LocalActionInvocationEnumTest {
+ {static} LocalDevice createTestDevice(LocalService)
+ {static} Object[][] devices()
+ void invokeActions(LocalDevice)
}
class org.fourthline.cling.test.local.LocalActionInvocationEnumTest.TestServiceOne {
- Target target
- boolean status
+ Target getTarget()
+ void setTarget(String)
+ boolean getStatus()
}
enum org.fourthline.cling.test.local.Target {
+  ON
+  OFF
+  UNKNOWN
}
class org.fourthline.cling.test.local.LocalActionInvocationEnumTest.TestServiceTwo {
- Target target
- boolean status
+ void setTarget(String)
+ void getTarget()
+ Target getRealTarget()
+ boolean getStatus()
}
enum org.fourthline.cling.test.local.Target {
+  ON
+  OFF
+  UNKNOWN
}
class org.fourthline.cling.test.local.LocalActionInvocationEnumTest.TestServiceThree {
- Target target
- boolean status
+ void setTarget(String)
+ TargetHolder getTargetHolder()
+ boolean getStatus()
}
enum org.fourthline.cling.test.local.Target {
+  ON
+  OFF
+  UNKNOWN
}
class org.fourthline.cling.test.local.LocalActionInvocationEnumTest.TestServiceThree.TargetHolder {
- Target t
+ <<Create>> TargetHolder(Target)
+ Target getTarget()
}
class org.fourthline.cling.test.local.LocalActionInvocationEnumTest.TestServiceFour {
- Target target
- boolean status
+ void setTarget(String)
+ TargetHolder getTargetHolder()
+ boolean getStatus()
}
enum org.fourthline.cling.test.local.Target {
+  ON
+  OFF
+  UNKNOWN
}
class org.fourthline.cling.test.local.LocalActionInvocationEnumTest.TestServiceFour.TargetHolder {
- Target t
+ <<Create>> TargetHolder(Target)
+ Target getT()
}
interface org.fourthline.cling.UpnpServiceConfiguration {
+ NetworkAddressFactory createNetworkAddressFactory()
+ DatagramProcessor getDatagramProcessor()
+ SOAPActionProcessor getSoapActionProcessor()
+ GENAEventProcessor getGenaEventProcessor()
+ StreamClient createStreamClient()
+ MulticastReceiver createMulticastReceiver(NetworkAddressFactory)
+ DatagramIO createDatagramIO(NetworkAddressFactory)
+ StreamServer createStreamServer(NetworkAddressFactory)
+ Executor getMulticastReceiverExecutor()
+ Executor getDatagramIOExecutor()
+ ExecutorService getStreamServerExecutorService()
+ DeviceDescriptorBinder getDeviceDescriptorBinderUDA10()
+ ServiceDescriptorBinder getServiceDescriptorBinderUDA10()
+ ServiceType[] getExclusiveServiceTypes()
+ int getRegistryMaintenanceIntervalMillis()
+ int getAliveIntervalMillis()
+ boolean isReceivedSubscriptionTimeoutIgnored()
+ Integer getRemoteDeviceMaxAgeSeconds()
+ UpnpHeaders getDescriptorRetrievalHeaders(RemoteDeviceIdentity)
+ UpnpHeaders getEventSubscriptionHeaders(RemoteService)
+ Executor getAsyncProtocolExecutor()
+ ExecutorService getSyncProtocolExecutorService()
+ Namespace getNamespace()
+ Executor getRegistryMaintainerExecutor()
+ Executor getRegistryListenerExecutor()
+ void shutdown()
}
interface de.yaacc.upnp.UpnpClientListener {
~ void deviceAdded(Device<?,?,?>)
~ void deviceRemoved(Device<?,?,?>)
~ void deviceUpdated(Device<?,?,?>)
}
abstract class org.fourthline.cling.support.connectionmanager.callback.PrepareForConnection {
+ <<Create>> PrepareForConnection(Service,ProtocolInfo,ServiceReference,int,ConnectionInfo.Direction)
+ <<Create>> PrepareForConnection(Service,ControlPoint,ProtocolInfo,ServiceReference,int,ConnectionInfo.Direction)
+ void success(ActionInvocation)
+ {abstract}void received(ActionInvocation,int,int,int)
}
class org.fourthline.cling.model.meta.RemoteService {
- URI descriptorURI
- URI controlURI
- URI eventSubscriptionURI
+ <<Create>> RemoteService(ServiceType,ServiceId,URI,URI,URI)
+ <<Create>> RemoteService(ServiceType,ServiceId,URI,URI,URI,Action<RemoteService>[],StateVariable<RemoteService>[])
+ Action getQueryStateVariableAction()
+ URI getDescriptorURI()
+ URI getControlURI()
+ URI getEventSubscriptionURI()
+ List<ValidationError> validateThis()
+ String toString()
}
class example.mediarenderer.LastChangeTest {
+ void setFireGet()
+ void parseLastChangeXML()
+ void getInitialEventAVTransport()
+ void getInitialEventRenderingControl()
}
class de.yaacc.util.FileDownloader {
~ UpnpClient upnpClient
+ <<Create>> FileDownloader(UpnpClient)
# Void doInBackground(DIDLObject)
- boolean isExternalStorageWritable()
- boolean isExternalStorageReadable()
- void createNotification(String)
- void cancleNotification()
}
interface org.fourthline.cling.transport.spi.DatagramIOConfiguration {
+ int getTimeToLive()
+ int getMaxDatagramBytes()
}
class example.mediaserver.ContentDirectoryBrowseTest {
# DIDLParser parser
+ void browseRootMetadata()
+ void browseRootChildren()
+ void browseTracks()
+ Service createService()
# String readResource(String)
}
class example.mediaserver.ContentDirectoryBrowseTest.MP3ContentDirectory {
+ BrowseResult browse(String,BrowseFlag,String,long,long,SortCriterion[])
+ BrowseResult search(String,String,String,long,long,SortCriterion[])
}
class org.fourthline.cling.model.types.IntegerDatatype {
- int byteSize
+ <<Create>> IntegerDatatype(int)
+ boolean isHandlingJavaType(Class)
+ Integer valueOf(String)
+ boolean isValid(Integer)
+ int getMinValue()
+ int getMaxValue()
+ int getByteSize()
}
class org.fourthline.cling.test.local.LocalActionInvocationDatatypesTest {
+ void invokeActions()
}
class org.fourthline.cling.test.local.LocalActionInvocationDatatypesTest.LocalTestServiceOne {
- byte[] data
- String dataString
- String one
- String two
- short three
- int four
+ <<Create>> LocalTestServiceOne()
+ byte[] getData()
+ String getDataString()
+ StringsHolder getStrings()
+ short getThree()
+ Integer getFour()
+ int getFive()
}
class org.fourthline.cling.test.local.LocalActionInvocationDatatypesTest.StringsHolder {
~ String one
~ String two
+ String getOne()
+ String getTwo()
}
class org.fourthline.cling.support.model.SortCriterion {
# boolean ascending
# String propertyName
+ <<Create>> SortCriterion(boolean,String)
+ <<Create>> SortCriterion(String)
+ boolean isAscending()
+ String getPropertyName()
+ {static} SortCriterion[] valueOf(String)
+ {static} String toString(SortCriterion[])
+ String toString()
}
abstract class org.fourthline.cling.model.message.UpnpMessage {
- int udaMajorVersion
- int udaMinorVersion
- O operation
- UpnpHeaders headers
- Object body
- BodyType bodyType
# <<Create>> UpnpMessage(UpnpMessage<O>)
# <<Create>> UpnpMessage(O)
# <<Create>> UpnpMessage(O,BodyType,Object)
+ int getUdaMajorVersion()
+ void setUdaMajorVersion(int)
+ int getUdaMinorVersion()
+ void setUdaMinorVersion(int)
+ UpnpHeaders getHeaders()
+ void setHeaders(UpnpHeaders)
+ Object getBody()
+ void setBody(String)
+ void setBody(BodyType,Object)
+ void setBodyCharacters(byte[])
+ boolean hasBody()
+ BodyType getBodyType()
+ void setBodyType(BodyType)
+ String getBodyString()
+ byte[] getBodyBytes()
+ O getOperation()
+ boolean isContentTypeMissingOrText()
+ ContentTypeHeader getContentTypeHeader()
+ boolean isContentTypeText()
+ boolean isContentTypeTextUDA()
+ String getContentTypeCharset()
+ boolean hasHostHeader()
+ boolean isBodyNonEmptyString()
+ String toString()
}
enum org.fourthline.cling.model.message.BodyType {
+  STRING
+  BYTES
}
class org.fourthline.cling.support.model.dlna.message.header.PragmaHeader {
+ <<Create>> PragmaHeader()
+ void setString(String)
+ String getString()
}
interface org.fourthline.cling.support.messagebox.model.ElementAppender {
+ void appendMessageElements(MessageElement)
}
abstract class org.fourthline.cling.protocol.ReceivingAsync {
- {static} Logger log
- UpnpService upnpService
- M inputMessage
# <<Create>> ReceivingAsync(UpnpService,M)
+ UpnpService getUpnpService()
+ M getInputMessage()
+ void run()
# boolean waitBeforeExecution()
# {abstract}void execute()
# H getFirstHeader(UpnpHeader.Type,Class<H>)
+ String toString()
}
class de.yaacc.upnp.server.contentdirectory.VideoItemBrowser {
+ <<Create>> VideoItemBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
class org.fourthline.cling.registry.RegistryImpl {
- {static} Logger log
# UpnpService upnpService
# RegistryMaintainer registryMaintainer
# Set<RemoteGENASubscription> pendingSubscriptionsLock
# Set<RegistryListener> registryListeners
# Set<RegistryItem<URI,Resource>> resourceItems
# List<Runnable> pendingExecutions
# RemoteItems remoteItems
# LocalItems localItems
+ <<Create>> RegistryImpl()
+ <<Create>> RegistryImpl(UpnpService)
+ UpnpService getUpnpService()
+ UpnpServiceConfiguration getConfiguration()
+ ProtocolFactory getProtocolFactory()
# RegistryMaintainer createRegistryMaintainer()
+ void addListener(RegistryListener)
+ void removeListener(RegistryListener)
+ Collection<RegistryListener> getListeners()
+ boolean notifyDiscoveryStart(RemoteDevice)
+ void notifyDiscoveryFailure(RemoteDevice,Exception)
+ void addDevice(LocalDevice)
+ void addDevice(LocalDevice,DiscoveryOptions)
+ void setDiscoveryOptions(UDN,DiscoveryOptions)
+ DiscoveryOptions getDiscoveryOptions(UDN)
+ void addDevice(RemoteDevice)
+ boolean update(RemoteDeviceIdentity)
+ boolean removeDevice(LocalDevice)
+ boolean removeDevice(RemoteDevice)
+ void removeAllLocalDevices()
+ void removeAllRemoteDevices()
+ boolean removeDevice(UDN)
+ Device getDevice(UDN,boolean)
+ LocalDevice getLocalDevice(UDN,boolean)
+ RemoteDevice getRemoteDevice(UDN,boolean)
+ Collection<LocalDevice> getLocalDevices()
+ Collection<RemoteDevice> getRemoteDevices()
+ Collection<Device> getDevices()
+ Collection<Device> getDevices(DeviceType)
+ Collection<Device> getDevices(ServiceType)
+ Service getService(ServiceReference)
+ Resource getResource(URI)
+ T getResource(Class<T>,URI)
+ Collection<Resource> getResources()
+ Collection<T> getResources(Class<T>)
+ void addResource(Resource)
+ void addResource(Resource,int)
+ boolean removeResource(Resource)
+ void addLocalSubscription(LocalGENASubscription)
+ LocalGENASubscription getLocalSubscription(String)
+ boolean updateLocalSubscription(LocalGENASubscription)
+ boolean removeLocalSubscription(LocalGENASubscription)
+ void addRemoteSubscription(RemoteGENASubscription)
+ RemoteGENASubscription getRemoteSubscription(String)
+ void updateRemoteSubscription(RemoteGENASubscription)
+ void removeRemoteSubscription(RemoteGENASubscription)
+ void advertiseLocalDevices()
+ void shutdown()
+ void pause()
+ void resume()
+ boolean isPaused()
~ void maintain()
~ void executeAsyncProtocol(Runnable)
~ void runPendingExecutions(boolean)
+ void printDebugLog()
+ void registerPendingRemoteSubscription(RemoteGENASubscription)
+ void unregisterPendingRemoteSubscription(RemoteGENASubscription)
+ RemoteGENASubscription getWaitRemoteSubscription(String)
}
class de.yaacc.upnp.server.contentdirectory.ImageAllItemBrowser {
+ <<Create>> ImageAllItemBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
class org.fourthline.cling.model.types.BinHexDatatype {
+ <<Create>> BinHexDatatype()
+ Class<byte[]> getValueType()
+ byte[] valueOf(String)
+ String getString(byte[])
}
class de.yaacc.upnp.server.contentdirectory.MusicAllTitlesFolderBrowser {
+ <<Create>> MusicAllTitlesFolderBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
- Integer getSize(YaaccContentDirectory,String)
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
interface org.fourthline.cling.transport.spi.MulticastReceiverConfiguration {
+ InetAddress getGroup()
+ int getPort()
+ int getMaxDatagramBytes()
}
class android.support.v4.R {
- <<Create>> R()
}
class android.support.v4.R.attr {
+ {static} int font
+ {static} int fontProviderAuthority
+ {static} int fontProviderCerts
+ {static} int fontProviderFetchStrategy
+ {static} int fontProviderFetchTimeout
+ {static} int fontProviderPackage
+ {static} int fontProviderQuery
+ {static} int fontStyle
+ {static} int fontWeight
- <<Create>> attr()
}
class android.support.v4.R.bool {
+ {static} int abc_action_bar_embed_tabs
- <<Create>> bool()
}
class android.support.v4.R.color {
+ {static} int notification_action_color_filter
+ {static} int notification_icon_bg_color
+ {static} int notification_material_background_media_default_color
+ {static} int primary_text_default_material_dark
+ {static} int ripple_material_light
+ {static} int secondary_text_default_material_dark
+ {static} int secondary_text_default_material_light
- <<Create>> color()
}
class android.support.v4.R.dimen {
+ {static} int compat_button_inset_horizontal_material
+ {static} int compat_button_inset_vertical_material
+ {static} int compat_button_padding_horizontal_material
+ {static} int compat_button_padding_vertical_material
+ {static} int compat_control_corner_material
+ {static} int notification_action_icon_size
+ {static} int notification_action_text_size
+ {static} int notification_big_circle_margin
+ {static} int notification_content_margin_start
+ {static} int notification_large_icon_height
+ {static} int notification_large_icon_width
+ {static} int notification_main_column_padding_top
+ {static} int notification_media_narrow_margin
+ {static} int notification_right_icon_size
+ {static} int notification_right_side_padding_top
+ {static} int notification_small_icon_background_padding
+ {static} int notification_small_icon_size_as_large
+ {static} int notification_subtext_size
+ {static} int notification_top_pad
+ {static} int notification_top_pad_large_text
- <<Create>> dimen()
}
class android.support.v4.R.drawable {
+ {static} int notification_action_background
+ {static} int notification_bg
+ {static} int notification_bg_low
+ {static} int notification_bg_low_normal
+ {static} int notification_bg_low_pressed
+ {static} int notification_bg_normal
+ {static} int notification_bg_normal_pressed
+ {static} int notification_icon_background
+ {static} int notification_template_icon_bg
+ {static} int notification_template_icon_low_bg
+ {static} int notification_tile_bg
+ {static} int notify_panel_notification_icon_bg
- <<Create>> drawable()
}
class android.support.v4.R.id {
+ {static} int action0
+ {static} int action_container
+ {static} int action_divider
+ {static} int action_image
+ {static} int action_text
+ {static} int actions
+ {static} int async
+ {static} int blocking
+ {static} int cancel_action
+ {static} int chronometer
+ {static} int end_padder
+ {static} int forever
+ {static} int icon
+ {static} int icon_group
+ {static} int info
+ {static} int italic
+ {static} int line1
+ {static} int line3
+ {static} int media_actions
+ {static} int normal
+ {static} int notification_background
+ {static} int notification_main_column
+ {static} int notification_main_column_container
+ {static} int right_icon
+ {static} int right_side
+ {static} int status_bar_latest_event_content
+ {static} int text
+ {static} int text2
+ {static} int time
+ {static} int title
- <<Create>> id()
}
class android.support.v4.R.integer {
+ {static} int cancel_button_image_alpha
+ {static} int status_bar_notification_info_maxnum
- <<Create>> integer()
}
class android.support.v4.R.layout {
+ {static} int notification_action
+ {static} int notification_action_tombstone
+ {static} int notification_media_action
+ {static} int notification_media_cancel_action
+ {static} int notification_template_big_media
+ {static} int notification_template_big_media_custom
+ {static} int notification_template_big_media_narrow
+ {static} int notification_template_big_media_narrow_custom
+ {static} int notification_template_custom_big
+ {static} int notification_template_icon_group
+ {static} int notification_template_lines_media
+ {static} int notification_template_media
+ {static} int notification_template_media_custom
+ {static} int notification_template_part_chronometer
+ {static} int notification_template_part_time
- <<Create>> layout()
}
class android.support.v4.R.string {
+ {static} int status_bar_notification_info_overflow
- <<Create>> string()
}
class android.support.v4.R.style {
+ {static} int TextAppearance_Compat_Notification
+ {static} int TextAppearance_Compat_Notification_Info
+ {static} int TextAppearance_Compat_Notification_Info_Media
+ {static} int TextAppearance_Compat_Notification_Line2
+ {static} int TextAppearance_Compat_Notification_Line2_Media
+ {static} int TextAppearance_Compat_Notification_Media
+ {static} int TextAppearance_Compat_Notification_Time
+ {static} int TextAppearance_Compat_Notification_Time_Media
+ {static} int TextAppearance_Compat_Notification_Title
+ {static} int TextAppearance_Compat_Notification_Title_Media
+ {static} int Widget_Compat_NotificationActionContainer
+ {static} int Widget_Compat_NotificationActionText
- <<Create>> style()
}
class android.support.v4.R.styleable {
+ {static} int[] FontFamily
+ {static} int FontFamily_fontProviderAuthority
+ {static} int FontFamily_fontProviderCerts
+ {static} int FontFamily_fontProviderFetchStrategy
+ {static} int FontFamily_fontProviderFetchTimeout
+ {static} int FontFamily_fontProviderPackage
+ {static} int FontFamily_fontProviderQuery
+ {static} int[] FontFamilyFont
+ {static} int FontFamilyFont_font
+ {static} int FontFamilyFont_fontStyle
+ {static} int FontFamilyFont_fontWeight
- <<Create>> styleable()
}
interface org.fourthline.cling.registry.event.Phase {
+ {static} AnnotationLiteral<Alive> ALIVE
+ {static} AnnotationLiteral<Complete> COMPLETE
+ {static} AnnotationLiteral<Byebye> BYEBYE
+ {static} AnnotationLiteral<Updated> UPDATED
}
enum org.fourthline.cling.support.model.BrowseFlag {
+  METADATA
+  DIRECT_CHILDREN
- String protocolString
~ <<Create>> BrowseFlag(String)
+ String toString()
+ {static} BrowseFlag valueOrNullOf(String)
}
class org.fourthline.cling.model.types.UnsignedIntegerOneByteDatatype {
+ UnsignedIntegerOneByte valueOf(String)
}
class example.localservice.MyServiceWithAllowedValueRangeProvider {
- int restricted
+ int getRestricted()
+ void setRestricted(int)
}
class example.localservice.MyServiceWithAllowedValueRangeProvider.MyAllowedValueProvider {
+ long getMinimum()
+ long getMaximum()
+ long getStep()
}
class org.fourthline.cling.model.types.CharacterDatatype {
+ <<Create>> CharacterDatatype()
+ boolean isHandlingJavaType(Class)
+ Character valueOf(String)
}
abstract class org.fourthline.cling.support.avtransport.callback.SetAVTransportURI {
- {static} Logger log
+ <<Create>> SetAVTransportURI(Service,String)
+ <<Create>> SetAVTransportURI(Service,String,String)
+ <<Create>> SetAVTransportURI(UnsignedIntegerFourBytes,Service,String)
+ <<Create>> SetAVTransportURI(UnsignedIntegerFourBytes,Service,String,String)
+ void success(ActionInvocation)
}
enum org.fourthline.cling.support.renderingcontrol.RenderingControlErrorCode {
+  INVALID_PRESET_NAME
+  INVALID_INSTANCE_ID
- int code
- String description
~ <<Create>> RenderingControlErrorCode(int,String)
+ int getCode()
+ String getDescription()
+ {static} RenderingControlErrorCode getByCode(int)
}
class org.fourthline.cling.transport.impl.RecoveringSOAPActionProcessorImpl {
- {static} Logger log
+ void readBody(ActionRequestMessage,ActionInvocation)
+ void readBody(ActionResponseMessage,ActionInvocation)
# void handleInvalidMessage(ActionInvocation,UnsupportedDataException,UnsupportedDataException)
}
class org.fourthline.cling.support.model.item.Photo {
+ {static} Class CLASS
+ <<Create>> Photo()
+ <<Create>> Photo(Item)
+ <<Create>> Photo(String,Container,String,String,String,Res)
+ <<Create>> Photo(String,String,String,String,String,Res)
+ String getAlbum()
+ Photo setAlbum(String)
}
class de.yaacc.databinding.FragmentServerListBinding {
- RelativeLayout rootView
+ ListView serverList
- <<Create>> FragmentServerListBinding(RelativeLayout,ListView)
+ RelativeLayout getRoot()
+ {static} FragmentServerListBinding inflate(LayoutInflater)
+ {static} FragmentServerListBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} FragmentServerListBinding bind(View)
}
class example.mediaserver.DIDLParserTest {
# DIDLParser parser
+ void readWriteEmpty()
+ void readWriteRoot()
+ void readWriteRootChildren()
+ void readWriteFolder()
+ void readWriteItems()
+ void readWriteItemsMinimal()
+ void readWriteMixed()
+ void readWriteNested()
+ void readWriteItemsMixed()
+ void readWriteFoldersMixed()
# void assertSampleEmpty(DIDLContent)
# void assertSampleRoot(DIDLContent)
# void assertSampleRootChildren(DIDLContent)
# void assertSampleFolder(DIDLContent)
# void assertSampleItems(DIDLContent)
# void assertSampleMixed(DIDLContent)
# void assertSampleNested(DIDLContent)
# void assertSampleItemsMixed(DIDLContent)
# void assertSampleFoldersMixed(DIDLContent)
+ String documentToString(Document)
}
abstract class org.fourthline.cling.support.avtransport.impl.state.PausedPlay {
- {static} Logger log
+ <<Create>> PausedPlay(T)
+ void onEntry()
+ {abstract}Class<? extends AbstractState<?>> setTransportURI(URI,String)
+ {abstract}Class<? extends AbstractState<?>> stop()
+ {abstract}Class<? extends AbstractState<?>> play(String)
+ TransportAction[] getCurrentTransportActions()
}
interface org.fourthline.cling.binding.xml.DeviceDescriptorBinder {
+ T describe(T,String)
+ T describe(T,Document)
+ String generate(Device,RemoteClientInfo,Namespace)
+ Document buildDOM(Device,RemoteClientInfo,Namespace)
}
class org.fourthline.cling.DefaultUpnpServiceConfiguration {
- {static} Logger log
- int streamListenPort
- ExecutorService defaultExecutorService
- DatagramProcessor datagramProcessor
- SOAPActionProcessor soapActionProcessor
- GENAEventProcessor genaEventProcessor
- DeviceDescriptorBinder deviceDescriptorBinderUDA10
- ServiceDescriptorBinder serviceDescriptorBinderUDA10
- Namespace namespace
+ <<Create>> DefaultUpnpServiceConfiguration()
+ <<Create>> DefaultUpnpServiceConfiguration(int)
# <<Create>> DefaultUpnpServiceConfiguration(boolean)
# <<Create>> DefaultUpnpServiceConfiguration(int,boolean)
+ DatagramProcessor getDatagramProcessor()
+ SOAPActionProcessor getSoapActionProcessor()
+ GENAEventProcessor getGenaEventProcessor()
+ StreamClient createStreamClient()
+ MulticastReceiver createMulticastReceiver(NetworkAddressFactory)
+ DatagramIO createDatagramIO(NetworkAddressFactory)
+ StreamServer createStreamServer(NetworkAddressFactory)
+ Executor getMulticastReceiverExecutor()
+ Executor getDatagramIOExecutor()
+ ExecutorService getStreamServerExecutorService()
+ DeviceDescriptorBinder getDeviceDescriptorBinderUDA10()
+ ServiceDescriptorBinder getServiceDescriptorBinderUDA10()
+ ServiceType[] getExclusiveServiceTypes()
+ boolean isReceivedSubscriptionTimeoutIgnored()
+ UpnpHeaders getDescriptorRetrievalHeaders(RemoteDeviceIdentity)
+ UpnpHeaders getEventSubscriptionHeaders(RemoteService)
+ int getRegistryMaintenanceIntervalMillis()
+ int getAliveIntervalMillis()
+ Integer getRemoteDeviceMaxAgeSeconds()
+ Executor getAsyncProtocolExecutor()
+ ExecutorService getSyncProtocolExecutorService()
+ Namespace getNamespace()
+ Executor getRegistryMaintainerExecutor()
+ Executor getRegistryListenerExecutor()
+ NetworkAddressFactory createNetworkAddressFactory()
+ void shutdown()
# NetworkAddressFactory createNetworkAddressFactory(int)
# DatagramProcessor createDatagramProcessor()
# SOAPActionProcessor createSOAPActionProcessor()
# GENAEventProcessor createGENAEventProcessor()
# DeviceDescriptorBinder createDeviceDescriptorBinderUDA10()
# ServiceDescriptorBinder createServiceDescriptorBinderUDA10()
# Namespace createNamespace()
# ExecutorService getDefaultExecutorService()
# ExecutorService createDefaultExecutorService()
}
class org.fourthline.cling.DefaultUpnpServiceConfiguration.ClingExecutor {
+ <<Create>> ClingExecutor()
+ <<Create>> ClingExecutor(ThreadFactory,RejectedExecutionHandler)
# void afterExecute(Runnable,Throwable)
}
class org.fourthline.cling.DefaultUpnpServiceConfiguration.ClingThreadFactory {
# ThreadGroup group
# AtomicInteger threadNumber
# String namePrefix
+ <<Create>> ClingThreadFactory()
+ Thread newThread(Runnable)
}
class org.fourthline.cling.support.test.model.dlna.DLNAHeaderParsingTest {
+ void parseTimeSeekRangeHeader()
+ void parseInvalidTimeSeekRangeHeader()
+ void parsePlaySpeedHeader()
+ void parseInvalidPlaySpeedHeader()
+ void parseAvailableSeekRangeHeader()
+ void parseInvalidAvailableSeekRangeHeader()
+ void parseGetAvailableSeekRangeHeader()
+ void parseInvalidGetAvailableSeekRangeHeader()
+ void parseContentFeaturesHeader()
+ void parseGetContentFeaturesHeader()
+ void parseInvalidGetContentFeaturesHeader()
+ void parseTransferModeHeader()
+ void parseInvalidTransferModeHeader()
+ void parsePeerManagerHeader()
+ void parseRealTimeInfoHeader()
+ void parseInvalidRealTimeInfoHeader()
+ void parseScmsFlagHeader()
+ void parseInvalidScmsFlagHeader()
+ void parseWCTHeader()
+ void parseInvalidWCTHeader()
+ void parseMaxPrateHeader()
+ void parseInvalidMaxPrateHeader()
+ void parseEventTypeHeader()
+ void parseInvalidEventTypeHeader()
+ void parseSupportedHeader()
+ void parseBufferInfoHeader()
+ void parseInvalidBufferInfoHeader()
}
class org.fourthline.cling.model.meta.LocalDevice {
- DeviceDetailsProvider deviceDetailsProvider
+ <<Create>> LocalDevice(DeviceIdentity)
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetails,LocalService)
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetailsProvider,LocalService)
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetailsProvider,LocalService,LocalDevice)
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetails,LocalService,LocalDevice)
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetails,LocalService[])
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetails,LocalService[],LocalDevice[])
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetails,Icon,LocalService)
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetails,Icon,LocalService,LocalDevice)
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetails,Icon,LocalService[])
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetailsProvider,Icon,LocalService[])
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetails,Icon,LocalService[],LocalDevice[])
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetails,Icon[],LocalService)
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetails,Icon[],LocalService,LocalDevice)
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetailsProvider,Icon[],LocalService,LocalDevice)
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetails,Icon[],LocalService[])
+ <<Create>> LocalDevice(DeviceIdentity,DeviceType,DeviceDetails,Icon[],LocalService[],LocalDevice[])
+ <<Create>> LocalDevice(DeviceIdentity,UDAVersion,DeviceType,DeviceDetails,Icon[],LocalService[],LocalDevice[])
+ <<Create>> LocalDevice(DeviceIdentity,UDAVersion,DeviceType,DeviceDetailsProvider,Icon[],LocalService[],LocalDevice[])
+ DeviceDetailsProvider getDeviceDetailsProvider()
+ DeviceDetails getDetails(RemoteClientInfo)
+ LocalService[] getServices()
+ LocalDevice[] getEmbeddedDevices()
+ LocalDevice newInstance(UDN,UDAVersion,DeviceType,DeviceDetails,Icon[],LocalService[],List<LocalDevice>)
+ LocalService newInstance(ServiceType,ServiceId,URI,URI,URI,Action<LocalService>[],StateVariable<LocalService>[])
+ LocalDevice[] toDeviceArray(Collection<LocalDevice>)
+ LocalService[] newServiceArray(int)
+ LocalService[] toServiceArray(Collection<LocalService>)
+ List<ValidationError> validate()
+ Resource[] discoverResources(Namespace)
+ LocalDevice getRoot()
+ LocalDevice findDevice(UDN)
}
class org.fourthline.cling.test.ssdp.AdvertisementTest {
+ void sendAliveMessages()
+ void sendByebyeMessages()
# void assertAliveMsgBasics(UpnpMessage)
# void assertByebyeMsgBasics(UpnpMessage)
}
class org.fourthline.cling.model.types.csv.CSVShort {
+ <<Create>> CSVShort()
+ <<Create>> CSVShort(String)
}
class org.fourthline.cling.model.message.header.PragmaHeader {
+ <<Create>> PragmaHeader()
+ <<Create>> PragmaHeader(PragmaType)
+ <<Create>> PragmaHeader(String)
+ void setString(String)
+ String getString()
}
enum de.yaacc.util.NotificationId {
+  LOCAL_BACKGROUND_MUSIC_PLAYER
+  AVTRANSPORT_PLAYER
+  LOCAL_IMAGE_PLAYER
+  MULTI_CONTENT_PLAYER
+  UPNP_SERVER
+  LOCAL_THIRD_PARTIE_MUSIC_PLAYER
+  FILE_DOWNLOADER
- int id
- <<Create>> NotificationId(int)
+ int getId()
}
class org.fourthline.cling.support.messagebox.model.MessageIncomingCall {
- DateTime callTime
- NumberName callee
- NumberName caller
+ <<Create>> MessageIncomingCall(NumberName,NumberName)
+ <<Create>> MessageIncomingCall(DateTime,NumberName,NumberName)
+ <<Create>> MessageIncomingCall(DisplayType,DateTime,NumberName,NumberName)
+ DateTime getCallTime()
+ NumberName getCallee()
+ NumberName getCaller()
+ void appendMessageElements(MessageElement)
}
class org.fourthline.cling.support.model.container.StorageSystem {
+ {static} Class CLASS
+ <<Create>> StorageSystem()
+ <<Create>> StorageSystem(Container)
+ <<Create>> StorageSystem(String,Container,String,String,Integer,Long,Long,Long,Long,StorageMedium)
+ <<Create>> StorageSystem(String,String,String,String,Integer,Long,Long,Long,Long,StorageMedium)
+ Long getStorageTotal()
+ StorageSystem setStorageTotal(Long)
+ Long getStorageUsed()
+ StorageSystem setStorageUsed(Long)
+ Long getStorageFree()
+ StorageSystem setStorageFree(Long)
+ Long getStorageMaxPartition()
+ StorageSystem setStorageMaxPartition(Long)
+ StorageMedium getStorageMedium()
+ StorageSystem setStorageMedium(StorageMedium)
}
class org.fourthline.cling.model.UnsupportedDataException {
- {static} long serialVersionUID
# Object data
+ <<Create>> UnsupportedDataException(String)
+ <<Create>> UnsupportedDataException(String,Throwable)
+ <<Create>> UnsupportedDataException(String,Throwable,Object)
+ Object getData()
}
class org.fourthline.cling.support.model.container.PlaylistContainer {
+ {static} Class CLASS
+ <<Create>> PlaylistContainer()
+ <<Create>> PlaylistContainer(Container)
+ <<Create>> PlaylistContainer(String,Container,String,String,Integer)
+ <<Create>> PlaylistContainer(String,String,String,String,Integer)
+ PersonWithRole getFirstArtist()
+ PersonWithRole[] getArtists()
+ PlaylistContainer setArtists(PersonWithRole[])
+ String getFirstGenre()
+ String[] getGenres()
+ PlaylistContainer setGenres(String[])
+ String getDescription()
+ PlaylistContainer setDescription(String)
+ String getLongDescription()
+ PlaylistContainer setLongDescription(String)
+ Person getFirstProducer()
+ Person[] getProducers()
+ PlaylistContainer setProducers(Person[])
+ StorageMedium getStorageMedium()
+ PlaylistContainer setStorageMedium(StorageMedium)
+ String getDate()
+ PlaylistContainer setDate(String)
+ String getFirstRights()
+ String[] getRights()
+ PlaylistContainer setRights(String[])
+ Person getFirstContributor()
+ Person[] getContributors()
+ PlaylistContainer setContributors(Person[])
+ String getLanguage()
+ PlaylistContainer setLanguage(String)
}
abstract class org.fourthline.cling.model.meta.Device {
- {static} Logger log
- DI identity
- UDAVersion version
- DeviceType type
- DeviceDetails details
- Icon[] icons
# S[] services
# D[] embeddedDevices
- D parentDevice
+ <<Create>> Device(DI)
+ <<Create>> Device(DI,DeviceType,DeviceDetails,Icon[],S[])
+ <<Create>> Device(DI,DeviceType,DeviceDetails,Icon[],S[],D[])
+ <<Create>> Device(DI,UDAVersion,DeviceType,DeviceDetails,Icon[],S[],D[])
+ DI getIdentity()
+ UDAVersion getVersion()
+ DeviceType getType()
+ DeviceDetails getDetails()
+ DeviceDetails getDetails(RemoteClientInfo)
+ Icon[] getIcons()
+ boolean hasIcons()
+ boolean hasServices()
+ boolean hasEmbeddedDevices()
+ D getParentDevice()
~ void setParentDevice(D)
+ boolean isRoot()
+ {abstract}S[] getServices()
+ {abstract}D[] getEmbeddedDevices()
+ {abstract}D getRoot()
+ {abstract}D findDevice(UDN)
+ D[] findEmbeddedDevices()
+ D[] findDevices(DeviceType)
+ D[] findDevices(ServiceType)
+ Icon[] findIcons()
+ S[] findServices()
+ S[] findServices(ServiceType)
# D find(UDN,D)
# Collection<D> findEmbeddedDevices(D)
# Collection<D> find(DeviceType,D)
# Collection<D> find(ServiceType,D)
# Collection<S> findServices(ServiceType,ServiceId,D)
+ S findService(ServiceId)
+ S findService(ServiceType)
+ ServiceType[] findServiceTypes()
- boolean isMatch(Service,ServiceType,ServiceId)
+ boolean isFullyHydrated()
+ String getDisplayString()
+ List<ValidationError> validate()
+ boolean equals(Object)
+ int hashCode()
+ {abstract}D newInstance(UDN,UDAVersion,DeviceType,DeviceDetails,Icon[],S[],List<D>)
+ {abstract}S newInstance(ServiceType,ServiceId,URI,URI,URI,Action<S>[],StateVariable<S>[])
+ {abstract}D[] toDeviceArray(Collection<D>)
+ {abstract}S[] newServiceArray(int)
+ {abstract}S[] toServiceArray(Collection<S>)
+ {abstract}Resource[] discoverResources(Namespace)
+ String toString()
}
class de.yaacc.upnp.server.YaaccAudioRenderingControlService {
- UpnpClient upnpClient
+ <<Create>> YaaccAudioRenderingControlService(UpnpClient)
+ boolean getMute(UnsignedIntegerFourBytes,String)
+ UnsignedIntegerTwoBytes getVolume(UnsignedIntegerFourBytes,String)
+ void setMute(UnsignedIntegerFourBytes,String,boolean)
+ void setVolume(UnsignedIntegerFourBytes,String,UnsignedIntegerTwoBytes)
+ UnsignedIntegerFourBytes[] getCurrentInstanceIds()
# Channel[] getCurrentChannels()
}
class org.seamless.test.util.MimeTypeTest {
+ void caseInsensitiveEquality()
+ void parseMimeTypeWithParameters()
+ void parseMimeTypeIllegalWhitespace()
+ void escapeBackslash()
}
class de.yaacc.upnp.server.contentdirectory.MusicArtistItemBrowser {
+ <<Create>> MusicArtistItemBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
class org.fourthline.cling.test.ssdp.RegistryExpirationTest {
+ void addAndExpire()
+ void overrideAgeThenAddAndExpire()
+ void addAndUpdateAndExpire()
+ void addResourceAndExpire()
+ void addResourceAndMaintain()
}
class org.fourthline.cling.test.ssdp.RegistryExpirationTest.TestRunnable {
~ boolean wasExecuted
+ void run()
}
class org.fourthline.cling.support.model.dlna.DLNAOperationsAttribute {
+ <<Create>> DLNAOperationsAttribute()
+ <<Create>> DLNAOperationsAttribute(DLNAOperations)
+ void setString(String,String)
+ String getString()
}
abstract class org.fourthline.cling.support.connectionmanager.callback.ConnectionComplete {
+ <<Create>> ConnectionComplete(Service,int)
# <<Create>> ConnectionComplete(Service,ControlPoint,int)
}
class de.yaacc.player.AVTransportPlayerActivity {
- PlayerService playerService
- int playerId
# boolean updateTime
# SeekBar seekBar
- String deviceId
- AVTransportController player
+ void onServiceConnected(ComponentName,IBinder)
+ void onServiceDisconnected(ComponentName)
- PlayerService getPlayerService()
# void onPause()
# void onRestart()
# void onResume()
# void onDestroy()
# void initialize()
- void exit()
# void onCreate(Bundle)
- Player getPlayer()
+ boolean onCreateOptionsMenu(Menu)
+ boolean onOptionsItemSelected(MenuItem)
- void setTrackInfo()
- void doSetTrackInfo()
- void updateTime()
}
class org.seamless.xml.ParserException {
+ <<Create>> ParserException()
+ <<Create>> ParserException(String)
+ <<Create>> ParserException(String,Throwable)
+ <<Create>> ParserException(Throwable)
+ <<Create>> ParserException(SAXParseException)
}
class org.fourthline.cling.support.avtransport.impl.AVTransportService {
- {static} Logger log
- Map<Long,AVTransportStateMachine> stateMachines
~ Class<? extends AVTransportStateMachine> stateMachineDefinition
~ Class<? extends AbstractState> initialState
~ Class<? extends AVTransport> transportClass
+ <<Create>> AVTransportService(Class<? extends AVTransportStateMachine>,Class<? extends AbstractState>)
+ <<Create>> AVTransportService(Class<? extends AVTransportStateMachine>,Class<? extends AbstractState>,Class<T>)
+ void setAVTransportURI(UnsignedIntegerFourBytes,String,String)
+ void setNextAVTransportURI(UnsignedIntegerFourBytes,String,String)
+ void setPlayMode(UnsignedIntegerFourBytes,String)
+ void setRecordQualityMode(UnsignedIntegerFourBytes,String)
+ MediaInfo getMediaInfo(UnsignedIntegerFourBytes)
+ TransportInfo getTransportInfo(UnsignedIntegerFourBytes)
+ PositionInfo getPositionInfo(UnsignedIntegerFourBytes)
+ DeviceCapabilities getDeviceCapabilities(UnsignedIntegerFourBytes)
+ TransportSettings getTransportSettings(UnsignedIntegerFourBytes)
+ void stop(UnsignedIntegerFourBytes)
+ void play(UnsignedIntegerFourBytes,String)
+ void pause(UnsignedIntegerFourBytes)
+ void record(UnsignedIntegerFourBytes)
+ void seek(UnsignedIntegerFourBytes,String,String)
+ void next(UnsignedIntegerFourBytes)
+ void previous(UnsignedIntegerFourBytes)
# TransportAction[] getCurrentTransportActions(UnsignedIntegerFourBytes)
+ UnsignedIntegerFourBytes[] getCurrentInstanceIds()
# AVTransportStateMachine findStateMachine(UnsignedIntegerFourBytes)
# AVTransportStateMachine findStateMachine(UnsignedIntegerFourBytes,boolean)
# AVTransportStateMachine createStateMachine(UnsignedIntegerFourBytes)
# AVTransport createTransport(UnsignedIntegerFourBytes,LastChange)
}
class org.fourthline.cling.support.model.MediaInfo {
- String currentURI
- String currentURIMetaData
- String nextURI
- String nextURIMetaData
- UnsignedIntegerFourBytes numberOfTracks
- String mediaDuration
- StorageMedium playMedium
- StorageMedium recordMedium
- RecordMediumWriteStatus writeStatus
+ <<Create>> MediaInfo()
+ <<Create>> MediaInfo(Map<String,ActionArgumentValue>)
+ <<Create>> MediaInfo(String,String)
+ <<Create>> MediaInfo(String,String,UnsignedIntegerFourBytes,String,StorageMedium)
+ <<Create>> MediaInfo(String,String,UnsignedIntegerFourBytes,String,StorageMedium,StorageMedium,RecordMediumWriteStatus)
+ <<Create>> MediaInfo(String,String,String,String,UnsignedIntegerFourBytes,String,StorageMedium)
+ <<Create>> MediaInfo(String,String,String,String,UnsignedIntegerFourBytes,String,StorageMedium,StorageMedium,RecordMediumWriteStatus)
+ String getCurrentURI()
+ String getCurrentURIMetaData()
+ String getNextURI()
+ String getNextURIMetaData()
+ UnsignedIntegerFourBytes getNumberOfTracks()
+ String getMediaDuration()
+ StorageMedium getPlayMedium()
+ StorageMedium getRecordMedium()
+ RecordMediumWriteStatus getWriteStatus()
}
class example.localservice.SwitchPowerExtraGetter {
- boolean target
- boolean status
+ void setTarget(boolean)
+ boolean getTarget()
+ boolean getStatus()
+ void retrieveStatus()
}
class de.yaacc.upnp.server.contentdirectory.VideosFolderBrowser {
+ <<Create>> VideosFolderBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
- Integer getSize(YaaccContentDirectory,String)
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
class org.fourthline.cling.model.types.csv.CSVBoolean {
+ <<Create>> CSVBoolean()
+ <<Create>> CSVBoolean(String)
}
class org.fourthline.cling.registry.RegistryMaintainer {
- {static} Logger log
- RegistryImpl registry
- int sleepIntervalMillis
- boolean stopped
+ <<Create>> RegistryMaintainer(RegistryImpl,int)
+ void stop()
+ void run()
}
abstract class de.yaacc.upnp.server.contentdirectory.ContentBrowser {
~ Context context
# <<Create>> ContentBrowser(Context)
+ Context getContext()
+ {abstract}DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
+ {abstract}List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ {abstract}List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<DIDLObject> browseChildren(YaaccContentDirectory,String,long,long,SortCriterion[])
+ String getUriString(YaaccContentDirectory,String,MimeType)
}
class de.yaacc.browser.PlayerListItemAdapter {
- LayoutInflater inflator
- List<Player> players
- UpnpClient upnpClient
+ <<Create>> PlayerListItemAdapter(UpnpClient)
- void initialize()
+ int getCount()
+ Object getItem(int)
+ long getItemId(int)
+ View getView(int,View,ViewGroup)
}
class de.yaacc.browser.PlayerListItemAdapter.ViewHolder {
~ ImageView icon
~ TextView name
}
class org.fourthline.cling.model.message.header.ContentRangeHeader {
+ {static} String PREFIX
+ <<Create>> ContentRangeHeader()
+ <<Create>> ContentRangeHeader(BytesRange)
+ <<Create>> ContentRangeHeader(String)
+ void setString(String)
+ String getString()
}
abstract class org.fourthline.cling.model.action.AbstractActionExecutor {
- {static} Logger log
# Map<ActionArgument<LocalService>,StateVariableAccessor> outputArgumentAccessors
# <<Create>> AbstractActionExecutor()
# <<Create>> AbstractActionExecutor(Map<ActionArgument<LocalService>,StateVariableAccessor>)
+ Map<ActionArgument<LocalService>,StateVariableAccessor> getOutputArgumentAccessors()
+ void execute(ActionInvocation<LocalService>)
# {abstract}void execute(ActionInvocation<LocalService>,Object)
# Object readOutputArgumentValues(Action<LocalService>,Object)
# void setOutputArgumentValue(ActionInvocation<LocalService>,ActionArgument<LocalService>,Object)
}
class org.fourthline.cling.model.types.NamedServiceType {
- UDN udn
- ServiceType serviceType
+ <<Create>> NamedServiceType(UDN,ServiceType)
+ UDN getUdn()
+ ServiceType getServiceType()
+ {static} NamedServiceType valueOf(String)
+ String toString()
+ boolean equals(Object)
+ int hashCode()
}
interface org.fourthline.cling.registry.RegistryListener {
+ void remoteDeviceDiscoveryStarted(Registry,RemoteDevice)
+ void remoteDeviceDiscoveryFailed(Registry,RemoteDevice,Exception)
+ void remoteDeviceAdded(Registry,RemoteDevice)
+ void remoteDeviceUpdated(Registry,RemoteDevice)
+ void remoteDeviceRemoved(Registry,RemoteDevice)
+ void localDeviceAdded(Registry,LocalDevice)
+ void localDeviceRemoved(Registry,LocalDevice)
+ void beforeShutdown(Registry)
+ void afterShutdown()
}
class de.yaacc.databinding.AboutBinding {
- LinearLayout rootView
+ TextView aboutDescrip
- <<Create>> AboutBinding(LinearLayout,TextView)
+ LinearLayout getRoot()
+ {static} AboutBinding inflate(LayoutInflater)
+ {static} AboutBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} AboutBinding bind(View)
}
class example.igd.ConnectionInfoTest {
+ void testStatusInfo()
+ void testIPAddress()
}
class example.igd.ConnectionInfoTest.TestConnection {
~ boolean[] tests
+ Connection.StatusInfo getStatusInfo()
+ String getExternalIPAddress()
}
class org.fourthline.cling.model.message.discovery.OutgoingSearchResponseRootDevice {
+ <<Create>> OutgoingSearchResponseRootDevice(IncomingDatagramMessage,Location,LocalDevice)
}
interface org.fourthline.cling.transport.spi.GENAEventProcessor {
+ void writeBody(OutgoingEventRequestMessage)
+ void readBody(IncomingEventRequestMessage)
}
class org.fourthline.cling.test.model.profile.DeviceDetailsProviderTest {
+ void headerRegexMatch()
}
class org.fourthline.cling.model.types.PragmaType {
- String token
- boolean quote
- String value
+ <<Create>> PragmaType(String,String,boolean)
+ <<Create>> PragmaType(String,String)
+ <<Create>> PragmaType(String)
+ String getToken()
+ String getValue()
+ String getString()
+ {static} PragmaType valueOf(String)
}
class org.fourthline.cling.protocol.sync.ReceivingUnsubscribe {
- {static} Logger log
+ <<Create>> ReceivingUnsubscribe(UpnpService,StreamRequestMessage)
# StreamResponseMessage executeSync()
}
class de.yaacc.databinding.ActivityServerListBinding {
- RelativeLayout rootView
+ ListView serverList
- <<Create>> ActivityServerListBinding(RelativeLayout,ListView)
+ RelativeLayout getRoot()
+ {static} ActivityServerListBinding inflate(LayoutInflater)
+ {static} ActivityServerListBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityServerListBinding bind(View)
}
class org.fourthline.cling.support.model.container.PersonContainer {
+ {static} Class CLASS
+ <<Create>> PersonContainer()
+ <<Create>> PersonContainer(Container)
+ <<Create>> PersonContainer(String,Container,String,String,Integer)
+ <<Create>> PersonContainer(String,String,String,String,Integer)
+ String getLanguage()
+ PersonContainer setLanguage(String)
}
class de.yaacc.databinding.FragmentDemoObjectBinding {
- FrameLayout rootView
- <<Create>> FragmentDemoObjectBinding(FrameLayout)
+ FrameLayout getRoot()
+ {static} FragmentDemoObjectBinding inflate(LayoutInflater)
+ {static} FragmentDemoObjectBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} FragmentDemoObjectBinding bind(View)
}
enum org.fourthline.cling.support.model.PresetName {
+  FactoryDefaults
}
class org.fourthline.cling.model.message.IncomingDatagramMessage {
- InetAddress sourceAddress
- int sourcePort
- InetAddress localAddress
+ <<Create>> IncomingDatagramMessage(O,InetAddress,int,InetAddress)
# <<Create>> IncomingDatagramMessage(IncomingDatagramMessage<O>)
+ InetAddress getSourceAddress()
+ int getSourcePort()
+ InetAddress getLocalAddress()
}
class de.yaacc.upnp.YaaccAsyncStreamServerConfigurationImpl {
# int listenPort
# int asyncTimeoutSeconds
+ <<Create>> YaaccAsyncStreamServerConfigurationImpl(int)
+ int getListenPort()
+ void setListenPort(int)
+ int getAsyncTimeoutSeconds()
+ void setAsyncTimeoutSeconds(int)
}
class org.fourthline.cling.model.resource.ServiceEventCallbackResource {
+ <<Create>> ServiceEventCallbackResource(URI,RemoteService)
}
class example.localservice.EventProviderTest {
+ void subscriptionLifecycleChangeSupport()
+ void bundleSeveralVariables()
+ void moderateMaxRate()
+ void moderateMinDelta()
}
class de.yaacc.settings.SettingsFragment {
+ void onCreate(Bundle)
- void populateDeviceLists()
+ void deviceAdded(Device<?,?,?>)
+ void deviceRemoved(Device<?,?,?>)
+ void deviceUpdated(Device<?,?,?>)
}
interface org.fourthline.cling.transport.Router {
+ UpnpServiceConfiguration getConfiguration()
+ ProtocolFactory getProtocolFactory()
~ boolean enable()
~ boolean disable()
~ void shutdown()
~ boolean isEnabled()
~ void handleStartFailure(InitializationException)
+ List<NetworkAddress> getActiveStreamServers(InetAddress)
+ void received(IncomingDatagramMessage)
+ void received(UpnpStream)
+ void send(OutgoingDatagramMessage)
+ StreamResponseMessage send(StreamRequestMessage)
+ void broadcast(byte[])
}
class org.fourthline.cling.protocol.sync.ReceivingEvent {
- {static} Logger log
+ <<Create>> ReceivingEvent(UpnpService,StreamRequestMessage)
# OutgoingEventResponseMessage executeSync()
}
class org.fourthline.cling.test.local.LocalDeviceBindingAdvertisementTest {
+ void registerLocalDevice()
+ void waitForRefresh()
+ void waitForAliveFlood()
+ void byeByeBeforeAlive()
+ void registerNonAdvertisedLocalDevice()
# void assertAliveMsgBasics(Namespace,UpnpMessage,LocalDevice,Integer)
# void assertByeByeMsgBasics(Namespace,UpnpMessage,LocalDevice,Integer)
}
class org.fourthline.cling.test.local.LocalDeviceBindingAdvertisementTest.DemoBinaryLight {
- boolean target
- boolean status
- {static} LocalDevice createTestDevice()
+ boolean getTarget()
+ void setTarget(boolean)
+ boolean getStatus()
}
class de.yaacc.imageviewer.ImageViewerActivity {
+ {static} String URIS
+ {static} String AUTO_START_SHOW
- ImageView imageView
- RetrieveImageTask retrieveImageTask
- List<Uri> imageUris
- int currentImageIndex
- boolean pictureShowActive
- boolean isProcessingCommand
- Timer pictureShowTimer
- ImageViewerBroadcastReceiver imageViewerBroadcastReceiver
- PlayerService playerService
+ void onServiceConnected(ComponentName,IBinder)
+ void onServiceDisconnected(ComponentName)
# void initialize()
# void onCreate(Bundle)
# void onNewIntent(Intent)
- void init(Bundle,Intent)
# void onDestroy()
# void onResume()
# void onPause()
+ boolean onCreateOptionsMenu(Menu)
+ boolean onOptionsItemSelected(MenuItem)
- void exit()
+ void onSaveInstanceState(Bundle)
+ void startTimer()
+ void play()
- void loadImage()
+ void stop()
- void cancleTimer()
- void showDefaultImage()
+ void pause()
+ void previous()
+ void next()
+ void showImage(Drawable)
- int getDuration()
+ void onRightToLeftSwipe()
+ void onLeftToRightSwipe()
+ void onTopToBottomSwipe()
+ void onBottomToTopSwipe()
+ void beginOnTouchProcessing(View,MotionEvent)
+ void endOnTouchProcessing(View,MotionEvent)
- void startMenuHideTimer()
+ boolean isPictureShowActive()
- String getPositionString()
- void menuBarsHide()
- void menuBarsShow()
+ void onBackPressed()
}
abstract class org.fourthline.cling.support.avtransport.impl.state.Playing {
- {static} Logger log
+ <<Create>> Playing(T)
+ void onEntry()
+ {abstract}Class<? extends AbstractState<?>> setTransportURI(URI,String)
+ {abstract}Class<? extends AbstractState<?>> stop()
+ {abstract}Class<? extends AbstractState<?>> play(String)
+ {abstract}Class<? extends AbstractState<?>> pause()
+ {abstract}Class<? extends AbstractState<?>> next()
+ {abstract}Class<? extends AbstractState<?>> previous()
+ {abstract}Class<? extends AbstractState<?>> seek(SeekMode,String)
+ TransportAction[] getCurrentTransportActions()
}
class org.seamless.xhtml.XHTMLElement {
+ {static} String XPATH_PREFIX
+ <<Create>> XHTMLElement(XPath,Element)
# Builder<XHTMLElement> createParentBuilder(DOMElement)
# ArrayBuilder<XHTMLElement> createChildBuilder(DOMElement)
# String prefix(String)
+ XHTML.ELEMENT getConstant()
+ XHTMLElement[] getChildren(XHTML.ELEMENT)
+ XHTMLElement getFirstChild(XHTML.ELEMENT)
+ XHTMLElement[] findChildren(XHTML.ELEMENT)
+ XHTMLElement createChild(XHTML.ELEMENT)
+ String getAttribute(XHTML.ATTR)
+ XHTMLElement setAttribute(XHTML.ATTR,String)
+ String getId()
+ XHTMLElement setId(String)
+ String getTitle()
+ XHTMLElement setTitle(String)
+ XHTMLElement setClasses(String)
+ XHTMLElement setClasses(String[])
+ String[] getClasses()
+ Option[] getOptions()
+ Option getOption(String)
+ Anchor[] findAllAnchors()
+ Anchor[] findAllAnchors(String)
+ Anchor[] findAllAnchors(String,String)
+ XHTMLElement[] findChildrenWithClass(XHTML.ELEMENT,String)
+ XHTMLElement setContent(String)
+ XHTMLElement setAttribute(String,String)
}
interface org.fourthline.cling.model.profile.DeviceDetailsProvider {
~ DeviceDetails provide(RemoteClientInfo)
}
class org.fourthline.cling.transport.spi.NoNetworkException {
+ <<Create>> NoNetworkException(String)
}
enum org.fourthline.cling.support.model.Protocol {
+  ALL
+  HTTP_GET
+  RTSP_RTP_UDP
+  INTERNAL
+  IEC61883
+  XBMC_GET
+  OTHER
- {static} Logger LOG
- String protocolString
~ <<Create>> Protocol(String)
+ String toString()
+ {static} Protocol value(String)
}
class org.fourthline.cling.support.renderingcontrol.RenderingControlException {
+ <<Create>> RenderingControlException(int,String)
+ <<Create>> RenderingControlException(int,String,Throwable)
+ <<Create>> RenderingControlException(ErrorCode,String)
+ <<Create>> RenderingControlException(ErrorCode)
+ <<Create>> RenderingControlException(RenderingControlErrorCode,String)
+ <<Create>> RenderingControlException(RenderingControlErrorCode)
}
abstract class org.fourthline.cling.model.message.OutgoingDatagramMessage {
- InetAddress destinationAddress
- int destinationPort
- UpnpHeaders headers
# <<Create>> OutgoingDatagramMessage(O,InetAddress,int)
# <<Create>> OutgoingDatagramMessage(O,BodyType,Object,InetAddress,int)
+ InetAddress getDestinationAddress()
+ int getDestinationPort()
+ UpnpHeaders getHeaders()
}
class org.fourthline.cling.model.types.UDAServiceId {
- {static} Logger log
+ {static} String DEFAULT_NAMESPACE
+ {static} String BROKEN_DEFAULT_NAMESPACE
+ {static} Pattern PATTERN
+ {static} Pattern BROKEN_PATTERN
+ <<Create>> UDAServiceId(String)
+ {static} UDAServiceId valueOf(String)
}
class org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueChannelVolumeDB {
+ <<Create>> EventedValueChannelVolumeDB(ChannelVolumeDB)
+ <<Create>> EventedValueChannelVolumeDB(Map.Entry<String,String>[])
# ChannelVolumeDB valueOf(Map.Entry<String,String>[])
+ Map.Entry<String,String>[] getAttributes()
+ String toString()
# Datatype getDatatype()
}
class org.fourthline.cling.model.message.discovery.OutgoingSearchRequest {
- UpnpHeader searchTarget
+ <<Create>> OutgoingSearchRequest(UpnpHeader,int)
+ UpnpHeader getSearchTarget()
}
abstract class org.seamless.xml.DOMElement {
+ Builder<PARENT> PARENT_BUILDER
+ ArrayBuilder<CHILD> CHILD_BUILDER
- XPath xpath
- Element element
+ <<Create>> DOMElement(XPath,Element)
+ Element getW3CElement()
+ String getElementName()
+ String getContent()
+ DOMElement<CHILD,PARENT> setContent(String)
+ String getAttribute(String)
+ DOMElement setAttribute(String,String)
+ PARENT getParent()
+ CHILD[] getChildren()
+ CHILD[] getChildren(String)
+ CHILD getRequiredChild(String)
+ CHILD[] findChildren(String)
+ CHILD findChildWithIdentifier(String)
+ CHILD getFirstChild(String)
+ CHILD createChild(String)
+ CHILD createChild(String,String)
+ CHILD appendChild(CHILD,boolean)
+ CHILD replaceChild(CHILD,CHILD,boolean)
+ void replaceEqualChild(DOMElement,String)
+ void removeChild(CHILD)
+ void removeChildren()
# CHILD adoptOrImport(Document,CHILD,boolean)
# {abstract}Builder<PARENT> createParentBuilder(DOMElement)
# {abstract}ArrayBuilder<CHILD> createChildBuilder(DOMElement)
+ String toSimpleXMLString()
+ String toString()
+ XPath getXpath()
# String prefix(String)
+ Collection<PARENT> getXPathParentElements(Builder<CHILD>,String)
+ Collection<CHILD> getXPathChildElements(Builder<CHILD>,String)
+ PARENT getXPathParentElement(Builder<PARENT>,String)
+ CHILD getXPathChildElement(Builder<CHILD>,String)
+ Collection getXPathElements(Builder,String)
+ String getXPathString(XPath,String)
+ Object getXPathResult(String,QName)
+ Object getXPathResult(Node,String,QName)
}
abstract class org.seamless.xml.DOMElement.Builder {
+ DOMElement element
# <<Create>> Builder(DOMElement)
+ {abstract}T build(Element)
+ T firstChildOrNull(String)
}
abstract class org.seamless.xml.DOMElement.ArrayBuilder {
# <<Create>> ArrayBuilder(DOMElement)
+ {abstract}T[] newChildrenArray(int)
+ T[] getChildElements()
+ T[] getChildElements(String)
# T[] buildArray(DOMElement[])
}
abstract class org.fourthline.cling.support.model.dlna.DLNAAttribute {
- {static} Logger log
- T value
+ void setValue(T)
+ T getValue()
+ {abstract}void setString(String,String)
+ {abstract}String getString()
+ {static} DLNAAttribute newInstance(DLNAAttribute.Type,String,String)
+ String toString()
}
enum org.fourthline.cling.support.model.dlna.Type {
+  DLNA_ORG_PN
+  DLNA_ORG_OP
+  DLNA_ORG_PS
+  DLNA_ORG_CI
+  DLNA_ORG_FLAGS
- {static} Map<String,Type> byName
- String attributeName
- Class<? extends DLNAAttribute>[] attributeTypes
- <<Create>> Type(String,Class<? extends DLNAAttribute>)
+ String getAttributeName()
+ Class<? extends DLNAAttribute>[] getAttributeTypes()
+ {static} Type valueOfAttributeName(String)
}
class de.yaacc.databinding.FragmentContentListBinding {
- RelativeLayout rootView
+ ListView contentList
- <<Create>> FragmentContentListBinding(RelativeLayout,ListView)
+ RelativeLayout getRoot()
+ {static} FragmentContentListBinding inflate(LayoutInflater)
+ {static} FragmentContentListBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} FragmentContentListBinding bind(View)
}
class example.binarylight.SwitchPower {
- boolean target
- boolean status
+ void setTarget(boolean)
+ boolean getTarget()
+ boolean getStatus()
}
class org.fourthline.cling.support.model.dlna.message.header.TimeSeekRangeHeader {
+ <<Create>> TimeSeekRangeHeader()
+ <<Create>> TimeSeekRangeHeader(TimeSeekRangeType)
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.support.model.SearchResult {
# String result
# UnsignedIntegerFourBytes count
# UnsignedIntegerFourBytes totalMatches
# UnsignedIntegerFourBytes containerUpdateID
+ <<Create>> SearchResult(String,UnsignedIntegerFourBytes,UnsignedIntegerFourBytes,UnsignedIntegerFourBytes)
+ <<Create>> SearchResult(String,long,long)
+ <<Create>> SearchResult(String,long,long,long)
+ String getResult()
+ UnsignedIntegerFourBytes getCount()
+ long getCountLong()
+ UnsignedIntegerFourBytes getTotalMatches()
+ long getTotalMatchesLong()
+ UnsignedIntegerFourBytes getContainerUpdateID()
+ long getContainerUpdateIDLong()
}
class org.fourthline.cling.support.model.Connection {
}
class org.fourthline.cling.support.model.Connection.StatusInfo {
- Status status
- long uptimeSeconds
- Error lastError
+ <<Create>> StatusInfo(Status,UnsignedIntegerFourBytes,Error)
+ <<Create>> StatusInfo(Status,long,Error)
+ Status getStatus()
+ long getUptimeSeconds()
+ UnsignedIntegerFourBytes getUptime()
+ Error getLastError()
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
enum org.fourthline.cling.support.model.Type {
+  Unconfigured
+  IP_Routed
+  IP_Bridged
}
enum org.fourthline.cling.support.model.Status {
+  Unconfigured
+  Connecting
+  Connected
+  PendingDisconnect
+  Disconnecting
+  Disconnected
}
enum org.fourthline.cling.support.model.Error {
+  ERROR_NONE
+  ERROR_COMMAND_ABORTED
+  ERROR_NOT_ENABLED_FOR_INTERNET
+  ERROR_USER_DISCONNECT
+  ERROR_ISP_DISCONNECT
+  ERROR_IDLE_DISCONNECT
+  ERROR_FORCED_DISCONNECT
+  ERROR_NO_CARRIER
+  ERROR_IP_CONFIGURATION
+  ERROR_UNKNOWN
}
class org.fourthline.cling.support.model.TransportInfo {
- TransportState currentTransportState
- TransportStatus currentTransportStatus
- String currentSpeed
+ <<Create>> TransportInfo()
+ <<Create>> TransportInfo(Map<String,ActionArgumentValue>)
+ <<Create>> TransportInfo(TransportState)
+ <<Create>> TransportInfo(TransportState,String)
+ <<Create>> TransportInfo(TransportState,TransportStatus)
+ <<Create>> TransportInfo(TransportState,TransportStatus,String)
+ TransportState getCurrentTransportState()
+ TransportStatus getCurrentTransportStatus()
+ String getCurrentSpeed()
}
abstract class org.fourthline.cling.support.contentdirectory.callback.GetSystemUpdateID {
+ <<Create>> GetSystemUpdateID(org.fourthline.cling.model.meta.Service)
+ void success(ActionInvocation)
+ {abstract}void received(ActionInvocation,long)
}
abstract class org.fourthline.cling.support.avtransport.callback.GetDeviceCapabilities {
- {static} Logger log
+ <<Create>> GetDeviceCapabilities(Service)
+ <<Create>> GetDeviceCapabilities(UnsignedIntegerFourBytes,Service)
+ void success(ActionInvocation)
+ {abstract}void received(ActionInvocation,DeviceCapabilities)
}
class org.seamless.util.math.Point {
- int x
- int y
+ <<Create>> Point(int,int)
+ int getX()
+ int getY()
+ Point multiply(double)
+ Point divide(double)
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
class org.fourthline.cling.test.control.ActionSampleData {
+ {static} LocalDevice createTestDevice()
+ {static} LocalDevice createTestDevice(Class<?>)
+ {static} LocalDevice createTestDevice(LocalService)
}
class org.fourthline.cling.test.control.ActionSampleData.LocalTestService {
- boolean target
- boolean status
+ boolean getTarget()
+ void setTarget(boolean)
+ void dummyStatus()
+ boolean getStatus()
}
class org.fourthline.cling.test.control.ActionSampleData.LocalTestServiceThrowsException {
+ void setTarget(boolean)
}
class org.fourthline.cling.test.control.ActionSampleData.LocalTestServiceDelays {
+ boolean getTarget()
}
class org.fourthline.cling.test.control.ActionSampleData.LocalTestServiceExtended {
~ String someValue
+ String getSomeValue()
+ void setSomeValue(String)
}
class org.fourthline.cling.test.control.ActionSampleData.LocalTestServiceWithClientInfo {
- boolean target
- boolean status
+ void setTarget(boolean)
+ boolean getTarget(RemoteClientInfo)
+ void dummyStatus()
+ boolean getStatus()
}
class org.fourthline.cling.model.message.gena.OutgoingEventResponseMessage {
+ <<Create>> OutgoingEventResponseMessage()
+ <<Create>> OutgoingEventResponseMessage(UpnpResponse)
}
class org.fourthline.cling.protocol.ProtocolCreationException {
+ <<Create>> ProtocolCreationException(String)
+ <<Create>> ProtocolCreationException(String,Throwable)
}
enum de.yaacc.upnp.server.contentdirectory.ContentDirectoryIDs {
+  PARENT_OF_ROOT
+  ROOT
+  IMAGES_FOLDER
+  IMAGES_BY_BUCKET_NAMES_FOLDER
+  IMAGES_BY_BUCKET_NAME_PREFIX
+  IMAGE_BY_BUCKET_PREFIX
+  IMAGES_ALL_FOLDER
+  IMAGE_ALL_PREFIX
+  VIDEOS_FOLDER
+  VIDEO_PREFIX
+  MUSIC_FOLDER
+  MUSIC_ALL_TITLES_FOLDER
+  MUSIC_ALL_TITLES_ITEM_PREFIX
+  MUSIC_GENRES_FOLDER
+  MUSIC_GENRE_PREFIX
+  MUSIC_GENRE_ITEM_PREFIX
+  MUSIC_ALBUMS_FOLDER
+  MUSIC_ALBUM_PREFIX
+  MUSIC_ALBUM_ITEM_PREFIX
+  MUSIC_ARTISTS_FOLDER
+  MUSIC_ARTIST_PREFIX
+  MUSIC_ARTIST_ITEM_PREFIX
~ String id
~ <<Create>> ContentDirectoryIDs(String)
+ String getId()
}
class de.yaacc.upnp.UpnpRegistryService {
# UpnpService upnpService
# Binder binder
+ void onCreate()
# YaaccUpnpServiceConfiguration createConfiguration()
# AndroidRouter createRouter(UpnpServiceConfiguration,ProtocolFactory,Context)
+ IBinder onBind(Intent)
+ void onDestroy()
}
class de.yaacc.upnp.UpnpRegistryService.Binder {
+ UpnpService get()
+ UpnpServiceConfiguration getConfiguration()
+ Registry getRegistry()
+ ControlPoint getControlPoint()
}
class org.fourthline.cling.registry.event.RemoteDeviceDiscovery {
+ <<Create>> RemoteDeviceDiscovery(RemoteDevice)
}
class org.fourthline.cling.support.model.item.Movie {
+ {static} Class CLASS
+ <<Create>> Movie()
+ <<Create>> Movie(Item)
+ <<Create>> Movie(String,Container,String,String,Res)
+ <<Create>> Movie(String,String,String,String,Res)
+ StorageMedium getStorageMedium()
+ Movie setStorageMedium(StorageMedium)
+ Integer getDVDRegionCode()
+ Movie setDVDRegionCode(Integer)
+ String getChannelName()
+ Movie setChannelName(String)
+ String getFirstScheduledStartTime()
+ String[] getScheduledStartTimes()
+ Movie setScheduledStartTimes(String[])
+ String getFirstScheduledEndTime()
+ String[] getScheduledEndTimes()
+ Movie setScheduledEndTimes(String[])
}
abstract class org.fourthline.cling.support.avtransport.AbstractAVTransportService {
- LastChange lastChange
# PropertyChangeSupport propertyChangeSupport
# <<Create>> AbstractAVTransportService()
# <<Create>> AbstractAVTransportService(LastChange)
# <<Create>> AbstractAVTransportService(PropertyChangeSupport)
# <<Create>> AbstractAVTransportService(PropertyChangeSupport,LastChange)
+ LastChange getLastChange()
+ void appendCurrentState(LastChange,UnsignedIntegerFourBytes)
+ PropertyChangeSupport getPropertyChangeSupport()
+ {static} UnsignedIntegerFourBytes getDefaultInstanceID()
+ {abstract}void setAVTransportURI(UnsignedIntegerFourBytes,String,String)
+ {abstract}void setNextAVTransportURI(UnsignedIntegerFourBytes,String,String)
+ {abstract}MediaInfo getMediaInfo(UnsignedIntegerFourBytes)
+ {abstract}TransportInfo getTransportInfo(UnsignedIntegerFourBytes)
+ {abstract}PositionInfo getPositionInfo(UnsignedIntegerFourBytes)
+ {abstract}DeviceCapabilities getDeviceCapabilities(UnsignedIntegerFourBytes)
+ {abstract}TransportSettings getTransportSettings(UnsignedIntegerFourBytes)
+ {abstract}void stop(UnsignedIntegerFourBytes)
+ {abstract}void play(UnsignedIntegerFourBytes,String)
+ {abstract}void pause(UnsignedIntegerFourBytes)
+ {abstract}void record(UnsignedIntegerFourBytes)
+ {abstract}void seek(UnsignedIntegerFourBytes,String,String)
+ {abstract}void next(UnsignedIntegerFourBytes)
+ {abstract}void previous(UnsignedIntegerFourBytes)
+ {abstract}void setPlayMode(UnsignedIntegerFourBytes,String)
+ {abstract}void setRecordQualityMode(UnsignedIntegerFourBytes,String)
+ String getCurrentTransportActionsString(UnsignedIntegerFourBytes)
# {abstract}TransportAction[] getCurrentTransportActions(UnsignedIntegerFourBytes)
}
class de.yaacc.databinding.YaaccProgressDialogBinding {
- LinearLayout rootView
+ ProgressBar dialogProgressBar
- <<Create>> YaaccProgressDialogBinding(LinearLayout,ProgressBar)
+ LinearLayout getRoot()
+ {static} YaaccProgressDialogBinding inflate(LayoutInflater)
+ {static} YaaccProgressDialogBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} YaaccProgressDialogBinding bind(View)
}
class org.fourthline.cling.model.resource.ServiceControlResource {
+ <<Create>> ServiceControlResource(URI,LocalService)
}
class org.fourthline.cling.model.message.header.MANHeader {
+ {static} Pattern PATTERN
+ {static} Pattern NAMESPACE_PATTERN
+ String namespace
+ <<Create>> MANHeader()
+ <<Create>> MANHeader(String)
+ <<Create>> MANHeader(String,String)
+ void setString(String)
+ String getString()
+ String getNamespace()
+ void setNamespace(String)
}
class org.fourthline.cling.binding.staging.MutableAction {
+ String name
+ List<MutableActionArgument> arguments
+ Action build()
+ ActionArgument[] createActionArgumennts()
}
interface org.fourthline.cling.model.types.Datatype {
+ boolean isHandlingJavaType(Class)
+ Builtin getBuiltin()
+ boolean isValid(V)
+ String getString(V)
+ V valueOf(String)
+ String getDisplayString()
}
enum org.fourthline.cling.model.types.Default {
+  BOOLEAN
+  BOOLEAN_PRIMITIVE
+  SHORT
+  SHORT_PRIMITIVE
+  INTEGER
+  INTEGER_PRIMITIVE
+  UNSIGNED_INTEGER_ONE_BYTE
+  UNSIGNED_INTEGER_TWO_BYTES
+  UNSIGNED_INTEGER_FOUR_BYTES
+  FLOAT
+  FLOAT_PRIMITIVE
+  DOUBLE
+  DOUBLE_PRIMTIIVE
+  CHAR
+  CHAR_PRIMITIVE
+  STRING
+  CALENDAR
+  BYTES
+  URI
- Class javaType
- Builtin builtinType
~ <<Create>> Default(Class,Builtin)
+ Class getJavaType()
+ Builtin getBuiltinType()
+ {static} Default getByJavaType(Class)
+ String toString()
}
enum org.fourthline.cling.model.types.Builtin {
+  UI1
+  UI2
+  UI4
+  I1
+  I2
+  I2_SHORT
+  I4
+  INT
+  R4
+  R8
+  NUMBER
+  FIXED144
+  FLOAT
+  CHAR
+  STRING
+  DATE
+  DATETIME
+  DATETIME_TZ
+  TIME
+  TIME_TZ
+  BOOLEAN
+  BIN_BASE64
+  BIN_HEX
+  URI
+  UUID
- {static} Map<String,Builtin> byName
- String descriptorName
- Datatype datatype
~ <<Create>> Builtin(String,AbstractDatatype<VT>)
+ String getDescriptorName()
+ Datatype getDatatype()
+ {static} Builtin getByDescriptorName(String)
+ {static} boolean isNumeric(Builtin)
}
class org.fourthline.cling.model.message.header.ServiceTypeHeader {
+ <<Create>> ServiceTypeHeader()
+ <<Create>> ServiceTypeHeader(URI)
+ <<Create>> ServiceTypeHeader(ServiceType)
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.model.types.HostPort {
- String host
- int port
+ <<Create>> HostPort()
+ <<Create>> HostPort(String,int)
+ String getHost()
+ void setHost(String)
+ int getPort()
+ void setPort(int)
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
class de.yaacc.util.Watchdog {
- boolean watchdogFlag
- long timeout
- Timer watchdogTimer
- <<Create>> Watchdog(long)
+ {static} Watchdog createWatchdog(long)
+ void start()
+ boolean hasTimeout()
+ void cancel()
}
interface org.fourthline.cling.transport.spi.StreamServer {
+ void init(InetAddress,Router)
+ int getPort()
+ void stop()
+ C getConfiguration()
}
class org.fourthline.cling.registry.event.LocalDeviceDiscovery {
+ <<Create>> LocalDeviceDiscovery(LocalDevice)
}
class org.fourthline.cling.model.types.csv.CSVUnsignedIntegerFourBytes {
+ <<Create>> CSVUnsignedIntegerFourBytes()
+ <<Create>> CSVUnsignedIntegerFourBytes(String)
}
class org.fourthline.cling.model.types.csv.CSVBytes {
+ <<Create>> CSVBytes()
+ <<Create>> CSVBytes(String)
}
class de.yaacc.upnp.server.contentdirectory.ImagesAllFolderBrowser {
+ <<Create>> ImagesAllFolderBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
- Integer getSize(YaaccContentDirectory,String)
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
class org.fourthline.cling.test.model.DatagramParsingTest {
+ void readSource()
+ void parseRoundtrip()
}
class de.yaacc.upnp.YaaccUpnpServiceConfiguration {
- UpnpService upnpService
+ <<Create>> YaaccUpnpServiceConfiguration(UpnpService)
+ <<Create>> YaaccUpnpServiceConfiguration(UpnpService,int)
# NetworkAddressFactory createNetworkAddressFactory(int)
# Namespace createNamespace()
+ ServiceType[] getExclusiveServiceTypes()
+ StreamClient createStreamClient()
+ StreamServer createStreamServer(NetworkAddressFactory)
# DeviceDescriptorBinder createDeviceDescriptorBinderUDA10()
# ServiceDescriptorBinder createServiceDescriptorBinderUDA10()
# SOAPActionProcessor createSOAPActionProcessor()
# GENAEventProcessor createGENAEventProcessor()
+ int getRegistryMaintenanceIntervalMillis()
}
class org.fourthline.cling.support.messagebox.parser.MessageDOMParser {
# MessageDOM createDOM(Document)
+ NamespaceContextMap createDefaultNamespaceContext(String)
+ XPath createXPath()
}
class org.seamless.xhtml.Root {
+ <<Create>> Root(XPath,Element)
+ Head getHead()
+ Body getBody()
}
class de.yaacc.player.SyncAVTransportPlayer {
+ {static} String PLAYER_ID
- String deviceId
- int id
- String contentType
- PositionInfo currentPositionInfo
- ActionState positionActionState
+ <<Create>> SyncAVTransportPlayer(UpnpClient,Device,String,String)
+ <<Create>> SyncAVTransportPlayer(UpnpClient)
- Device<?,?,?> getDevice()
+ String getDeviceId()
+ String getContentType()
# void stopItem(PlayableItem)
# Object loadItem(PlayableItem)
# void startItem(PlayableItem,Object)
- void waitForActionComplete(ActionState)
+ PendingIntent getNotificationIntent()
# int getNotificationId()
+ void callPause()
+ URI getAlbumArt()
+ void getSyncOffset()
+ void setSyncOffset(SyncOffset)
+ void adjustSyncOffset(SyncOffset)
+ void pause()
+ void play()
+ void stop()
+ boolean getMute()
+ void setMute(boolean)
+ int getVolume()
+ void setVolume(int)
+ void seekTo(long)
# void getPositionInfo()
+ String getDuration()
+ String getElapsedTime()
}
class de.yaacc.player.SyncAVTransportPlayer.InternalSetAVTransportURI {
~ ActionState actionState
+ boolean hasFailures
- <<Create>> InternalSetAVTransportURI(UnsignedIntegerFourBytes,Service,String,ActionState,String)
+ void failure(ActionInvocation,UpnpResponse,String)
+ void success(ActionInvocation)
}
class de.yaacc.player.SyncAVTransportPlayer.ActionState {
+ boolean actionFinished
+ boolean watchdogFlag
+ Object result
}
class org.seamless.statemachine.StateMachineInvocationHandler {
- {static} Logger log
+ {static} String METHOD_ON_ENTRY
+ {static} String METHOD_ON_EXIT
~ Class initialStateClass
~ Map<Class,Object> stateObjects
~ Object currentState
~ <<Create>> StateMachineInvocationHandler(List<Class<?>>,Class<?>,Class[],Object[])
+ Object invoke(Object,Method,Object[])
- Method getMethodOfCurrentState(Method)
- void invokeEntryMethod(Object)
- void invokeExitMethod(Object)
}
class org.fourthline.cling.model.types.CustomDatatype {
- String name
+ <<Create>> CustomDatatype(String)
+ String getName()
+ String valueOf(String)
+ String toString()
}
class de.yaacc.databinding.BrowseItemCheckableBinding {
- RelativeLayout rootView
+ CheckBox browseItemCheckbox
+ ImageView browseItemIcon
+ TextView browseItemName
- <<Create>> BrowseItemCheckableBinding(RelativeLayout,CheckBox,ImageView,TextView)
+ RelativeLayout getRoot()
+ {static} BrowseItemCheckableBinding inflate(LayoutInflater)
+ {static} BrowseItemCheckableBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} BrowseItemCheckableBinding bind(View)
}
class org.fourthline.cling.model.types.FloatDatatype {
+ <<Create>> FloatDatatype()
+ boolean isHandlingJavaType(Class)
+ Float valueOf(String)
}
class org.fourthline.cling.android.AndroidRouter {
- {static} Logger log
- Context context
- WifiManager wifiManager
# WifiManager.MulticastLock multicastLock
# WifiManager.WifiLock wifiLock
# NetworkInfo networkInfo
# BroadcastReceiver broadcastReceiver
+ <<Create>> AndroidRouter(UpnpServiceConfiguration,ProtocolFactory,Context)
# BroadcastReceiver createConnectivityBroadcastReceiver()
# int getLockTimeoutMillis()
+ void shutdown()
+ boolean enable()
+ boolean disable()
+ NetworkInfo getNetworkInfo()
+ boolean isMobile()
+ boolean isWifi()
+ boolean isEthernet()
+ boolean enableWiFi()
+ void unregisterBroadcastReceiver()
# void setWiFiMulticastLock(boolean)
# void setWifiLock(boolean)
# void onNetworkTypeChange(NetworkInfo,NetworkInfo)
# void handleRouterExceptionOnNetworkTypeChange(RouterException)
}
class org.fourthline.cling.android.AndroidRouter.ConnectivityBroadcastReceiver {
+ void onReceive(Context,Intent)
# boolean isSameNetworkType(NetworkInfo,NetworkInfo)
# void displayIntentInfo(Intent)
}
class org.fourthline.cling.model.message.header.NTEventHeader {
+ <<Create>> NTEventHeader()
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.model.message.control.IncomingActionResponseMessage {
+ <<Create>> IncomingActionResponseMessage(StreamResponseMessage)
+ <<Create>> IncomingActionResponseMessage(UpnpResponse)
+ String getActionNamespace()
+ boolean isFailedNonRecoverable()
+ boolean isFailedRecoverable()
}
class org.fourthline.cling.model.message.gena.IncomingEventRequestMessage {
- List<StateVariableValue> stateVariableValues
- RemoteService service
+ <<Create>> IncomingEventRequestMessage(StreamRequestMessage,RemoteService)
+ RemoteService getService()
+ List<StateVariableValue> getStateVariableValues()
+ String getSubscrptionId()
+ UnsignedIntegerFourBytes getSequence()
+ boolean hasNotificationHeaders()
+ boolean hasValidNotificationHeaders()
+ String toString()
}
class org.fourthline.cling.test.control.ActionInvokeIncomingTest {
+ {static} String SET_REQUEST
+ {static} String GET_REQUEST
+ {static} String QUERY_STATE_VARIABLE_REQUEST
+ void incomingRemoteCallGet()
+ void incomingRemoteCallClientInfo()
+ IncomingActionResponseMessage incomingRemoteCallGet(LocalDevice)
+ void incomingRemoteCallGetConcurrent()
+ void incomingRemoteCallSet()
+ void incomingRemoteCallControlURINotFound()
+ void incomingRemoteCallMethodException()
+ void incomingRemoteCallNoContentType()
+ void incomingRemoteCallWrongContentType()
+ void incomingRemoteCallQueryStateVariable()
# void addMandatoryRequestHeaders(Service,Action,StreamRequestMessage)
}
class org.fourthline.cling.test.control.ActionInvokeIncomingTest.ConcurrentGetTest {
- UpnpService upnpService
- LocalService service
~ <<Create>> ConcurrentGetTest(UpnpService,LocalService)
+ void run()
}
class de.yaacc.upnp.YaaccStreamingClientImpl {
- {static} Logger log
# YaaccStreamingClientConfigurationImpl configuration
- CloseableHttpClient httpClient
+ <<Create>> YaaccStreamingClientImpl(YaaccStreamingClientConfigurationImpl)
+ YaaccStreamingClientConfigurationImpl getConfiguration()
# ClassicHttpRequest createRequest(StreamRequestMessage)
# Callable<StreamResponseMessage> createCallable(StreamRequestMessage,ClassicHttpRequest)
# boolean abort(ClassicHttpRequest,String)
# boolean logExecutionException(Throwable)
+ void stop()
- void applyRequestHeader(StreamRequestMessage,ClassicHttpRequest)
- void applyRequestBody(StreamRequestMessage,ClassicHttpRequest)
# StreamResponseMessage createResponse(ClassicHttpResponse)
}
class org.fourthline.cling.support.model.dlna.message.header.EventTypeHeader {
~ {static} Pattern pattern
+ <<Create>> EventTypeHeader()
+ void setString(String)
+ String getString()
}
enum org.fourthline.cling.support.model.dlna.DLNAConversionIndicator {
+  NONE
+  TRANSCODED
- int code
~ <<Create>> DLNAConversionIndicator(int)
+ int getCode()
+ {static} DLNAConversionIndicator valueOf(int)
}
class org.fourthline.cling.model.types.csv.CSVUnsignedIntegerOneByte {
+ <<Create>> CSVUnsignedIntegerOneByte()
+ <<Create>> CSVUnsignedIntegerOneByte(String)
}
class example.localservice.SwitchPowerNamedStateVariable {
- boolean target
- boolean status
+ void setTarget(boolean)
+ boolean getTarget()
+ boolean retrieveStatus()
}
class de.yaacc.upnp.callback.contentdirectory.ContentDirectoryBrowseResult {
- Status status
- DIDLContent result
- UpnpFailure upnpFailure
+ <<Create>> ContentDirectoryBrowseResult()
+ Status getStatus()
+ DIDLContent getResult()
+ UpnpFailure getUpnpFailure()
+ void setStatus(Status)
+ void setResult(DIDLContent)
+ void setUpnpFailure(UpnpFailure)
}
class org.fourthline.cling.test.resources.ServiceDescriptorRetrievalTest {
+ void registerAndRetrieveDescriptor()
+ void retrieveNonExistentDescriptor()
}
class org.fourthline.cling.model.types.StringDatatype {
+ <<Create>> StringDatatype()
+ String valueOf(String)
}
class example.localservice.MyServiceWithStringConvertibles {
- URL myURL
- URI myURI
- List<Integer> myNumbers
- MyStringConvertible myStringConvertible
+ URL getMyURL()
+ void setMyURL(URL)
+ URI getMyURI()
+ void setMyURI(URI)
+ CSV<Integer> getMyNumbers()
+ void setMyNumbers(CSVInteger)
+ MyStringConvertible getMyStringConvertible()
+ void setMyStringConvertible(MyStringConvertible)
}
class de.yaacc.imageviewer.RetrieveImageTask {
- ImageViewerActivity imageViewerActivity
- Dialog pd
+ <<Create>> RetrieveImageTask(ImageViewerActivity)
# Void doInBackground(Uri)
# void onPostExecute(Void)
# void onPreExecute()
- void retrieveImage(Uri)
- InputStream getUriAsStream(Uri)
- Bitmap decodeSampledBitmapFromStream(Uri,int,int)
}
class de.yaacc.imageviewer.RetrieveImageTask.FlushedInputStream {
+ <<Create>> FlushedInputStream(InputStream)
+ long skip(long)
}
class org.seamless.util.RandomToken {
# Random random
+ <<Create>> RandomToken()
+ String generate()
}
class org.fourthline.cling.model.types.DoubleDatatype {
+ <<Create>> DoubleDatatype()
+ boolean isHandlingJavaType(Class)
+ Double valueOf(String)
}
class org.fourthline.cling.model.meta.StateVariableEventDetails {
- boolean sendEvents
- int eventMaximumRateMilliseconds
- int eventMinimumDelta
+ <<Create>> StateVariableEventDetails()
+ <<Create>> StateVariableEventDetails(boolean)
+ <<Create>> StateVariableEventDetails(boolean,int,int)
+ boolean isSendEvents()
+ int getEventMaximumRateMilliseconds()
+ int getEventMinimumDelta()
}
class org.fourthline.cling.test.gena.OutgoingSubscriptionLifecycleTest {
+ void subscriptionLifecycle()
+ void subscriptionLifecycleNotifyBeforeResponse()
# StreamResponseMessage createSubscribeResponseMessage()
# StreamResponseMessage createUnsubscribeResponseMessage()
# IncomingEventRequestMessage createEventRequestMessage(UpnpService,SubscriptionCallback)
# IncomingEventRequestMessage createEventRequestMessage(UpnpService,RemoteService,GENASubscription)
}
class example.localservice.SwitchPowerWithPropertyChangeSupport {
- PropertyChangeSupport propertyChangeSupport
- boolean target
- boolean status
+ <<Create>> SwitchPowerWithPropertyChangeSupport()
+ PropertyChangeSupport getPropertyChangeSupport()
+ void setTarget(boolean)
+ boolean getTarget()
+ boolean getStatus()
}
abstract class org.fourthline.cling.protocol.ReceivingSync {
- {static} Logger log
# RemoteClientInfo remoteClientInfo
# OUT outputMessage
# <<Create>> ReceivingSync(UpnpService,IN)
+ OUT getOutputMessage()
# void execute()
# {abstract}OUT executeSync()
+ void responseSent(StreamResponseMessage)
+ void responseException(Throwable)
+ RemoteClientInfo getRemoteClientInfo()
+ String toString()
}
class org.fourthline.cling.model.types.csv.CSVUnsignedIntegerTwoBytes {
+ <<Create>> CSVUnsignedIntegerTwoBytes()
+ <<Create>> CSVUnsignedIntegerTwoBytes(String)
}
class de.yaacc.upnp.server.contentdirectory.MusicGenreFolderBrowser {
+ <<Create>> MusicGenreFolderBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
- String getName(YaaccContentDirectory,String)
- Integer getSize(YaaccContentDirectory,String)
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
abstract class org.fourthline.cling.support.lastchange.EventedValueEnumArray {
+ <<Create>> EventedValueEnumArray(E[])
+ <<Create>> EventedValueEnumArray(Map.Entry<String,String>[])
# E[] valueOf(String)
# {abstract}E[] enumValueOf(String[])
+ String toString()
# Datatype getDatatype()
}
class org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl {
- {static} Logger log
+ S describe(S,String)
}
class org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.RootHandler {
+ <<Create>> RootHandler(MutableService,SAXParser)
+ void startElement(ELEMENT,Attributes)
}
class org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ActionListHandler {
+ {static} ELEMENT EL
+ <<Create>> ActionListHandler(List<MutableAction>,ServiceDescriptorHandler)
+ void startElement(ELEMENT,Attributes)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ActionHandler {
+ {static} ELEMENT EL
+ <<Create>> ActionHandler(MutableAction,ServiceDescriptorHandler)
+ void startElement(ELEMENT,Attributes)
+ void endElement(ELEMENT)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ActionArgumentListHandler {
+ {static} ELEMENT EL
+ <<Create>> ActionArgumentListHandler(List<MutableActionArgument>,ServiceDescriptorHandler)
+ void startElement(ELEMENT,Attributes)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ActionArgumentHandler {
+ {static} ELEMENT EL
+ <<Create>> ActionArgumentHandler(MutableActionArgument,ServiceDescriptorHandler)
+ void endElement(ELEMENT)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.StateVariableListHandler {
+ {static} ELEMENT EL
+ <<Create>> StateVariableListHandler(List<MutableStateVariable>,ServiceDescriptorHandler)
+ void startElement(ELEMENT,Attributes)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.StateVariableHandler {
+ {static} ELEMENT EL
+ <<Create>> StateVariableHandler(MutableStateVariable,ServiceDescriptorHandler)
+ void startElement(ELEMENT,Attributes)
+ void endElement(ELEMENT)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.AllowedValueListHandler {
+ {static} ELEMENT EL
+ <<Create>> AllowedValueListHandler(List<String>,ServiceDescriptorHandler)
+ void endElement(ELEMENT)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.AllowedValueRangeHandler {
+ {static} ELEMENT EL
+ <<Create>> AllowedValueRangeHandler(MutableAllowedValueRange,ServiceDescriptorHandler)
+ void endElement(ELEMENT)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ServiceDescriptorHandler {
+ <<Create>> ServiceDescriptorHandler(I)
+ <<Create>> ServiceDescriptorHandler(I,SAXParser)
+ <<Create>> ServiceDescriptorHandler(I,ServiceDescriptorHandler)
+ <<Create>> ServiceDescriptorHandler(I,SAXParser,ServiceDescriptorHandler)
+ void startElement(String,String,String,Attributes)
+ void endElement(String,String,String)
# boolean isLastElement(String,String,String)
+ void startElement(ELEMENT,Attributes)
+ void endElement(ELEMENT)
+ boolean isLastElement(ELEMENT)
}
enum org.fourthline.cling.support.model.dlna.DLNAProfiles {
+  NONE
+  JPEG_SM
+  JPEG_MED
+  JPEG_LRG
+  JPEG_TN
+  JPEG_SM_ICO
+  JPEG_LRG_ICO
+  PNG_TN
+  PNG_SM_ICO
+  PNG_LRG_ICO
+  PNG_LRG
+  LPCM
+  LPCM_LOW
+  MP3
+  MP3X
+  WMABASE
+  WMAFULL
+  WMAPRO
+  AAC_ADTS
+  AAC_ADTS_320
+  AAC_ISO
+  AAC_ISO_320
+  AAC_LTP_ISO
+  AAC_LTP_MULT5_ISO
+  AAC_LTP_MULT7_ISO
+  AAC_MULT5_ADTS
+  AAC_MULT5_ISO
+  HEAAC_L2_ADTS
+  HEAAC_L2_ISO
+  HEAAC_L3_ADTS
+  HEAAC_L3_ISO
+  HEAAC_MULT5_ADTS
+  HEAAC_MULT5_ISO
+  HEAAC_L2_ADTS_320
+  HEAAC_L2_ISO_320
+  BSAC_ISO
+  BSAC_MULT5_ISO
+  HEAACv2_L2
+  HEAACv2_L2_ADTS
+  HEAACv2_L2_320
+  HEAACv2_L2_320_ADTS
+  HEAACv2_L3
+  HEAACv2_L3_ADTS
+  HEAACv2_MULT5
+  HEAACv2_MULT5_ADTS
+  AC3
+  AMR
+  THREE_GPP
+  AMR_WBplus
+  ATRAC3
+  WMVMED_BASE
+  WMVMED_FULL
+  WMVMED_PRO
+  WMVHIGH_FULL
+  WMVHIGH_PRO
+  WMVHM_BASE
+  WMVSPLL_BASE
+  WMVSPML_BASE
+  WMVSPML_MP3
+  MPEG1
+  MPEG_PS_NTSC
+  MPEG_PS_NTSC_XAC3
+  MPEG_PS_PAL
+  MPEG_PS_PAL_XAC3
+  MPEG_TS_MP_LL_AAC
+  MPEG_TS_MP_LL_AAC_T
+  MPEG_TS_MP_LL_AAC_ISO
+  MPEG_TS_SD_50_L2_T
+  MPEG_TS_SD_60_L2_T
+  MPEG_TS_SD_60_AC3_T
+  MPEG_TS_SD_EU
+  MPEG_TS_SD_EU_T
+  MPEG_TS_SD_EU_ISO
+  MPEG_TS_SD_50_AC3_T
+  MPEG_TS_SD_NA
+  MPEG_TS_SD_NA_T
+  MPEG_TS_SD_NA_ISO
+  MPEG_TS_SD_NA_XAC3
+  MPEG_TS_SD_NA_XAC3_T
+  MPEG_TS_SD_NA_XAC3_ISO
+  MPEG_TS_HD_NA
+  MPEG_TS_HD_NA_T
+  MPEG_TS_HD_50_L2_T
+  MPEG_TS_HD_50_L2_ISO
+  MPEG_TS_HD_60_L2_T
+  MPEG_TS_HD_60_L2_ISO
+  MPEG_TS_HD_NA_ISO
+  MPEG_TS_HD_NA_XAC3
+  MPEG_TS_HD_NA_XAC3_T
+  MPEG_TS_HD_NA_XAC3_ISO
+  MPEG_ES_PAL
+  MPEG_ES_NTSC
+  MPEG_ES_PAL_XAC3
+  MPEG_ES_NTSC_XAC3
+  MPEG4_P2_MP4_SP_AAC
+  MPEG4_P2_MP4_SP_HEAAC
+  MPEG4_P2_MP4_SP_ATRAC3plus
+  MPEG4_P2_MP4_SP_AAC_LTP
+  MPEG4_P2_MP4_SP_L2_AAC
+  MPEG4_P2_MP4_SP_L2_AMR
+  MPEG4_P2_MP4_SP_VGA_AAC
+  MPEG4_P2_MP4_SP_VGA_HEAAC
+  MPEG4_P2_MP4_ASP_AAC
+  MPEG4_P2_MP4_ASP_HEAAC
+  MPEG4_P2_MP4_ASP_HEAAC_MULT5
+  MPEG4_P2_MP4_ASP_ATRAC3plus
+  MPEG4_P2_MP4_ASP_L5_SO_AAC
+  MPEG4_P2_MP4_ASP_L5_SO_HEAAC
+  MPEG4_P2_MP4_ASP_L5_SO_HEAAC_MULT5
+  MPEG4_P2_MP4_ASP_L4_SO_AAC
+  MPEG4_P2_MP4_ASP_L4_SO_HEAAC
+  MPEG4_P2_MP4_ASP_L4_SO_HEAAC_MULT5
+  MPEG4_H263_MP4_P0_L10_AAC
+  MPEG4_H263_MP4_P0_L10_AAC_LTP
+  MPEG4_P2_TS_SP_AAC
+  MPEG4_P2_TS_SP_AAC_T
+  MPEG4_P2_TS_SP_AAC_ISO
+  MPEG4_P2_TS_SP_MPEG1_L3
+  MPEG4_P2_TS_SP_MPEG1_L3_T
+  MPEG4_P2_TS_SP_MPEG1_L3_ISO
+  MPEG4_P2_TS_SP_AC3_L3
+  MPEG4_P2_TS_SP_AC3_T
+  MPEG4_P2_TS_SP_AC3_ISO
+  MPEG4_P2_TS_SP_MPEG2_L2
+  MPEG4_P2_TS_SP_MPEG2_L2_T
+  MPEG4_P2_TS_SP_MPEG2_L2_ISO
+  MPEG4_P2_TS_ASP_AAC
+  MPEG4_P2_TS_ASP_AAC_T
+  MPEG4_P2_TS_ASP_AAC_ISO
+  MPEG4_P2_TS_ASP_MPEG1_L3
+  MPEG4_P2_TS_ASP_MPEG1_L3_T
+  MPEG4_P2_TS_ASP_MPEG1_L3_ISO
+  MPEG4_P2_TS_ASP_AC3_L3
+  MPEG4_P2_TS_ASP_AC3_T
+  MPEG4_P2_TS_ASP_AC3_ISO
+  MPEG4_P2_TS_CO_AC3
+  MPEG4_P2_TS_CO_AC3_T
+  MPEG4_P2_TS_CO_AC3_ISO
+  MPEG4_P2_TS_CO_MPEG2_L2
+  MPEG4_P2_TS_CO_MPEG2_L2_T
+  MPEG4_P2_TS_CO_MPEG2_L2_ISO
+  MPEG4_P2_ASF_SP_G726
+  MPEG4_P2_ASF_ASP_L5_SO_G726
+  MPEG4_P2_ASF_ASP_L4_SO_G726
+  MPEG4_H263_3GPP_P0_L10_AMR_WBplus
+  MPEG4_P2_3GPP_SP_L0B_AAC
+  MPEG4_P2_3GPP_SP_L0B_AMR
+  MPEG4_H263_3GPP_P3_L10_AMR
+  AVC_MP4_MP_SD_AAC_MULT5
+  AVC_MP4_MP_SD_HEAAC_L2
+  AVC_MP4_MP_SD_MPEG1_L3
+  AVC_MP4_MP_SD_AC3
+  AVC_MP4_MP_SD_AAC_LTP
+  AVC_MP4_MP_SD_AAC_LTP_MULT5
+  AVC_MP4_MP_SD_AAC_LTP_MULT7
+  AVC_MP4_MP_SD_ATRAC3plus
+  AVC_MP4_MP_SD_BSAC
+  AVC_MP4_MP_HD_720p_AAC
+  AVC_MP4_MP_HD_1080i_AAC
+  AVC_MP4_HP_HD_AAC
+  AVC_MP4_BL_L3L_SD_AAC
+  AVC_MP4_BL_L3L_SD_HEAAC
+  AVC_MP4_BL_L3_SD_AAC
+  AVC_MP4_BL_CIF30_AAC_MULT5
+  AVC_MP4_BL_CIF30_HEAAC_L2
+  AVC_MP4_BL_CIF30_MPEG1_L3
+  AVC_MP4_BL_CIF30_AC3
+  AVC_MP4_BL_CIF30_AAC_LTP
+  AVC_MP4_BL_CIF30_AAC_LTP_MULT5
+  AVC_MP4_BL_L2_CIF30_AAC
+  AVC_MP4_BL_CIF30_BSAC
+  AVC_MP4_BL_CIF30_BSAC_MULT5
+  AVC_MP4_BL_CIF15_HEAAC
+  AVC_MP4_BL_CIF15_AMR
+  AVC_MP4_BL_CIF15_AAC
+  AVC_MP4_BL_CIF15_AAC_520
+  AVC_MP4_BL_CIF15_AAC_LTP
+  AVC_MP4_BL_CIF15_AAC_LTP_520
+  AVC_MP4_BL_CIF15_BSAC
+  AVC_MP4_BL_L12_CIF15_HEAAC
+  AVC_MP4_BL_L1B_QCIF15_HEAAC
+  AVC_TS_MP_SD_AAC_MULT5
+  AVC_TS_MP_SD_AAC_MULT5_T
+  AVC_TS_MP_SD_AAC_MULT5_ISO
+  AVC_TS_MP_SD_HEAAC_L2
+  AVC_TS_MP_SD_HEAAC_L2_T
+  AVC_TS_MP_SD_HEAAC_L2_ISO
+  AVC_TS_MP_SD_MPEG1_L3
+  AVC_TS_MP_SD_MPEG1_L3_T
+  AVC_TS_MP_SD_MPEG1_L3_ISO
+  AVC_TS_MP_SD_AC3
+  AVC_TS_MP_SD_AC3_T
+  AVC_TS_MP_SD_AC3_ISO
+  AVC_TS_MP_SD_AAC_LTP
+  AVC_TS_MP_SD_AAC_LTP_T
+  AVC_TS_MP_SD_AAC_LTP_ISO
+  AVC_TS_MP_SD_AAC_LTP_MULT5
+  AVC_TS_MP_SD_AAC_LTP_MULT5_T
+  AVC_TS_MP_SD_AAC_LTP_MULT5_ISO
+  AVC_TS_MP_SD_AAC_LTP_MULT7
+  AVC_TS_MP_SD_AAC_LTP_MULT7_T
+  AVC_TS_MP_SD_AAC_LTP_MULT7_ISO
+  AVC_TS_MP_SD_BSAC
+  AVC_TS_MP_SD_BSAC_T
+  AVC_TS_MP_SD_BSAC_ISO
+  AVC_TS_HD_24_AC3
+  AVC_TS_HD_24_AC3_T
+  AVC_TS_HD_24_AC3_ISO
+  AVC_TS_HD_50_LPCM_T
+  AVC_TS_HD_50_AC3
+  AVC_TS_HD_50_AC3_T
+  AVC_TS_HD_50_AC3_ISO
+  AVC_TS_HD_60_AC3
+  AVC_TS_HD_60_AC3_T
+  AVC_TS_HD_60_AC3_ISO
+  AVC_TS_BL_CIF30_AAC_MULT5
+  AVC_TS_BL_CIF30_AAC_MULT5_T
+  AVC_TS_BL_CIF30_AAC_MULT5_ISO
+  AVC_TS_BL_CIF30_HEAAC_L2
+  AVC_TS_BL_CIF30_HEAAC_L2_T
+  AVC_TS_BL_CIF30_HEAAC_L2_ISO
+  AVC_TS_BL_CIF30_MPEG1_L3
+  AVC_TS_BL_CIF30_MPEG1_L3_T
+  AVC_TS_BL_CIF30_MPEG1_L3_ISO
+  AVC_TS_BL_CIF30_AC3
+  AVC_TS_BL_CIF30_AC3_T
+  AVC_TS_BL_CIF30_AC3_ISO
+  AVC_TS_BL_CIF30_AAC_LTP
+  AVC_TS_BL_CIF30_AAC_LTP_T
+  AVC_TS_BL_CIF30_AAC_LTP_ISO
+  AVC_TS_BL_CIF30_AAC_LTP_MULT5
+  AVC_TS_BL_CIF30_AAC_LTP_MULT5_T
+  AVC_TS_BL_CIF30_AAC_LTP_MULT5_ISO
+  AVC_TS_BL_CIF30_AAC_940
+  AVC_TS_BL_CIF30_AAC_940_T
+  AVC_TS_BL_CIF30_AAC_940_ISO
+  AVC_TS_MP_HD_AAC_MULT5
+  AVC_TS_MP_HD_AAC_MULT5_T
+  AVC_TS_MP_HD_AAC_MULT5_ISO
+  AVC_TS_MP_HD_HEAAC_L2
+  AVC_TS_MP_HD_HEAAC_L2_T
+  AVC_TS_MP_HD_HEAAC_L2_ISO
+  AVC_TS_MP_HD_MPEG1_L3
+  AVC_TS_MP_HD_MPEG1_L3_T
+  AVC_TS_MP_HD_MPEG1_L3_ISO
+  AVC_TS_MP_HD_AC3
+  AVC_TS_MP_HD_AC3_T
+  AVC_TS_MP_HD_AC3_ISO
+  AVC_TS_MP_HD_AAC
+  AVC_TS_MP_HD_AAC_T
+  AVC_TS_MP_HD_AAC_ISO
+  AVC_TS_MP_HD_AAC_LTP
+  AVC_TS_MP_HD_AAC_LTP_T
+  AVC_TS_MP_HD_AAC_LTP_ISO
+  AVC_TS_MP_HD_AAC_LTP_MULT5
+  AVC_TS_MP_HD_AAC_LTP_MULT5_T
+  AVC_TS_MP_HD_AAC_LTP_MULT5_ISO
+  AVC_TS_MP_HD_AAC_LTP_MULT7
+  AVC_TS_MP_HD_AAC_LTP_MULT7_T
+  AVC_TS_MP_HD_AAC_LTP_MULT7_ISO
+  AVC_TS_BL_CIF15_AAC
+  AVC_TS_BL_CIF15_AAC_T
+  AVC_TS_BL_CIF15_AAC_ISO
+  AVC_TS_BL_CIF15_AAC_540
+  AVC_TS_BL_CIF15_AAC_540_T
+  AVC_TS_BL_CIF15_AAC_540_ISO
+  AVC_TS_BL_CIF15_AAC_LTP
+  AVC_TS_BL_CIF15_AAC_LTP_T
+  AVC_TS_BL_CIF15_AAC_LTP_ISO
+  AVC_TS_BL_CIF15_BSAC
+  AVC_TS_BL_CIF15_BSAC_T
+  AVC_TS_BL_CIF15_BSAC_ISO
+  AVC_3GPP_BL_CIF30_AMR_WBplus
+  AVC_3GPP_BL_CIF15_AMR_WBplus
+  AVC_3GPP_BL_QCIF15_AAC
+  AVC_3GPP_BL_QCIF15_AAC_LTP
+  AVC_3GPP_BL_QCIF15_HEAAC
+  AVC_3GPP_BL_QCIF15_AMR_WBplus
+  AVC_3GPP_BL_QCIF15_AMR
+  AVC_MP4_LPCM
+  AVI
+  AVI_XMS
+  DIVX
+  MATROSKA
+  MATROSKA_MKV
+  VC1_ASF_AP_L1_WMA
+  VC1_ASF_AP_L2_WMA
+  VC1_ASF_AP_L3_WMA
+  VC1_ASF_AP_L1_WMA_WMV
+  VC1_ASF_AP_L2_WMA_WMV
+  VC1_ASF_AP_L3_WMA_WMV
- String code
- String contentFormat
~ <<Create>> DLNAProfiles(String,String)
+ String getCode()
+ String getContentFormat()
+ {static} DLNAProfiles valueOf(String,String)
}
class org.fourthline.cling.support.model.dlna.DLNAMimeTypes {
+ {static} String MIME_IMAGE_JPEG
+ {static} String MIME_IMAGE_PNG
+ {static} String MIME_AUDIO_3GP
+ {static} String MIME_AUDIO_ADTS
+ {static} String MIME_AUDIO_ATRAC
+ {static} String MIME_AUDIO_DOLBY_DIGITAL
+ {static} String MIME_AUDIO_LPCM
+ {static} String MIME_AUDIO_MPEG
+ {static} String MIME_AUDIO_MPEG_4
+ {static} String MIME_AUDIO_WMA
+ {static} String MIME_VIDEO_3GP
+ {static} String MIME_VIDEO_ASF
+ {static} String MIME_VIDEO_MPEG
+ {static} String MIME_VIDEO_MPEG_4
+ {static} String MIME_VIDEO_MPEG_TS
+ {static} String MIME_VIDEO_WMV
+ {static} String MIME_VIDEO_DIVX
+ {static} String MIME_VIDEO_AVI
+ {static} String MIME_VIDEO_XMS_AVI
+ {static} String MIME_VIDEO_MATROSKA
+ {static} String MIME_VIDEO_MKV
}
class example.localservice.MyServiceWithAllowedValueProvider {
- String restricted
+ String getRestricted()
+ void setRestricted(String)
}
class example.localservice.MyServiceWithAllowedValueProvider.MyAllowedValueProvider {
+ String[] getValues()
}
class org.fourthline.cling.test.local.LocalActionInvocationNullTest {
+ void invokeActions()
}
class org.fourthline.cling.test.local.LocalActionInvocationNullTest.LocalTestServiceOne {
- String one
- String two
- MyString three
- boolean primitive
+ void setSomeValues(String,String,MyString)
+ void setPrimitive(boolean)
}
class org.fourthline.cling.test.local.LocalActionInvocationNullTest.MyString {
- String s
+ <<Create>> MyString(String)
+ String toString()
}
class android.support.mediacompat.R {
- <<Create>> R()
}
class android.support.mediacompat.R.attr {
+ {static} int font
+ {static} int fontProviderAuthority
+ {static} int fontProviderCerts
+ {static} int fontProviderFetchStrategy
+ {static} int fontProviderFetchTimeout
+ {static} int fontProviderPackage
+ {static} int fontProviderQuery
+ {static} int fontStyle
+ {static} int fontWeight
- <<Create>> attr()
}
class android.support.mediacompat.R.bool {
+ {static} int abc_action_bar_embed_tabs
- <<Create>> bool()
}
class android.support.mediacompat.R.color {
+ {static} int notification_action_color_filter
+ {static} int notification_icon_bg_color
+ {static} int notification_material_background_media_default_color
+ {static} int primary_text_default_material_dark
+ {static} int ripple_material_light
+ {static} int secondary_text_default_material_dark
+ {static} int secondary_text_default_material_light
- <<Create>> color()
}
class android.support.mediacompat.R.dimen {
+ {static} int compat_button_inset_horizontal_material
+ {static} int compat_button_inset_vertical_material
+ {static} int compat_button_padding_horizontal_material
+ {static} int compat_button_padding_vertical_material
+ {static} int compat_control_corner_material
+ {static} int notification_action_icon_size
+ {static} int notification_action_text_size
+ {static} int notification_big_circle_margin
+ {static} int notification_content_margin_start
+ {static} int notification_large_icon_height
+ {static} int notification_large_icon_width
+ {static} int notification_main_column_padding_top
+ {static} int notification_media_narrow_margin
+ {static} int notification_right_icon_size
+ {static} int notification_right_side_padding_top
+ {static} int notification_small_icon_background_padding
+ {static} int notification_small_icon_size_as_large
+ {static} int notification_subtext_size
+ {static} int notification_top_pad
+ {static} int notification_top_pad_large_text
- <<Create>> dimen()
}
class android.support.mediacompat.R.drawable {
+ {static} int notification_action_background
+ {static} int notification_bg
+ {static} int notification_bg_low
+ {static} int notification_bg_low_normal
+ {static} int notification_bg_low_pressed
+ {static} int notification_bg_normal
+ {static} int notification_bg_normal_pressed
+ {static} int notification_icon_background
+ {static} int notification_template_icon_bg
+ {static} int notification_template_icon_low_bg
+ {static} int notification_tile_bg
+ {static} int notify_panel_notification_icon_bg
- <<Create>> drawable()
}
class android.support.mediacompat.R.id {
+ {static} int action0
+ {static} int action_container
+ {static} int action_divider
+ {static} int action_image
+ {static} int action_text
+ {static} int actions
+ {static} int async
+ {static} int blocking
+ {static} int cancel_action
+ {static} int chronometer
+ {static} int end_padder
+ {static} int forever
+ {static} int icon
+ {static} int icon_group
+ {static} int info
+ {static} int italic
+ {static} int line1
+ {static} int line3
+ {static} int media_actions
+ {static} int normal
+ {static} int notification_background
+ {static} int notification_main_column
+ {static} int notification_main_column_container
+ {static} int right_icon
+ {static} int right_side
+ {static} int status_bar_latest_event_content
+ {static} int text
+ {static} int text2
+ {static} int time
+ {static} int title
- <<Create>> id()
}
class android.support.mediacompat.R.integer {
+ {static} int cancel_button_image_alpha
+ {static} int status_bar_notification_info_maxnum
- <<Create>> integer()
}
class android.support.mediacompat.R.layout {
+ {static} int notification_action
+ {static} int notification_action_tombstone
+ {static} int notification_media_action
+ {static} int notification_media_cancel_action
+ {static} int notification_template_big_media
+ {static} int notification_template_big_media_custom
+ {static} int notification_template_big_media_narrow
+ {static} int notification_template_big_media_narrow_custom
+ {static} int notification_template_custom_big
+ {static} int notification_template_icon_group
+ {static} int notification_template_lines_media
+ {static} int notification_template_media
+ {static} int notification_template_media_custom
+ {static} int notification_template_part_chronometer
+ {static} int notification_template_part_time
- <<Create>> layout()
}
class android.support.mediacompat.R.string {
+ {static} int status_bar_notification_info_overflow
- <<Create>> string()
}
class android.support.mediacompat.R.style {
+ {static} int TextAppearance_Compat_Notification
+ {static} int TextAppearance_Compat_Notification_Info
+ {static} int TextAppearance_Compat_Notification_Info_Media
+ {static} int TextAppearance_Compat_Notification_Line2
+ {static} int TextAppearance_Compat_Notification_Line2_Media
+ {static} int TextAppearance_Compat_Notification_Media
+ {static} int TextAppearance_Compat_Notification_Time
+ {static} int TextAppearance_Compat_Notification_Time_Media
+ {static} int TextAppearance_Compat_Notification_Title
+ {static} int TextAppearance_Compat_Notification_Title_Media
+ {static} int Widget_Compat_NotificationActionContainer
+ {static} int Widget_Compat_NotificationActionText
- <<Create>> style()
}
class android.support.mediacompat.R.styleable {
+ {static} int[] FontFamily
+ {static} int FontFamily_fontProviderAuthority
+ {static} int FontFamily_fontProviderCerts
+ {static} int FontFamily_fontProviderFetchStrategy
+ {static} int FontFamily_fontProviderFetchTimeout
+ {static} int FontFamily_fontProviderPackage
+ {static} int FontFamily_fontProviderQuery
+ {static} int[] FontFamilyFont
+ {static} int FontFamilyFont_font
+ {static} int FontFamilyFont_fontStyle
+ {static} int FontFamilyFont_fontWeight
- <<Create>> styleable()
}
interface org.fourthline.cling.binding.AllowedValueRangeProvider {
+ long getMinimum()
+ long getMaximum()
+ long getStep()
}
abstract class org.fourthline.cling.model.gena.GENASubscription {
# S service
# String subscriptionId
# int requestedDurationSeconds
# int actualDurationSeconds
# UnsignedIntegerFourBytes currentSequence
# Map<String,StateVariableValue<S>> currentValues
# <<Create>> GENASubscription(S)
+ <<Create>> GENASubscription(S,int)
+ S getService()
+ String getSubscriptionId()
+ void setSubscriptionId(String)
+ int getRequestedDurationSeconds()
+ int getActualDurationSeconds()
+ void setActualSubscriptionDurationSeconds(int)
+ UnsignedIntegerFourBytes getCurrentSequence()
+ Map<String,StateVariableValue<S>> getCurrentValues()
+ {abstract}void established()
+ {abstract}void eventReceived()
+ String toString()
}
enum org.fourthline.cling.model.types.ErrorCode {
+  INVALID_ACTION
+  INVALID_ARGS
+  ACTION_FAILED
+  ARGUMENT_VALUE_INVALID
+  ARGUMENT_VALUE_OUT_OF_RANGE
+  OPTIONAL_ACTION
+  OUT_OF_MEMORY
+  HUMAN_INTERVENTION_REQUIRED
+  ARGUMENT_TOO_LONG
+  ACTION_NOT_AUTHORIZED
+  SIGNATURE_FAILURE
+  SIGNATURE_MISSING
+  NOT_ENCRYPTED
+  INVALID_SEQUENCE
+  INVALID_CONTROL_URL
+  NO_SUCH_SESSION
+  TRANSPORT_LOCKED
+  ILLEGAL_MIME_TYPE
- int code
- String description
~ <<Create>> ErrorCode(int,String)
+ int getCode()
+ String getDescription()
+ {static} ErrorCode getByCode(int)
}
class de.yaacc.Yaacc {
- UpnpClient upnpClient
- HashMap<String,PowerManager.WakeLock> wakeLocks
- Executor contentLoadThreadPool
+ void onCreate()
+ Executor getContentLoadExecutor()
+ UpnpClient getUpnpClient()
+ boolean isUnplugged()
+ void aquireWakeLock(long,String)
+ void releaseWakeLock(String)
+ void exit()
}
class org.seamless.util.time.DateFormat {
# String label
# String pattern
+ <<Create>> DateFormat()
~ <<Create>> DateFormat(String,String)
+ <<Create>> DateFormat(String)
+ String getLabel()
+ String getPattern()
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
enum org.seamless.util.time.Preset {
+  DD_MM_YYYY_DOT
+  MM_DD_YYYY_DOT
+  YYYY_MM_DD_DOT
+  YYYY_DD_MM_DOT
+  DD_MM_YYYY_SLASH
+  MM_DD_YYYY_SLASH
+  YYYY_MM_DD_SLASH
+  YYYY_DD_MM_SLASH
+  YYYY_MMM_DD
+  DD_MMM_YYYY
+  MMM_DD_YYYY
# DateFormat dateFormat
~ <<Create>> Preset(DateFormat)
+ DateFormat getDateFormat()
}
class org.fourthline.cling.test.resources.DeviceDescriptorRetrievalTest {
+ void registerAndRetrieveDescriptor()
+ void retrieveNonExistentDescriptor()
}
class org.fourthline.cling.test.local.LocalActionInvocationCSVTest {
+ {static} Object[][] devices()
+ {static} LocalDevice createTestDevice(LocalService)
+ void invokeActions(LocalDevice)
# String executeActions(LocalService,String,String,List)
}
class org.fourthline.cling.test.local.LocalActionInvocationCSVTest.TestServiceOne {
- CSV<String> stringVar
- CSV<Integer> intVar
- CSV<Boolean> booleanVar
- CSV<UnsignedIntegerFourBytes> uifourVar
+ CSV<String> getStringVar()
+ void setStringVar(CSVString)
+ CSV<Integer> getIntVar()
+ void setIntVar(CSVInteger)
+ CSV<Boolean> getBooleanVar()
+ void setBooleanVar(CSVBoolean)
+ CSV<UnsignedIntegerFourBytes> getUifourVar()
+ void setUifourVar(CSVUnsignedIntegerFourBytes)
}
abstract class org.fourthline.cling.binding.xml.Descriptor {
}
interface org.fourthline.cling.binding.xml.Descriptor.Device {
+ {static} String NAMESPACE_URI
+ {static} String DLNA_NAMESPACE_URI
+ {static} String DLNA_PREFIX
+ {static} String SEC_NAMESPACE_URI
+ {static} String SEC_PREFIX
}
enum org.fourthline.cling.binding.xml.ELEMENT {
+  root
+  specVersion
+  major
+  minor
+  URLBase
+  device
+  UDN
+  X_DLNADOC
+  X_DLNACAP
+  ProductCap
+  X_ProductCap
+  deviceType
+  friendlyName
+  manufacturer
+  manufacturerURL
+  modelDescription
+  modelName
+  modelNumber
+  modelURL
+  presentationURL
+  UPC
+  serialNumber
+  iconList
+  icon
+  width
+  height
+  depth
+  url
+  mimetype
+  serviceList
+  service
+  serviceType
+  serviceId
+  SCPDURL
+  controlURL
+  eventSubURL
+  deviceList
+ {static} ELEMENT valueOrNullOf(String)
+ boolean equals(Node)
}
interface org.fourthline.cling.binding.xml.Descriptor.Service {
+ {static} String NAMESPACE_URI
}
enum org.fourthline.cling.binding.xml.ELEMENT {
+  scpd
+  specVersion
+  major
+  minor
+  actionList
+  action
+  name
+  argumentList
+  argument
+  direction
+  relatedStateVariable
+  retval
+  serviceStateTable
+  stateVariable
+  dataType
+  defaultValue
+  allowedValueList
+  allowedValue
+  allowedValueRange
+  minimum
+  maximum
+  step
+ {static} ELEMENT valueOrNullOf(String)
+ boolean equals(Node)
}
enum org.fourthline.cling.binding.xml.ATTRIBUTE {
+  sendEvents
}
class org.fourthline.cling.model.types.ServiceType {
- {static} Logger log
+ {static} Pattern PATTERN
+ {static} Pattern BROKEN_PATTERN
- String namespace
- String type
- int version
+ <<Create>> ServiceType(String,String)
+ <<Create>> ServiceType(String,String,int)
+ String getNamespace()
+ String getType()
+ int getVersion()
+ {static} ServiceType valueOf(String)
+ boolean implementsVersion(ServiceType)
+ String toFriendlyString()
+ String toString()
+ boolean equals(Object)
+ int hashCode()
}
class example.messagebox.MessageBoxTest {
- {static} String MESSAGE_SMS
- {static} String MESSAGE_INCOMING_CALL
- {static} String MESSAGE_SCHEDULE_REMINDER
+ void createSMS()
+ void createIncomingCall()
+ void createScheduleReminder()
+ void sendMessageToTV()
}
class example.messagebox.MessageBoxTest.MyTV {
~ boolean[] tests
# void checkMessage(String,String,String)
}
class org.fourthline.cling.support.igd.PortMappingListener {
- {static} Logger log
+ {static} DeviceType IGD_DEVICE_TYPE
+ {static} DeviceType CONNECTION_DEVICE_TYPE
+ {static} ServiceType IP_SERVICE_TYPE
+ {static} ServiceType PPP_SERVICE_TYPE
# PortMapping[] portMappings
# Map<Service,List<PortMapping>> activePortMappings
+ <<Create>> PortMappingListener(PortMapping)
+ <<Create>> PortMappingListener(PortMapping[])
+ void deviceAdded(Registry,Device)
+ void deviceRemoved(Registry,Device)
+ void beforeShutdown(Registry)
# Service discoverConnectionService(Device)
# void handleFailureMessage(String)
}
class org.fourthline.cling.transport.impl.DatagramIOConfigurationImpl {
- int timeToLive
- int maxDatagramBytes
+ <<Create>> DatagramIOConfigurationImpl()
+ <<Create>> DatagramIOConfigurationImpl(int,int)
+ int getTimeToLive()
+ void setTimeToLive(int)
+ int getMaxDatagramBytes()
+ void setMaxDatagramBytes(int)
}
class de.yaacc.databinding.ActivityTabBrowseBinding {
- RelativeLayout rootView
+ TabLayout browserTabLayout
+ ViewPager2 browserTabPager
- <<Create>> ActivityTabBrowseBinding(RelativeLayout,TabLayout,ViewPager2)
+ RelativeLayout getRoot()
+ {static} ActivityTabBrowseBinding inflate(LayoutInflater)
+ {static} ActivityTabBrowseBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityTabBrowseBinding bind(View)
}
class example.igd.IGDSampleData {
+ {static} LocalService readService(Class<?>)
+ {static} LocalDevice createIGDevice(Class<?>)
+ {static} LocalDevice createIGDevice(LocalService[],LocalDevice[])
+ {static} LocalDevice createWANDevice(LocalService[],LocalDevice[])
+ {static} LocalDevice createWANConnectionDevice(LocalService[],LocalDevice[])
}
class example.igd.IGDSampleData.WANIPConnectionService {
+ void addPortMapping(String,UnsignedIntegerTwoBytes,String,UnsignedIntegerTwoBytes,String,Boolean,String,UnsignedIntegerFourBytes)
+ void deletePortMapping(String,UnsignedIntegerTwoBytes,String)
+ PortMapping getGenericPortMappingEntry(UnsignedIntegerTwoBytes)
# void addPortMapping(PortMapping)
# void deletePortMapping(PortMapping)
+ Connection.StatusInfo getStatusInfo()
+ String getExternalIPAddress()
}
class org.seamless.util.io.Base64Coder {
+ {static} int NO_OPTIONS
+ {static} int ENCODE
+ {static} int DECODE
+ {static} int GZIP
+ {static} int DONT_GUNZIP
+ {static} int DO_BREAK_LINES
+ {static} int URL_SAFE
+ {static} int ORDERED
- {static} int MAX_LINE_LENGTH
- {static} byte EQUALS_SIGN
- {static} byte NEW_LINE
- {static} String PREFERRED_ENCODING
- {static} byte WHITE_SPACE_ENC
- {static} byte EQUALS_SIGN_ENC
- {static} byte[] _STANDARD_ALPHABET
- {static} byte[] _STANDARD_DECODABET
- {static} byte[] _URL_SAFE_ALPHABET
- {static} byte[] _URL_SAFE_DECODABET
- {static} byte[] _ORDERED_ALPHABET
- {static} byte[] _ORDERED_DECODABET
- <<Create>> Base64Coder()
- {static} byte[] getAlphabet(int)
- {static} byte[] getDecodabet(int)
- {static} byte[] encode3to4(byte[],byte[],int,int)
- {static} byte[] encode3to4(byte[],int,int,byte[],int,int)
+ {static} void encode(java.nio.ByteBuffer,java.nio.ByteBuffer)
+ {static} void encode(java.nio.ByteBuffer,java.nio.CharBuffer)
+ {static} String encodeObject(java.io.Serializable)
+ {static} String encodeObject(java.io.Serializable,int)
+ {static} String encodeBytes(byte[])
+ {static} String encodeBytes(byte[],int)
+ {static} String encodeBytes(byte[],int,int)
+ {static} String encodeBytes(byte[],int,int,int)
+ {static} byte[] encodeBytesToBytes(byte[])
+ {static} byte[] encodeBytesToBytes(byte[],int,int,int)
- {static} int decode4to3(byte[],int,byte[],int,int)
+ {static} byte[] decode(byte[])
+ {static} byte[] decode(byte[],int,int,int)
+ {static} byte[] decode(String)
+ {static} byte[] decode(String,int)
+ {static} Object decodeToObject(String)
+ {static} Object decodeToObject(String,int,ClassLoader)
+ {static} void encodeToFile(byte[],String)
+ {static} void decodeToFile(String,String)
+ {static} byte[] decodeFromFile(String)
+ {static} String encodeFromFile(String)
+ {static} void encodeFileToFile(String,String)
+ {static} void decodeFileToFile(String,String)
+ {static} byte[] encode(byte[])
+ {static} String encodeString(String)
+ {static} String decodeString(String)
}
class org.seamless.util.io.Base64Coder.InputStream {
- boolean encode
- int position
- byte[] buffer
- int bufferLength
- int numSigBytes
- int lineLength
- boolean breakLines
- int options
- byte[] decodabet
+ <<Create>> InputStream(java.io.InputStream)
+ <<Create>> InputStream(java.io.InputStream,int)
+ int read()
+ int read(byte[],int,int)
}
class org.seamless.util.io.Base64Coder.OutputStream {
- boolean encode
- int position
- byte[] buffer
- int bufferLength
- int lineLength
- boolean breakLines
- byte[] b4
- boolean suspendEncoding
- int options
- byte[] decodabet
+ <<Create>> OutputStream(java.io.OutputStream)
+ <<Create>> OutputStream(java.io.OutputStream,int)
+ void write(int)
+ void write(byte[],int,int)
+ void flushBase64()
+ void close()
+ void suspendEncoding()
+ void resumeEncoding()
}
class org.seamless.xml.CatalogResourceResolver {
- {static} Logger log
- Map<URI,URL> catalog
+ <<Create>> CatalogResourceResolver(Map<URI,URL>)
+ LSInput resolveResource(String,String,String,String,String)
}
class org.seamless.xml.CatalogResourceResolver.Input {
~ InputStream in
+ <<Create>> Input(InputStream)
+ Reader getCharacterStream()
+ void setCharacterStream(Reader)
+ InputStream getByteStream()
+ void setByteStream(InputStream)
+ String getStringData()
+ void setStringData(String)
+ String getSystemId()
+ void setSystemId(String)
+ String getPublicId()
+ void setPublicId(String)
+ String getBaseURI()
+ void setBaseURI(String)
+ String getEncoding()
+ void setEncoding(String)
+ boolean getCertifiedText()
+ void setCertifiedText(boolean)
}
class org.fourthline.cling.model.types.csv.CSVURI {
+ <<Create>> CSVURI()
+ <<Create>> CSVURI(String)
}
class org.fourthline.cling.model.message.header.STAllHeader {
+ <<Create>> STAllHeader()
+ void setString(String)
+ String getString()
}
class de.yaacc.databinding.BrowseItemBinding {
- RelativeLayout rootView
+ ImageView browseItemIcon
+ TextView browseItemName
- <<Create>> BrowseItemBinding(RelativeLayout,ImageView,TextView)
+ RelativeLayout getRoot()
+ {static} BrowseItemBinding inflate(LayoutInflater)
+ {static} BrowseItemBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} BrowseItemBinding bind(View)
}
class de.yaacc.databinding.ActivityImageViewerBinding {
- RelativeLayout rootView
+ ImageView imageView
+ RelativeLayout layout
- <<Create>> ActivityImageViewerBinding(RelativeLayout,ImageView,RelativeLayout)
+ RelativeLayout getRoot()
+ {static} ActivityImageViewerBinding inflate(LayoutInflater)
+ {static} ActivityImageViewerBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityImageViewerBinding bind(View)
}
enum org.fourthline.cling.support.model.TransportAction {
+  Play
+  Stop
+  Pause
+  Seek
+  Next
+  Previous
+  Record
+ {static} TransportAction[] valueOfCommaSeparatedList(String)
}
class org.fourthline.cling.support.model.container.MusicArtist {
+ {static} Class CLASS
+ <<Create>> MusicArtist()
+ <<Create>> MusicArtist(Container)
+ <<Create>> MusicArtist(String,Container,String,String,Integer)
+ <<Create>> MusicArtist(String,String,String,String,Integer)
+ String getFirstGenre()
+ String[] getGenres()
+ MusicArtist setGenres(String[])
+ URI getArtistDiscographyURI()
+ MusicArtist setArtistDiscographyURI(URI)
}
class org.fourthline.cling.model.types.csv.CSVCharacter {
+ <<Create>> CSVCharacter()
+ <<Create>> CSVCharacter(String)
}
class org.fourthline.cling.model.Location {
# NetworkAddress networkAddress
# String path
# URL url
+ <<Create>> Location(NetworkAddress,String)
+ NetworkAddress getNetworkAddress()
+ String getPath()
+ boolean equals(Object)
+ int hashCode()
+ URL getURL()
- {static} URL createAbsoluteURL(InetAddress,int,String)
}
class de.yaacc.upnp.server.contentdirectory.ImageByBucketNameItemBrowser {
+ <<Create>> ImageByBucketNameItemBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
abstract class org.fourthline.cling.test.transport.StreamServerClientTest {
+ {static} String TEST_HOST
+ {static} int TEST_PORT
- {static} Logger log
- UpnpServiceConfiguration configuration
- StreamServer server
- StreamClient client
- TestProtocol lastExecutedServerProtocol
- MockProtocolFactory protocolFactory
- MockRouter router
+ void stop()
+ void start()
+ void clearLastProtocol()
+ void basic()
+ void cancelled()
+ void expired()
+ void checkAlive()
+ void checkAliveExpired()
+ void checkAliveCancelled()
# StreamRequestMessage createRequestMessage(String)
+ {abstract}StreamServer createStreamServer(int)
+ {abstract}StreamClient createStreamClient(UpnpServiceConfiguration)
}
abstract class org.fourthline.cling.test.transport.StreamServerClientTest.TestProtocol {
# boolean isComplete
+ <<Create>> TestProtocol(StreamRequestMessage)
}
class org.fourthline.cling.test.transport.StreamServerClientTest.OKEmptyResponse {
+ {static} String PATH
+ <<Create>> OKEmptyResponse(StreamRequestMessage)
# StreamResponseMessage executeSync()
}
class org.fourthline.cling.test.transport.StreamServerClientTest.OKBodyResponse {
+ {static} String PATH
+ <<Create>> OKBodyResponse(StreamRequestMessage)
# StreamResponseMessage executeSync()
}
class org.fourthline.cling.test.transport.StreamServerClientTest.NoResponse {
+ {static} String PATH
+ <<Create>> NoResponse(StreamRequestMessage)
# StreamResponseMessage executeSync()
}
class org.fourthline.cling.test.transport.StreamServerClientTest.DelayedResponse {
+ {static} String PATH
+ <<Create>> DelayedResponse(StreamRequestMessage)
# StreamResponseMessage executeSync()
}
class org.fourthline.cling.test.transport.StreamServerClientTest.TooLongResponse {
+ {static} String PATH
+ <<Create>> TooLongResponse(StreamRequestMessage)
# StreamResponseMessage executeSync()
}
class org.fourthline.cling.test.transport.StreamServerClientTest.CheckAliveResponse {
+ {static} String PATH
+ <<Create>> CheckAliveResponse(StreamRequestMessage)
# StreamResponseMessage executeSync()
}
class org.fourthline.cling.test.transport.StreamServerClientTest.CheckAliveLongResponse {
+ {static} String PATH
+ <<Create>> CheckAliveLongResponse(StreamRequestMessage)
# StreamResponseMessage executeSync()
}
class de.yaacc.upnp.server.contentdirectory.MusicAllTitleItemBrowser {
+ <<Create>> MusicAllTitleItemBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
class org.fourthline.cling.model.message.gena.IncomingSubscribeResponseMessage {
+ <<Create>> IncomingSubscribeResponseMessage(StreamResponseMessage)
+ boolean isValidHeaders()
+ String getSubscriptionId()
+ int getSubscriptionDurationSeconds()
}
class de.yaacc.upnp.server.contentdirectory.ImagesByBucketNameFolderBrowser {
+ <<Create>> ImagesByBucketNameFolderBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
- Integer getSize(YaaccContentDirectory,String)
- String getName(YaaccContentDirectory,String)
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
class org.fourthline.cling.model.profile.ClientInfo {
# UpnpHeaders requestHeaders
+ <<Create>> ClientInfo()
+ <<Create>> ClientInfo(UpnpHeaders)
+ UpnpHeaders getRequestHeaders()
+ String getRequestUserAgent()
+ void setRequestUserAgent(String)
+ String toString()
}
class example.mediaserver.DLNAProtocolTest {
+ void convertProtocol()
+ void createProtocol()
}
class org.fourthline.cling.support.model.ConnectionInfo {
# int connectionID
# int rcsID
# int avTransportID
# ProtocolInfo protocolInfo
# ServiceReference peerConnectionManager
# int peerConnectionID
# Direction direction
# Status connectionStatus
+ <<Create>> ConnectionInfo()
+ <<Create>> ConnectionInfo(int,int,int,ProtocolInfo,ServiceReference,int,Direction,Status)
+ int getConnectionID()
+ int getRcsID()
+ int getAvTransportID()
+ ProtocolInfo getProtocolInfo()
+ ServiceReference getPeerConnectionManager()
+ int getPeerConnectionID()
+ Direction getDirection()
+ Status getConnectionStatus()
+ void setConnectionStatus(Status)
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
enum org.fourthline.cling.support.model.Status {
+  OK
+  ContentFormatMismatch
+  InsufficientBandwidth
+  UnreliableChannel
+  Unknown
}
enum org.fourthline.cling.support.model.Direction {
+  Output
+  Input
+ Direction getOpposite()
}
class org.fourthline.cling.support.lastchange.EventedValueString {
+ <<Create>> EventedValueString(String)
+ <<Create>> EventedValueString(Map.Entry<String,String>[])
# Datatype getDatatype()
}
class org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl {
- {static} Logger log
+ D describe(D,String)
+ D describe(D,Document)
+ D buildInstance(D,MutableDevice)
# void hydrateRoot(MutableDevice,Element)
+ void hydrateSpecVersion(MutableDevice,Node)
+ void hydrateDevice(MutableDevice,Node)
+ void hydrateIconList(MutableDevice,Node)
+ void hydrateServiceList(MutableDevice,Node)
+ void hydrateDeviceList(MutableDevice,Node)
+ String generate(Device,RemoteClientInfo,Namespace)
+ Document buildDOM(Device,RemoteClientInfo,Namespace)
# void generateRoot(Namespace,Device,Document,RemoteClientInfo)
# void generateSpecVersion(Namespace,Device,Document,Element)
# void generateDevice(Namespace,Device,Document,Element,RemoteClientInfo)
# void generateIconList(Namespace,Device,Document,Element)
# void generateServiceList(Namespace,Device,Document,Element)
# void generateDeviceList(Namespace,Device,Document,Element,RemoteClientInfo)
+ void warning(SAXParseException)
+ void error(SAXParseException)
+ void fatalError(SAXParseException)
# {static} URI parseURI(String)
}
class org.fourthline.cling.model.meta.RemoteDeviceIdentity {
- URL descriptorURL
- byte[] interfaceMacAddress
- InetAddress discoveredOnLocalAddress
+ <<Create>> RemoteDeviceIdentity(UDN,RemoteDeviceIdentity)
+ <<Create>> RemoteDeviceIdentity(UDN,Integer,URL,byte[],InetAddress)
+ <<Create>> RemoteDeviceIdentity(IncomingNotificationRequest)
+ <<Create>> RemoteDeviceIdentity(IncomingSearchResponse)
+ URL getDescriptorURL()
+ byte[] getInterfaceMacAddress()
+ InetAddress getDiscoveredOnLocalAddress()
+ byte[] getWakeOnLANBytes()
+ String toString()
}
class org.seamless.http.CacheControl {
- int maxAge
- int sharedMaxAge
- boolean noCache
- List<String> noCacheFields
- boolean privateFlag
- List<String> privateFields
- boolean noStore
- boolean noTransform
- boolean mustRevalidate
- boolean proxyRevalidate
- Map<String,String> cacheExtensions
+ int getMaxAge()
+ void setMaxAge(int)
+ int getSharedMaxAge()
+ void setSharedMaxAge(int)
+ boolean isNoCache()
+ void setNoCache(boolean)
+ List<String> getNoCacheFields()
+ void setNoCacheFields(List<String>)
+ boolean isPrivateFlag()
+ void setPrivateFlag(boolean)
+ List<String> getPrivateFields()
+ void setPrivateFields(List<String>)
+ boolean isNoStore()
+ void setNoStore(boolean)
+ boolean isNoTransform()
+ void setNoTransform(boolean)
+ boolean isMustRevalidate()
+ void setMustRevalidate(boolean)
+ boolean isProxyRevalidate()
+ void setProxyRevalidate(boolean)
+ Map<String,String> getCacheExtensions()
+ void setCacheExtensions(Map<String,String>)
+ {static} CacheControl valueOf(String)
+ String toString()
- StringBuilder append(String,StringBuilder)
+ boolean equals(Object)
+ int hashCode()
}
class org.fourthline.cling.model.action.ActionException {
- int errorCode
+ <<Create>> ActionException(int,String)
+ <<Create>> ActionException(int,String,Throwable)
+ <<Create>> ActionException(ErrorCode)
+ <<Create>> ActionException(ErrorCode,String)
+ <<Create>> ActionException(ErrorCode,String,boolean)
+ <<Create>> ActionException(ErrorCode,String,Throwable)
+ int getErrorCode()
}
class de.yaacc.player.LocalImagePlayer {
- Timer commandExecutionTimer
- String name
- UpnpClient upnpClient
- SynchronizationInfo syncInfo
- PendingIntent notificationIntent
- PlayerService playerService
+ <<Create>> LocalImagePlayer(UpnpClient,String)
+ <<Create>> LocalImagePlayer(UpnpClient)
+ void startService()
+ void onServiceConnected(ComponentName,IBinder)
+ void onServiceDisconnected(ComponentName)
+ void next()
+ void previous()
+ void pause()
+ void play()
+ void stop()
+ void setItems(PlayableItem)
+ void setName(String)
+ String getName()
+ void exit()
+ void clear()
+ void onDestroy()
- void showNotification(ArrayList<Uri>)
- void cancleNotification()
- PendingIntent getNotificationIntent(ArrayList<Uri>)
- int getNotificationId()
+ int getId()
+ void addPropertyChangeListener(PropertyChangeListener)
+ void removePropertyChangeListener(PropertyChangeListener)
+ String getPositionString()
+ String getCurrentItemTitle()
+ String getNextItemTitle()
+ String getDuration()
+ String getElapsedTime()
+ URI getAlbumArt()
+ void setSyncInfo(SynchronizationInfo)
+ SynchronizationInfo getSyncInfo()
- long getExecutionTime()
+ boolean getMute()
+ void setMute(boolean)
+ void setVolume(int)
+ int getVolume()
+ int getIconResourceId()
+ String getDeviceId()
+ PendingIntent getNotificationIntent()
+ void seekTo(long)
}
class org.fourthline.cling.transport.RouterException {
+ <<Create>> RouterException()
+ <<Create>> RouterException(String)
+ <<Create>> RouterException(String,Throwable)
+ <<Create>> RouterException(Throwable)
}
class org.fourthline.cling.binding.xml.DescriptorBindingException {
+ <<Create>> DescriptorBindingException(String)
+ <<Create>> DescriptorBindingException(String,Throwable)
}
class org.fourthline.cling.model.message.gena.OutgoingSubscribeResponseMessage {
+ <<Create>> OutgoingSubscribeResponseMessage(UpnpResponse.Status)
+ <<Create>> OutgoingSubscribeResponseMessage(LocalGENASubscription)
}
class org.fourthline.cling.model.message.discovery.OutgoingSearchResponse {
+ <<Create>> OutgoingSearchResponse(IncomingDatagramMessage,Location,LocalDevice)
}
abstract class org.fourthline.cling.model.state.StateVariableAccessor {
+ StateVariableValue read(StateVariable<LocalService>,Object)
+ {abstract}Class<?> getReturnType()
+ {abstract}Object read(Object)
+ String toString()
}
class org.fourthline.cling.model.state.AccessCommand {
~ Object result
+ void execute(ServiceManager)
}
class org.fourthline.cling.model.meta.StateVariableTypeDetails {
- {static} Logger log
- Datatype datatype
- String defaultValue
- String[] allowedValues
- StateVariableAllowedValueRange allowedValueRange
+ <<Create>> StateVariableTypeDetails(Datatype)
+ <<Create>> StateVariableTypeDetails(Datatype,String)
+ <<Create>> StateVariableTypeDetails(Datatype,String,String[],StateVariableAllowedValueRange)
+ Datatype getDatatype()
+ String getDefaultValue()
+ String[] getAllowedValues()
+ StateVariableAllowedValueRange getAllowedValueRange()
# boolean foundDefaultInAllowedValues(String,String[])
+ List<ValidationError> validate()
}
class org.fourthline.cling.model.message.header.MXHeader {
+ {static} Integer DEFAULT_VALUE
+ <<Create>> MXHeader()
+ <<Create>> MXHeader(Integer)
+ void setString(String)
+ String getString()
}
class android.support.compat.R {
- <<Create>> R()
}
class android.support.compat.R.attr {
+ {static} int font
+ {static} int fontProviderAuthority
+ {static} int fontProviderCerts
+ {static} int fontProviderFetchStrategy
+ {static} int fontProviderFetchTimeout
+ {static} int fontProviderPackage
+ {static} int fontProviderQuery
+ {static} int fontStyle
+ {static} int fontWeight
- <<Create>> attr()
}
class android.support.compat.R.bool {
+ {static} int abc_action_bar_embed_tabs
- <<Create>> bool()
}
class android.support.compat.R.color {
+ {static} int notification_action_color_filter
+ {static} int notification_icon_bg_color
+ {static} int ripple_material_light
+ {static} int secondary_text_default_material_light
- <<Create>> color()
}
class android.support.compat.R.dimen {
+ {static} int compat_button_inset_horizontal_material
+ {static} int compat_button_inset_vertical_material
+ {static} int compat_button_padding_horizontal_material
+ {static} int compat_button_padding_vertical_material
+ {static} int compat_control_corner_material
+ {static} int notification_action_icon_size
+ {static} int notification_action_text_size
+ {static} int notification_big_circle_margin
+ {static} int notification_content_margin_start
+ {static} int notification_large_icon_height
+ {static} int notification_large_icon_width
+ {static} int notification_main_column_padding_top
+ {static} int notification_media_narrow_margin
+ {static} int notification_right_icon_size
+ {static} int notification_right_side_padding_top
+ {static} int notification_small_icon_background_padding
+ {static} int notification_small_icon_size_as_large
+ {static} int notification_subtext_size
+ {static} int notification_top_pad
+ {static} int notification_top_pad_large_text
- <<Create>> dimen()
}
class android.support.compat.R.drawable {
+ {static} int notification_action_background
+ {static} int notification_bg
+ {static} int notification_bg_low
+ {static} int notification_bg_low_normal
+ {static} int notification_bg_low_pressed
+ {static} int notification_bg_normal
+ {static} int notification_bg_normal_pressed
+ {static} int notification_icon_background
+ {static} int notification_template_icon_bg
+ {static} int notification_template_icon_low_bg
+ {static} int notification_tile_bg
+ {static} int notify_panel_notification_icon_bg
- <<Create>> drawable()
}
class android.support.compat.R.id {
+ {static} int action_container
+ {static} int action_divider
+ {static} int action_image
+ {static} int action_text
+ {static} int actions
+ {static} int async
+ {static} int blocking
+ {static} int chronometer
+ {static} int forever
+ {static} int icon
+ {static} int icon_group
+ {static} int info
+ {static} int italic
+ {static} int line1
+ {static} int line3
+ {static} int normal
+ {static} int notification_background
+ {static} int notification_main_column
+ {static} int notification_main_column_container
+ {static} int right_icon
+ {static} int right_side
+ {static} int text
+ {static} int text2
+ {static} int time
+ {static} int title
- <<Create>> id()
}
class android.support.compat.R.integer {
+ {static} int status_bar_notification_info_maxnum
- <<Create>> integer()
}
class android.support.compat.R.layout {
+ {static} int notification_action
+ {static} int notification_action_tombstone
+ {static} int notification_template_custom_big
+ {static} int notification_template_icon_group
+ {static} int notification_template_part_chronometer
+ {static} int notification_template_part_time
- <<Create>> layout()
}
class android.support.compat.R.string {
+ {static} int status_bar_notification_info_overflow
- <<Create>> string()
}
class android.support.compat.R.style {
+ {static} int TextAppearance_Compat_Notification
+ {static} int TextAppearance_Compat_Notification_Info
+ {static} int TextAppearance_Compat_Notification_Line2
+ {static} int TextAppearance_Compat_Notification_Time
+ {static} int TextAppearance_Compat_Notification_Title
+ {static} int Widget_Compat_NotificationActionContainer
+ {static} int Widget_Compat_NotificationActionText
- <<Create>> style()
}
class android.support.compat.R.styleable {
+ {static} int[] FontFamily
+ {static} int FontFamily_fontProviderAuthority
+ {static} int FontFamily_fontProviderCerts
+ {static} int FontFamily_fontProviderFetchStrategy
+ {static} int FontFamily_fontProviderFetchTimeout
+ {static} int FontFamily_fontProviderPackage
+ {static} int FontFamily_fontProviderQuery
+ {static} int[] FontFamilyFont
+ {static} int FontFamilyFont_font
+ {static} int FontFamilyFont_fontStyle
+ {static} int FontFamilyFont_fontWeight
- <<Create>> styleable()
}
class org.fourthline.cling.model.message.header.LocationHeader {
+ <<Create>> LocationHeader()
+ <<Create>> LocationHeader(URL)
+ <<Create>> LocationHeader(String)
+ void setString(String)
+ String getString()
}
class org.seamless.xhtml.Head {
+ <<Create>> Head(XPath,Element)
+ XHTMLElement getHeadTitle()
+ Link[] getLinks()
+ Meta[] getMetas()
+ XHTMLElement[] getDocumentStyles()
+ XHTMLElement[] getScripts()
}
class org.fourthline.cling.model.message.header.HostHeader {
~ int port
~ String group
+ <<Create>> HostHeader()
+ <<Create>> HostHeader(int)
+ <<Create>> HostHeader(String,int)
+ void setString(String)
+ String getString()
}
class android.support.coreui.R {
- <<Create>> R()
}
class android.support.coreui.R.attr {
+ {static} int font
+ {static} int fontProviderAuthority
+ {static} int fontProviderCerts
+ {static} int fontProviderFetchStrategy
+ {static} int fontProviderFetchTimeout
+ {static} int fontProviderPackage
+ {static} int fontProviderQuery
+ {static} int fontStyle
+ {static} int fontWeight
- <<Create>> attr()
}
class android.support.coreui.R.bool {
+ {static} int abc_action_bar_embed_tabs
- <<Create>> bool()
}
class android.support.coreui.R.color {
+ {static} int notification_action_color_filter
+ {static} int notification_icon_bg_color
+ {static} int ripple_material_light
+ {static} int secondary_text_default_material_light
- <<Create>> color()
}
class android.support.coreui.R.dimen {
+ {static} int compat_button_inset_horizontal_material
+ {static} int compat_button_inset_vertical_material
+ {static} int compat_button_padding_horizontal_material
+ {static} int compat_button_padding_vertical_material
+ {static} int compat_control_corner_material
+ {static} int notification_action_icon_size
+ {static} int notification_action_text_size
+ {static} int notification_big_circle_margin
+ {static} int notification_content_margin_start
+ {static} int notification_large_icon_height
+ {static} int notification_large_icon_width
+ {static} int notification_main_column_padding_top
+ {static} int notification_media_narrow_margin
+ {static} int notification_right_icon_size
+ {static} int notification_right_side_padding_top
+ {static} int notification_small_icon_background_padding
+ {static} int notification_small_icon_size_as_large
+ {static} int notification_subtext_size
+ {static} int notification_top_pad
+ {static} int notification_top_pad_large_text
- <<Create>> dimen()
}
class android.support.coreui.R.drawable {
+ {static} int notification_action_background
+ {static} int notification_bg
+ {static} int notification_bg_low
+ {static} int notification_bg_low_normal
+ {static} int notification_bg_low_pressed
+ {static} int notification_bg_normal
+ {static} int notification_bg_normal_pressed
+ {static} int notification_icon_background
+ {static} int notification_template_icon_bg
+ {static} int notification_template_icon_low_bg
+ {static} int notification_tile_bg
+ {static} int notify_panel_notification_icon_bg
- <<Create>> drawable()
}
class android.support.coreui.R.id {
+ {static} int action_container
+ {static} int action_divider
+ {static} int action_image
+ {static} int action_text
+ {static} int actions
+ {static} int async
+ {static} int blocking
+ {static} int chronometer
+ {static} int forever
+ {static} int icon
+ {static} int icon_group
+ {static} int info
+ {static} int italic
+ {static} int line1
+ {static} int line3
+ {static} int normal
+ {static} int notification_background
+ {static} int notification_main_column
+ {static} int notification_main_column_container
+ {static} int right_icon
+ {static} int right_side
+ {static} int text
+ {static} int text2
+ {static} int time
+ {static} int title
- <<Create>> id()
}
class android.support.coreui.R.integer {
+ {static} int status_bar_notification_info_maxnum
- <<Create>> integer()
}
class android.support.coreui.R.layout {
+ {static} int notification_action
+ {static} int notification_action_tombstone
+ {static} int notification_template_custom_big
+ {static} int notification_template_icon_group
+ {static} int notification_template_part_chronometer
+ {static} int notification_template_part_time
- <<Create>> layout()
}
class android.support.coreui.R.string {
+ {static} int status_bar_notification_info_overflow
- <<Create>> string()
}
class android.support.coreui.R.style {
+ {static} int TextAppearance_Compat_Notification
+ {static} int TextAppearance_Compat_Notification_Info
+ {static} int TextAppearance_Compat_Notification_Line2
+ {static} int TextAppearance_Compat_Notification_Time
+ {static} int TextAppearance_Compat_Notification_Title
+ {static} int Widget_Compat_NotificationActionContainer
+ {static} int Widget_Compat_NotificationActionText
- <<Create>> style()
}
class android.support.coreui.R.styleable {
+ {static} int[] FontFamily
+ {static} int FontFamily_fontProviderAuthority
+ {static} int FontFamily_fontProviderCerts
+ {static} int FontFamily_fontProviderFetchStrategy
+ {static} int FontFamily_fontProviderFetchTimeout
+ {static} int FontFamily_fontProviderPackage
+ {static} int FontFamily_fontProviderQuery
+ {static} int[] FontFamilyFont
+ {static} int FontFamilyFont_font
+ {static} int FontFamilyFont_fontStyle
+ {static} int FontFamilyFont_fontWeight
- <<Create>> styleable()
}
class de.yaacc.databinding.BrowseItemBinding {
- RelativeLayout rootView
+ ImageView browseItemIcon
+ TextView browseItemName
- <<Create>> BrowseItemBinding(RelativeLayout,ImageView,TextView)
+ RelativeLayout getRoot()
+ {static} BrowseItemBinding inflate(LayoutInflater)
+ {static} BrowseItemBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} BrowseItemBinding bind(View)
}
class org.fourthline.cling.support.model.dlna.message.header.PeerManagerHeader {
+ <<Create>> PeerManagerHeader()
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.support.model.container.StorageFolder {
+ {static} Class CLASS
+ <<Create>> StorageFolder()
+ <<Create>> StorageFolder(Container)
+ <<Create>> StorageFolder(String,Container,String,String,Integer,Long)
+ <<Create>> StorageFolder(String,String,String,String,Integer,Long)
+ Long getStorageUsed()
+ StorageFolder setStorageUsed(Long)
}
class de.yaacc.upnp.server.YaaccUpnpServerControlActivity {
# void onCreate(Bundle)
- void start()
- void stop()
+ boolean onCreateOptionsMenu(Menu)
+ boolean onOptionsItemSelected(MenuItem)
- void exit()
}
abstract class org.fourthline.cling.support.avtransport.callback.Stop {
- {static} Logger log
+ <<Create>> Stop(Service)
+ <<Create>> Stop(UnsignedIntegerFourBytes,Service)
+ void success(ActionInvocation)
}
class org.fourthline.cling.support.model.dlna.DLNAConversionIndicatorAttribute {
+ <<Create>> DLNAConversionIndicatorAttribute()
+ <<Create>> DLNAConversionIndicatorAttribute(DLNAConversionIndicator)
+ void setString(String,String)
+ String getString()
}
abstract class org.fourthline.cling.support.avtransport.callback.Seek {
- {static} Logger log
+ <<Create>> Seek(Service,String)
+ <<Create>> Seek(UnsignedIntegerFourBytes,Service,String)
+ <<Create>> Seek(Service,SeekMode,String)
+ <<Create>> Seek(UnsignedIntegerFourBytes,Service,SeekMode,String)
+ void success(ActionInvocation)
}
class org.seamless.util.MimeType {
+ {static} String WILDCARD
- String type
- String subtype
- Map<String,String> parameters
+ <<Create>> MimeType()
+ <<Create>> MimeType(String,String,Map<String,String>)
+ <<Create>> MimeType(String,String)
+ String getType()
+ boolean isWildcardType()
+ String getSubtype()
+ boolean isWildcardSubtype()
+ Map<String,String> getParameters()
+ boolean isCompatible(MimeType)
+ {static} MimeType valueOf(String)
+ {static} int readParamsIntoMap(Map<String,String>,String,int)
# {static} int getEnd(String,int)
+ boolean equals(Object)
+ int hashCode()
+ String toString()
+ String toStringNoParameters()
}
class org.fourthline.cling.support.messagebox.model.NumberName {
- String number
- String name
+ <<Create>> NumberName(String,String)
+ String getNumber()
+ String getName()
+ void appendMessageElements(MessageElement)
}
class org.seamless.xhtml.Link {
+ <<Create>> Link(XPath,Element)
+ Href getHref()
+ String getRel()
+ String getRev()
}
class org.fourthline.cling.model.types.SoapActionType {
+ {static} String MAGIC_CONTROL_NS
+ {static} String MAGIC_CONTROL_TYPE
+ {static} Pattern PATTERN_MAGIC_CONTROL
+ {static} Pattern PATTERN
- String namespace
- String type
- String actionName
- Integer version
+ <<Create>> SoapActionType(ServiceType,String)
+ <<Create>> SoapActionType(String,String,Integer,String)
+ String getActionName()
+ String getNamespace()
+ String getType()
+ Integer getVersion()
+ {static} SoapActionType valueOf(String)
+ ServiceType getServiceType()
+ String toString()
+ String getTypeString()
+ boolean equals(Object)
+ int hashCode()
}
class org.fourthline.cling.model.meta.DeviceIdentity {
- UDN udn
- Integer maxAgeSeconds
+ <<Create>> DeviceIdentity(UDN,DeviceIdentity)
+ <<Create>> DeviceIdentity(UDN)
+ <<Create>> DeviceIdentity(UDN,Integer)
+ UDN getUdn()
+ Integer getMaxAgeSeconds()
+ boolean equals(Object)
+ int hashCode()
+ String toString()
+ List<ValidationError> validate()
}
abstract class org.fourthline.cling.support.igd.callback.GetStatusInfo {
+ <<Create>> GetStatusInfo(Service)
+ void success(ActionInvocation)
# {abstract}void success(Connection.StatusInfo)
}
class org.fourthline.cling.support.model.PortMapping {
- boolean enabled
- UnsignedIntegerFourBytes leaseDurationSeconds
- String remoteHost
- UnsignedIntegerTwoBytes externalPort
- UnsignedIntegerTwoBytes internalPort
- String internalClient
- Protocol protocol
- String description
+ <<Create>> PortMapping()
+ <<Create>> PortMapping(Map<String,ActionArgumentValue<Service>>)
+ <<Create>> PortMapping(int,String,Protocol)
+ <<Create>> PortMapping(int,String,Protocol,String)
+ <<Create>> PortMapping(String,UnsignedIntegerTwoBytes,Protocol)
+ <<Create>> PortMapping(boolean,UnsignedIntegerFourBytes,String,UnsignedIntegerTwoBytes,UnsignedIntegerTwoBytes,String,Protocol,String)
+ boolean isEnabled()
+ void setEnabled(boolean)
+ UnsignedIntegerFourBytes getLeaseDurationSeconds()
+ void setLeaseDurationSeconds(UnsignedIntegerFourBytes)
+ boolean hasRemoteHost()
+ String getRemoteHost()
+ void setRemoteHost(String)
+ UnsignedIntegerTwoBytes getExternalPort()
+ void setExternalPort(UnsignedIntegerTwoBytes)
+ UnsignedIntegerTwoBytes getInternalPort()
+ void setInternalPort(UnsignedIntegerTwoBytes)
+ String getInternalClient()
+ void setInternalClient(String)
+ Protocol getProtocol()
+ void setProtocol(Protocol)
+ boolean hasDescription()
+ String getDescription()
+ void setDescription(String)
+ String toString()
}
enum org.fourthline.cling.support.model.Protocol {
+  UDP
+  TCP
}
class org.fourthline.cling.model.message.header.ServiceUSNHeader {
+ <<Create>> ServiceUSNHeader()
+ <<Create>> ServiceUSNHeader(UDN,ServiceType)
+ <<Create>> ServiceUSNHeader(NamedServiceType)
+ void setString(String)
+ String getString()
}
abstract class de.yaacc.upnp.callback.avtransport.SyncStop {
- {static} Logger log
+ <<Create>> SyncStop(UnsignedIntegerFourBytes,Service,String,String)
+ void success(ActionInvocation)
}
class org.fourthline.cling.android.NetworkUtils {
- {static} Logger log
+ {static} NetworkInfo getConnectedNetworkInfo(Context)
+ {static} boolean isEthernet(NetworkInfo)
+ {static} boolean isWifi(NetworkInfo)
+ {static} boolean isMobile(NetworkInfo)
+ {static} boolean isNetworkType(NetworkInfo,int)
+ {static} boolean isSSDPAwareNetwork(NetworkInfo)
}
class de.yaacc.musicplayer.BackgroundMusicService {
+ {static} String URIS
- MediaPlayer player
- IBinder binder
- BackgroundMusicBroadcastReceiver backgroundMusicBroadcastReceiver
- int duration
+ <<Create>> BackgroundMusicService()
+ void onCreate()
+ void onDestroy()
+ IBinder onBind(Intent)
+ int onStartCommand(Intent,int,int)
- void initialize(Intent)
+ void stop()
+ void play()
+ void pause()
+ void seekTo(long)
+ void setMusicUri(Uri)
+ int getDuration()
+ int getCurrentPosition()
}
class de.yaacc.musicplayer.BackgroundMusicService.BackgroundMusicServiceBinder {
+ BackgroundMusicService getService()
}
class de.yaacc.browser.BrowseItemLoadTask {
- BrowseItemAdapter itemAdapter
- Long chunkSize
+ <<Create>> BrowseItemLoadTask(BrowseItemAdapter,Long)
# ContentDirectoryBrowseResult doInBackground(Long)
# void onPostExecute(ContentDirectoryBrowseResult)
}
class de.yaacc.upnp.server.avtransport.AvTransportMediaRendererStopped {
- UpnpClient upnpClient
+ <<Create>> AvTransportMediaRendererStopped(AvTransport,UpnpClient)
+ void onEntry()
+ Class<? extends AbstractState<?>> setTransportURI(URI,String)
+ Class<? extends AbstractState<?>> stop()
+ Class<? extends AbstractState<?>> play(String)
+ Class<? extends AbstractState<?>> next()
+ Class<? extends AbstractState<?>> previous()
+ Class<? extends AbstractState<?>> seek(SeekMode,String)
+ Class<? extends AbstractState<?>> syncPlay(String,String,String,String,String)
+ Class<? extends AbstractState<?>> syncPause(String,String)
+ Class<? extends AbstractState<?>> syncStop(String,String)
+ TransportAction[] getPossibleTransportActions()
}
class de.yaacc.upnp.server.contentdirectory.MusicAlbumFolderBrowser {
+ <<Create>> MusicAlbumFolderBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
- String getName(YaaccContentDirectory,String)
- Integer getSize(YaaccContentDirectory,String)
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
abstract class org.fourthline.cling.controlpoint.SubscriptionCallback {
# {static} Logger log
# Service service
# Integer requestedDurationSeconds
- ControlPoint controlPoint
- GENASubscription subscription
# <<Create>> SubscriptionCallback(Service)
# <<Create>> SubscriptionCallback(Service,int)
+ Service getService()
+ ControlPoint getControlPoint()
+ void setControlPoint(ControlPoint)
+ GENASubscription getSubscription()
+ void setSubscription(GENASubscription)
+ void run()
- void establishLocalSubscription(LocalService)
- void establishRemoteSubscription(RemoteService)
+ void end()
- void endLocalSubscription(LocalGENASubscription)
- void endRemoteSubscription(RemoteGENASubscription)
# void failed(GENASubscription,UpnpResponse,Exception)
# {abstract}void failed(GENASubscription,UpnpResponse,Exception,String)
# {abstract}void established(GENASubscription)
# {abstract}void ended(GENASubscription,CancelReason,UpnpResponse)
# {abstract}void eventReceived(GENASubscription)
# {abstract}void eventsMissed(GENASubscription,int)
+ {static} String createDefaultFailureMessage(UpnpResponse,Exception)
# void invalidMessage(RemoteGENASubscription,UnsupportedDataException)
+ String toString()
}
class de.yaacc.browser.ServerListClickListener {
- UpnpClient upnpClient
- Fragment parent
+ <<Create>> ServerListClickListener(UpnpClient,Fragment)
+ void onItemClick(AdapterView<?>,View,int,long)
}
class de.yaacc.upnp.server.avtransport.AvTransportMediaRendererPlaying {
- UpnpClient upnpClient
- boolean updateTime
- List<Player> players
+ <<Create>> AvTransportMediaRendererPlaying(AvTransport,UpnpClient)
+ void onEntry()
+ Class<? extends AbstractState<?>> setTransportURI(URI,String)
+ Class<? extends AbstractState<?>> stop()
+ Class<? extends AbstractState<?>> play(String)
+ Class<? extends AbstractState<?>> pause()
+ Class<? extends AbstractState<?>> next()
+ Class<? extends AbstractState<?>> previous()
+ Class<? extends AbstractState<?>> seek(SeekMode,String)
+ Class<? extends AbstractState<?>> syncPlay(String,String,String,String,String)
+ Class<? extends AbstractState<?>> syncPause(String,String)
+ Class<? extends AbstractState<?>> syncStop(String,String)
+ TransportAction[] getPossibleTransportActions()
- void setTrackInfo()
- void doSetTrackInfo()
- void updateTime()
}
class de.yaacc.util.ActivitySwipeDetector {
~ {static} String logTag
- SwipeReceiver swipeReceiver
~ {static} int MIN_DISTANCE
- float downX
+ <<Create>> ActivitySwipeDetector(SwipeReceiver)
- void onRightToLeftSwipe()
- void onLeftToRightSwipe()
- void onTopToBottomSwipe()
- void onBottomToTopSwipe()
- void endOnTouchProcessing(View,MotionEvent)
- void beginOnTouchProcessing(View,MotionEvent)
+ boolean onTouch(View,MotionEvent)
}
class de.yaacc.databinding.ActivityYaaccLogBinding {
- RelativeLayout rootView
+ TextView yaaccLogContent
+ ScrollView yaaccLogScrollView
- <<Create>> ActivityYaaccLogBinding(RelativeLayout,TextView,ScrollView)
+ RelativeLayout getRoot()
+ {static} ActivityYaaccLogBinding inflate(LayoutInflater)
+ {static} ActivityYaaccLogBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityYaaccLogBinding bind(View)
}
class org.fourthline.cling.support.model.item.AudioItem {
+ {static} Class CLASS
+ <<Create>> AudioItem()
+ <<Create>> AudioItem(Item)
+ <<Create>> AudioItem(String,Container,String,String,Res)
+ <<Create>> AudioItem(String,String,String,String,Res)
+ String getFirstGenre()
+ String[] getGenres()
+ AudioItem setGenres(String[])
+ String getDescription()
+ AudioItem setDescription(String)
+ String getLongDescription()
+ AudioItem setLongDescription(String)
+ Person getFirstPublisher()
+ Person[] getPublishers()
+ AudioItem setPublishers(Person[])
+ URI getFirstRelation()
+ URI[] getRelations()
+ AudioItem setRelations(URI[])
+ String getLanguage()
+ AudioItem setLanguage(String)
+ String getFirstRights()
+ String[] getRights()
+ AudioItem setRights(String[])
}
class de.yaacc.player.AVTransportPlayer {
- String deviceId
- int id
- String contentType
- PositionInfo currentPositionInfo
- ActionState positionActionState
- URI albumArtUri
+ <<Create>> AVTransportPlayer(UpnpClient,Device,String,String)
+ <<Create>> AVTransportPlayer(UpnpClient)
# Device<?,?,?> getDevice()
+ String getDeviceId()
+ String getContentType()
# void stopItem(PlayableItem)
# Object loadItem(PlayableItem)
# void startItem(PlayableItem,Object)
- void waitForActionComplete(ActionState)
- void waitForActionComplete(ActionState,Runnable)
+ PendingIntent getNotificationIntent()
# int getNotificationId()
+ void pause()
+ URI getAlbumArt()
+ boolean getMute()
+ void setMute(boolean)
+ void setVolume(int)
+ int getVolume()
# void getPositionInfo()
+ int getIconResourceId()
+ void seekTo(long)
+ String getDuration()
+ String getElapsedTime()
+ void startTimer(long)
+ void onDestroy()
- void doExit()
+ void exit()
- String getWakeLockTag()
}
class de.yaacc.player.AVTransportPlayer.InternalSetAVTransportURI {
~ ActionState actionState
+ boolean hasFailures
- <<Create>> InternalSetAVTransportURI(Service,String,ActionState,String)
+ void failure(ActionInvocation,UpnpResponse,String)
+ void success(ActionInvocation)
}
class de.yaacc.player.AVTransportPlayer.ActionState {
+ boolean actionFinished
+ boolean watchdogFlag
+ Object result
}
class org.fourthline.cling.support.model.dlna.message.header.ScmsFlagHeader {
~ {static} Pattern pattern
+ <<Create>> ScmsFlagHeader()
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.model.types.BytesRange {
+ {static} String PREFIX
- Long firstByte
- Long lastByte
- Long byteLength
+ <<Create>> BytesRange(Long,Long)
+ <<Create>> BytesRange(Long,Long,Long)
+ Long getFirstByte()
+ Long getLastByte()
+ Long getByteLength()
+ String getString()
+ String getString(boolean)
+ String getString(boolean,String)
+ {static} BytesRange valueOf(String)
+ {static} BytesRange valueOf(String,String)
}
class de.yaacc.databinding.FragmentReceiverListBinding {
- RelativeLayout rootView
+ ListView receiverList
- <<Create>> FragmentReceiverListBinding(RelativeLayout,ListView)
+ RelativeLayout getRoot()
+ {static} FragmentReceiverListBinding inflate(LayoutInflater)
+ {static} FragmentReceiverListBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} FragmentReceiverListBinding bind(View)
}
class example.mediarenderer.MediaRendererSampleData {
+ {static} LocalService<AVTransportService> createAVTransportService()
+ {static} LocalService<AudioRenderingControlService> createRenderingControlService()
+ {static} LocalDevice createDevice()
}
class example.mediarenderer.MediaRendererSampleData.AudioRenderingControlService {
+ boolean getMute(UnsignedIntegerFourBytes,String)
+ void setMute(UnsignedIntegerFourBytes,String,boolean)
+ UnsignedIntegerTwoBytes getVolume(UnsignedIntegerFourBytes,String)
+ void setVolume(UnsignedIntegerFourBytes,String,UnsignedIntegerTwoBytes)
# Channel[] getCurrentChannels()
+ UnsignedIntegerFourBytes[] getCurrentInstanceIds()
}
class de.yaacc.player.PlayableItem {
- String mimeType
- String title
- Uri uri
- long duration
- Item item
+ <<Create>> PlayableItem(Item,int)
+ <<Create>> PlayableItem()
+ String getMimeType()
+ void setMimeType(String)
+ String getTitle()
+ void setTitle(String)
+ Uri getUri()
+ void setUri(Uri)
+ long getDuration()
+ void setDuration(long)
+ Item getItem()
}
class org.fourthline.cling.UpnpServiceImpl {
- {static} Logger log
# UpnpServiceConfiguration configuration
# ControlPoint controlPoint
# ProtocolFactory protocolFactory
# Registry registry
# Router router
+ <<Create>> UpnpServiceImpl()
+ <<Create>> UpnpServiceImpl(RegistryListener)
+ <<Create>> UpnpServiceImpl(UpnpServiceConfiguration,RegistryListener)
# ProtocolFactory createProtocolFactory()
# Registry createRegistry(ProtocolFactory)
# Router createRouter(ProtocolFactory,Registry)
# ControlPoint createControlPoint(ProtocolFactory,Registry)
+ UpnpServiceConfiguration getConfiguration()
+ ControlPoint getControlPoint()
+ ProtocolFactory getProtocolFactory()
+ Registry getRegistry()
+ Router getRouter()
+ void shutdown()
# void shutdown(boolean)
# void shutdownRegistry()
# void shutdownRouter()
# void shutdownConfiguration()
}
class org.fourthline.cling.test.resources.UDA10ServiceDescriptorParsingTest {
+ void readUDA10DescriptorDOM()
+ void readUDA10DescriptorSAX()
+ void writeUDA10Descriptor()
}
class de.yaacc.upnp.server.ServerAutostart {
+ void onReceive(Context,Intent)
}
class org.fourthline.cling.protocol.async.ReceivingSearchResponse {
- {static} Logger log
+ <<Create>> ReceivingSearchResponse(UpnpService,IncomingDatagramMessage<UpnpResponse>)
# void execute()
}
class org.fourthline.cling.support.model.container.Container {
# Integer childCount
# boolean searchable
# List<Class> createClasses
# List<Class> searchClasses
# List<Container> containers
# List<Item> items
+ <<Create>> Container()
+ <<Create>> Container(Container)
+ <<Create>> Container(String,String,String,String,boolean,WriteStatus,Class,List<Res>,List<Property>,List<DescMeta>)
+ <<Create>> Container(String,String,String,String,boolean,WriteStatus,Class,List<Res>,List<Property>,List<DescMeta>,Integer,boolean,List<Class>,List<Class>,List<Item>)
+ <<Create>> Container(String,Container,String,String,DIDLObject.Class,Integer)
+ <<Create>> Container(String,String,String,String,DIDLObject.Class,Integer)
+ <<Create>> Container(String,Container,String,String,DIDLObject.Class,Integer,boolean,List<Class>,List<Class>,List<Item>)
+ <<Create>> Container(String,String,String,String,DIDLObject.Class,Integer,boolean,List<Class>,List<Class>,List<Item>)
+ Integer getChildCount()
+ void setChildCount(Integer)
+ boolean isSearchable()
+ void setSearchable(boolean)
+ List<Class> getCreateClasses()
+ void setCreateClasses(List<Class>)
+ List<Class> getSearchClasses()
+ void setSearchClasses(List<Class>)
+ Container getFirstContainer()
+ Container addContainer(Container)
+ List<Container> getContainers()
+ void setContainers(List<Container>)
+ List<Item> getItems()
+ void setItems(List<Item>)
+ Container addItem(Item)
}
class org.fourthline.cling.support.model.dlna.types.CodedDataBuffer {
- Long size
- TransferMechanism tranfer
+ <<Create>> CodedDataBuffer(Long,TransferMechanism)
+ Long getSize()
+ TransferMechanism getTranfer()
}
enum org.fourthline.cling.support.model.dlna.types.TransferMechanism {
+  IMMEDIATELY
+  TIMESTAMP
+  OTHER
}
class org.fourthline.cling.model.VariableValue {
- {static} Logger log
- Datatype datatype
- Object value
+ <<Create>> VariableValue(Datatype,Object)
+ Datatype getDatatype()
+ Object getValue()
# void logInvalidXML(String)
+ String toString()
}
class org.fourthline.cling.model.types.NamedDeviceType {
- UDN udn
- DeviceType deviceType
+ <<Create>> NamedDeviceType(UDN,DeviceType)
+ UDN getUdn()
+ DeviceType getDeviceType()
+ {static} NamedDeviceType valueOf(String)
+ String toString()
+ boolean equals(Object)
+ int hashCode()
}
class org.fourthline.cling.model.meta.ManufacturerDetails {
- String manufacturer
- URI manufacturerURI
~ <<Create>> ManufacturerDetails()
+ <<Create>> ManufacturerDetails(String)
+ <<Create>> ManufacturerDetails(URI)
+ <<Create>> ManufacturerDetails(String,URI)
+ <<Create>> ManufacturerDetails(String,String)
+ String getManufacturer()
+ URI getManufacturerURI()
}
class de.yaacc.player.AVTransportController {
+ {static} String DEVICE_ID
+ <<Create>> AVTransportController(UpnpClient,Device)
+ void onServiceConnected(ComponentName,IBinder)
+ void onServiceDisconnected(ComponentName)
+ void exit()
+ void stop()
+ void next()
+ void previous()
+ void play()
}
class example.registry.RegistryListenerTest {
+ void quickstartListener()
+ void failureQuickstartListener()
+ void regularListener()
}
interface example.registry.RegistryListenerTest.RegistryListener {
+ void remoteDeviceDiscoveryStarted(Registry,RemoteDevice)
+ void remoteDeviceDiscoveryFailed(Registry,RemoteDevice,Exception)
+ void remoteDeviceAdded(Registry,RemoteDevice)
+ void remoteDeviceUpdated(Registry,RemoteDevice)
+ void remoteDeviceRemoved(Registry,RemoteDevice)
+ void localDeviceAdded(Registry,LocalDevice)
+ void localDeviceRemoved(Registry,LocalDevice)
}
class example.registry.RegistryListenerTest.QuickstartRegistryListener {
+ boolean valid
+ void remoteDeviceDiscoveryStarted(Registry,RemoteDevice)
+ void remoteDeviceDiscoveryFailed(Registry,RemoteDevice,Exception)
}
class example.registry.RegistryListenerTest.FailureQuickstartRegistryListener {
+ boolean valid
+ void remoteDeviceDiscoveryFailed(Registry,RemoteDevice,Exception)
}
class example.registry.RegistryListenerTest.MyListener {
+ boolean added
+ boolean removed
+ void remoteDeviceAdded(Registry,RemoteDevice)
+ void remoteDeviceRemoved(Registry,RemoteDevice)
}
class org.seamless.util.Reflections {
+ {static} Object invoke(Method,Object,Object)
+ {static} Object get(Field,Object)
+ {static} Method getMethod(Class,String)
+ {static} void set(Field,Object,Object)
+ {static} String getMethodPropertyName(String)
+ {static} Method getGetterMethod(Class,String)
+ {static} List<Method> getMethods(Class,Class)
+ {static} Field getField(Class,String)
+ {static} List<Field> getFields(Class,Class)
+ {static} List<Class<?>> getTypeArguments(Class<T>,Class<? extends T>)
+ {static} Class<?> getClass(Type)
+ {static} Object getAndWrap(Field,Object)
+ {static} void setAndWrap(Field,Object,Object)
+ {static} Object invokeAndWrap(Method,Object,Object)
+ {static} String toString(Member)
+ {static} Class classForName(String)
+ {static} boolean isClassAvailable(String)
+ {static} Class getCollectionElementType(Type)
+ {static} Class getMapKeyType(Type)
+ {static} Method getSetterMethod(Class,String)
+ {static} Method getMethod(Annotation,String)
+ {static} boolean isInstanceOf(Class,String)
- {static} boolean instanceOf(Class,String)
+ {static} String toClassNameString(String,Object)
+ {static} String unqualify(String)
+ {static} String unqualify(String,char)
+ {static} String decapitalize(String)
}
class org.fourthline.cling.protocol.ProtocolFactoryImpl {
- {static} Logger log
# UpnpService upnpService
# <<Create>> ProtocolFactoryImpl()
+ <<Create>> ProtocolFactoryImpl(UpnpService)
+ UpnpService getUpnpService()
+ ReceivingAsync createReceivingAsync(IncomingDatagramMessage)
# ReceivingAsync createReceivingNotification(IncomingDatagramMessage<UpnpRequest>)
# ReceivingAsync createReceivingSearch(IncomingDatagramMessage<UpnpRequest>)
# ReceivingAsync createReceivingSearchResponse(IncomingDatagramMessage<UpnpResponse>)
# boolean isByeBye(IncomingDatagramMessage)
# boolean isSupportedServiceAdvertisement(IncomingDatagramMessage)
+ ReceivingSync createReceivingSync(StreamRequestMessage)
+ SendingNotificationAlive createSendingNotificationAlive(LocalDevice)
+ SendingNotificationByebye createSendingNotificationByebye(LocalDevice)
+ SendingSearch createSendingSearch(UpnpHeader,int)
+ SendingAction createSendingAction(ActionInvocation,URL)
+ SendingSubscribe createSendingSubscribe(RemoteGENASubscription)
+ SendingRenewal createSendingRenewal(RemoteGENASubscription)
+ SendingUnsubscribe createSendingUnsubscribe(RemoteGENASubscription)
+ SendingEvent createSendingEvent(LocalGENASubscription)
# ReceivingRetrieval createReceivingRetrieval(StreamRequestMessage)
# ReceivingAction createReceivingAction(StreamRequestMessage)
# ReceivingSubscribe createReceivingSubscribe(StreamRequestMessage)
# ReceivingUnsubscribe createReceivingUnsubscribe(StreamRequestMessage)
# ReceivingEvent createReceivingEvent(StreamRequestMessage)
}
class org.fourthline.cling.model.message.header.SubscriptionIdHeader {
+ {static} String PREFIX
+ <<Create>> SubscriptionIdHeader()
+ <<Create>> SubscriptionIdHeader(String)
+ void setString(String)
+ String getString()
}
enum org.fourthline.cling.support.connectionmanager.ConnectionManagerErrorCode {
+  INCOMPATIBLE_PROTOCOL_INFO
+  INCOMPATIBLE_DIRECTIONS
+  INSUFFICIENT_NETWORK_RESOURCES
+  LOCAL_RESTRICTIONS
+  ACCESS_DENIED
+  INVALID_CONNECTION_REFERENCE
+  NOT_IN_NETWORK
- int code
- String description
~ <<Create>> ConnectionManagerErrorCode(int,String)
+ int getCode()
+ String getDescription()
+ {static} ConnectionManagerErrorCode getByCode(int)
}
abstract class org.fourthline.cling.test.data.SampleDevice {
+ DeviceIdentity identity
+ Service service
+ Device embeddedDevice
# <<Create>> SampleDevice(DeviceIdentity,Service,Device)
+ DeviceIdentity getIdentity()
+ Service getService()
+ Device getEmbeddedDevice()
+ {abstract}DeviceType getDeviceType()
+ {abstract}DeviceDetails getDeviceDetails()
+ {abstract}DeviceDetailsProvider getDeviceDetailsProvider()
+ {abstract}Icon[] getIcons()
+ D newInstance(Constructor<D>)
+ D newInstance(Constructor<D>,boolean)
}
abstract class org.fourthline.cling.model.message.header.UpnpHeader {
- {static} Logger log
- T value
+ void setValue(T)
+ T getValue()
+ {abstract}void setString(String)
+ {abstract}String getString()
+ {static} UpnpHeader newInstance(UpnpHeader.Type,String)
+ String toString()
}
enum org.fourthline.cling.model.message.header.Type {
+  USN
+  NT
+  NTS
+  HOST
+  SERVER
+  LOCATION
+  MAX_AGE
+  USER_AGENT
+  CONTENT_TYPE
+  MAN
+  MX
+  ST
+  EXT
+  SOAPACTION
+  TIMEOUT
+  CALLBACK
+  SID
+  SEQ
+  RANGE
+  CONTENT_RANGE
+  PRAGMA
+  EXT_IFACE_MAC
+  EXT_AV_CLIENT_INFO
- {static} Map<String,Type> byName
- String httpName
- Class<? extends UpnpHeader>[] headerTypes
- <<Create>> Type(String,Class<? extends UpnpHeader>)
+ String getHttpName()
+ Class<? extends UpnpHeader>[] getHeaderTypes()
+ boolean isValidHeaderType(Class<? extends UpnpHeader>)
+ {static} Type getByHttpName(String)
}
class org.fourthline.cling.support.model.VolumeDBRange {
- Integer minValue
- Integer maxValue
+ <<Create>> VolumeDBRange(Integer,Integer)
+ Integer getMinValue()
+ Integer getMaxValue()
}
class org.fourthline.cling.test.data.SampleServiceOneUndescribed {
+ Action[] getActions()
+ StateVariable[] getStateVariables()
}
class org.fourthline.cling.model.ValidationException {
+ List<ValidationError> errors
+ <<Create>> ValidationException(String)
+ <<Create>> ValidationException(String,Throwable)
+ <<Create>> ValidationException(String,List<ValidationError>)
+ List<ValidationError> getErrors()
}
class org.fourthline.cling.model.types.DeviceType {
- {static} Logger log
+ {static} String UNKNOWN
+ {static} Pattern PATTERN
- String namespace
- String type
- int version
+ <<Create>> DeviceType(String,String)
+ <<Create>> DeviceType(String,String,int)
+ String getNamespace()
+ String getType()
+ int getVersion()
+ {static} DeviceType valueOf(String)
+ boolean implementsVersion(DeviceType)
+ String getDisplayString()
+ String toString()
+ boolean equals(Object)
+ int hashCode()
}
class org.fourthline.cling.model.types.UnsignedIntegerTwoBytesDatatype {
+ UnsignedIntegerTwoBytes valueOf(String)
}
class org.fourthline.cling.support.model.dlna.InvalidDLNAProtocolAttributeException {
+ <<Create>> InvalidDLNAProtocolAttributeException(String)
}
class org.fourthline.cling.binding.staging.MutableService {
+ ServiceType serviceType
+ ServiceId serviceId
+ URI descriptorURI
+ URI controlURI
+ URI eventSubscriptionURI
+ List<MutableAction> actions
+ List<MutableStateVariable> stateVariables
+ Service build(Device)
+ Action[] createActions()
+ StateVariable[] createStateVariables()
}
class org.fourthline.cling.model.message.header.DeviceTypeHeader {
+ <<Create>> DeviceTypeHeader()
+ <<Create>> DeviceTypeHeader(URI)
+ <<Create>> DeviceTypeHeader(DeviceType)
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.model.message.discovery.OutgoingNotificationRequestServiceType {
+ <<Create>> OutgoingNotificationRequestServiceType(Location,LocalDevice,NotificationSubtype,ServiceType)
}
class org.fourthline.cling.transport.impl.SOAPActionProcessorImpl {
- {static} Logger log
# DocumentBuilderFactory createDocumentBuilderFactory()
+ void writeBody(ActionRequestMessage,ActionInvocation)
+ void writeBody(ActionResponseMessage,ActionInvocation)
+ void readBody(ActionRequestMessage,ActionInvocation)
+ void readBody(ActionResponseMessage,ActionInvocation)
# void writeBodyFailure(Document,Element,ActionResponseMessage,ActionInvocation)
# void writeBodyRequest(Document,Element,ActionRequestMessage,ActionInvocation)
# void writeBodyResponse(Document,Element,ActionResponseMessage,ActionInvocation)
# ActionException readBodyFailure(Document,Element)
# void readBodyRequest(Document,Element,ActionRequestMessage,ActionInvocation)
# void readBodyResponse(Document,Element,ActionResponseMessage,ActionInvocation)
# Element writeBodyElement(Document)
# Element readBodyElement(Document)
# Element writeActionRequestElement(Document,Element,ActionRequestMessage,ActionInvocation)
# Element readActionRequestElement(Element,ActionRequestMessage,ActionInvocation)
# Element writeActionResponseElement(Document,Element,ActionResponseMessage,ActionInvocation)
# Element readActionResponseElement(Element,ActionInvocation)
# void writeActionInputArguments(Document,Element,ActionInvocation)
+ void readActionInputArguments(Element,ActionInvocation)
# void writeActionOutputArguments(Document,Element,ActionInvocation)
# void readActionOutputArguments(Element,ActionInvocation)
# void writeFaultElement(Document,Element,ActionInvocation)
# ActionException readFaultElement(Element)
# String getMessageBody(ActionMessage)
# String toString(Document)
# String getUnprefixedNodeName(Node)
# ActionArgumentValue[] readArgumentValues(NodeList,ActionArgument[])
# List<Node> getMatchingNodes(NodeList,ActionArgument[])
# ActionArgumentValue createValue(ActionArgument,String)
# Node findActionArgumentNode(List<Node>,ActionArgument)
+ void warning(SAXParseException)
+ void error(SAXParseException)
+ void fatalError(SAXParseException)
}
class example.controlpoint.SwitchPowerWithInterruption {
- boolean target
- boolean status
+ void setTarget(boolean,RemoteClientInfo)
+ boolean getTarget()
+ boolean getStatus()
}
class org.fourthline.cling.model.types.UnsignedIntegerFourBytesDatatype {
+ UnsignedIntegerFourBytes valueOf(String)
}
class org.fourthline.cling.binding.staging.MutableDevice {
+ UDN udn
+ MutableUDAVersion udaVersion
+ URL baseURL
+ String deviceType
+ String friendlyName
+ String manufacturer
+ URI manufacturerURI
+ String modelName
+ String modelDescription
+ String modelNumber
+ URI modelURI
+ String serialNumber
+ String upc
+ URI presentationURI
+ List<DLNADoc> dlnaDocs
+ DLNACaps dlnaCaps
+ List<MutableIcon> icons
+ List<MutableService> services
+ List<MutableDevice> embeddedDevices
+ MutableDevice parentDevice
+ Device build(Device)
+ Device build(Device,UDAVersion,URL)
+ UDAVersion createDeviceVersion()
+ DeviceType createDeviceType()
+ DeviceDetails createDeviceDetails(URL)
+ Icon[] createIcons()
+ Service[] createServices(Device)
}
class example.binarylight.BinaryLightClient {
+ {static} void main(String[])
+ void run()
~ RegistryListener createRegistryListener(UpnpService)
~ void executeAction(UpnpService,Service)
}
class example.binarylight.BinaryLightClient.SetTargetActionInvocation {
~ <<Create>> SetTargetActionInvocation(Service)
}
interface org.fourthline.cling.model.message.control.ActionResponseMessage {
}
class org.fourthline.cling.model.state.GetterStateVariableAccessor {
- Method getter
+ <<Create>> GetterStateVariableAccessor(Method)
+ Method getGetter()
+ Class<?> getReturnType()
+ Object read(Object)
+ String toString()
}
class org.fourthline.cling.support.model.AVTransport {
# UnsignedIntegerFourBytes instanceID
# LastChange lastChange
# MediaInfo mediaInfo
# TransportInfo transportInfo
# PositionInfo positionInfo
# DeviceCapabilities deviceCapabilities
# TransportSettings transportSettings
+ <<Create>> AVTransport(UnsignedIntegerFourBytes,LastChange,StorageMedium)
+ <<Create>> AVTransport(UnsignedIntegerFourBytes,LastChange,StorageMedium[])
+ UnsignedIntegerFourBytes getInstanceId()
+ LastChange getLastChange()
+ MediaInfo getMediaInfo()
+ void setMediaInfo(MediaInfo)
+ TransportInfo getTransportInfo()
+ void setTransportInfo(TransportInfo)
+ PositionInfo getPositionInfo()
+ void setPositionInfo(PositionInfo)
+ DeviceCapabilities getDeviceCapabilities()
+ void setDeviceCapabilities(DeviceCapabilities)
+ TransportSettings getTransportSettings()
+ void setTransportSettings(TransportSettings)
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable {
+ {static} Set<Class<? extends EventedValue>> ALL
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.TransportState {
+ <<Create>> TransportState(org.fourthline.cling.support.model.TransportState)
+ <<Create>> TransportState(Map.Entry<String,String>[])
# org.fourthline.cling.support.model.TransportState enumValueOf(String)
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.TransportStatus {
+ <<Create>> TransportStatus(org.fourthline.cling.support.model.TransportStatus)
+ <<Create>> TransportStatus(Map.Entry<String,String>[])
# org.fourthline.cling.support.model.TransportStatus enumValueOf(String)
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.RecordStorageMedium {
+ <<Create>> RecordStorageMedium(StorageMedium)
+ <<Create>> RecordStorageMedium(Map.Entry<String,String>[])
# StorageMedium enumValueOf(String)
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.PossibleRecordStorageMedia {
+ <<Create>> PossibleRecordStorageMedia(StorageMedium[])
+ <<Create>> PossibleRecordStorageMedia(Map.Entry<String,String>[])
# StorageMedium[] enumValueOf(String[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.PossiblePlaybackStorageMedia {
+ <<Create>> PossiblePlaybackStorageMedia(StorageMedium[])
+ <<Create>> PossiblePlaybackStorageMedia(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentPlayMode {
+ <<Create>> CurrentPlayMode(PlayMode)
+ <<Create>> CurrentPlayMode(Map.Entry<String,String>[])
# PlayMode enumValueOf(String)
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.TransportPlaySpeed {
~ {static} Pattern pattern
+ <<Create>> TransportPlaySpeed(String)
+ <<Create>> TransportPlaySpeed(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.RecordMediumWriteStatus {
+ <<Create>> RecordMediumWriteStatus(org.fourthline.cling.support.model.RecordMediumWriteStatus)
+ <<Create>> RecordMediumWriteStatus(Map.Entry<String,String>[])
# org.fourthline.cling.support.model.RecordMediumWriteStatus enumValueOf(String)
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentRecordQualityMode {
+ <<Create>> CurrentRecordQualityMode(RecordQualityMode)
+ <<Create>> CurrentRecordQualityMode(Map.Entry<String,String>[])
# RecordQualityMode enumValueOf(String)
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.PossibleRecordQualityModes {
+ <<Create>> PossibleRecordQualityModes(RecordQualityMode[])
+ <<Create>> PossibleRecordQualityModes(Map.Entry<String,String>[])
# RecordQualityMode[] enumValueOf(String[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.NumberOfTracks {
+ <<Create>> NumberOfTracks(UnsignedIntegerFourBytes)
+ <<Create>> NumberOfTracks(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTrack {
+ <<Create>> CurrentTrack(UnsignedIntegerFourBytes)
+ <<Create>> CurrentTrack(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTrackDuration {
+ <<Create>> CurrentTrackDuration(String)
+ <<Create>> CurrentTrackDuration(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentMediaDuration {
+ <<Create>> CurrentMediaDuration(String)
+ <<Create>> CurrentMediaDuration(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTrackMetaData {
+ <<Create>> CurrentTrackMetaData(String)
+ <<Create>> CurrentTrackMetaData(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTrackURI {
+ <<Create>> CurrentTrackURI(URI)
+ <<Create>> CurrentTrackURI(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.AVTransportURI {
+ <<Create>> AVTransportURI(URI)
+ <<Create>> AVTransportURI(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.NextAVTransportURI {
+ <<Create>> NextAVTransportURI(URI)
+ <<Create>> NextAVTransportURI(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.AVTransportURIMetaData {
+ <<Create>> AVTransportURIMetaData(String)
+ <<Create>> AVTransportURIMetaData(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.NextAVTransportURIMetaData {
+ <<Create>> NextAVTransportURIMetaData(String)
+ <<Create>> NextAVTransportURIMetaData(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTransportActions {
+ <<Create>> CurrentTransportActions(TransportAction[])
+ <<Create>> CurrentTransportActions(Map.Entry<String,String>[])
# TransportAction[] enumValueOf(String[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.RelativeTimePosition {
+ <<Create>> RelativeTimePosition(String)
+ <<Create>> RelativeTimePosition(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.AbsoluteTimePosition {
+ <<Create>> AbsoluteTimePosition(String)
+ <<Create>> AbsoluteTimePosition(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.RelativeCounterPosition {
+ <<Create>> RelativeCounterPosition(String)
+ <<Create>> RelativeCounterPosition(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.AbsoluteCounterPosition {
+ <<Create>> AbsoluteCounterPosition(String)
+ <<Create>> AbsoluteCounterPosition(Map.Entry<String,String>[])
}
class org.fourthline.cling.test.data.SampleData {
- {static} Logger log
+ {static} InetAddress getLocalBaseAddress()
+ {static} URL getLocalBaseURL()
+ {static} DeviceIdentity createLocalDeviceIdentity()
+ {static} DeviceIdentity createLocalDeviceIdentity(int)
+ {static} LocalDevice createLocalDevice()
+ {static} LocalDevice createLocalDevice(boolean)
+ {static} Constructor<LocalDevice> getLocalDeviceConstructor()
+ {static} Constructor<LocalDevice> getLocalDeviceWithProviderConstructor()
+ {static} Constructor<LocalService> getLocalServiceConstructor()
+ {static} LocalDevice createLocalDevice(DeviceIdentity)
+ {static} LocalDevice createLocalDevice(DeviceIdentity,boolean)
+ {static} LocalService getFirstService(LocalDevice)
+ {static} RemoteDeviceIdentity createRemoteDeviceIdentity()
+ {static} RemoteDeviceIdentity createRemoteDeviceIdentity(int)
+ {static} RemoteDevice createRemoteDevice()
+ {static} Constructor<RemoteDevice> getRemoteDeviceConstructor()
+ {static} Constructor<RemoteService> getRemoteServiceConstructor()
+ {static} RemoteDevice createRemoteDevice(RemoteDeviceIdentity)
+ {static} RemoteService getFirstService(RemoteDevice)
+ {static} RemoteService createUndescribedRemoteService()
+ {static} LocalService<T> readService(Class<T>)
+ {static} LocalService<T> readService(LocalServiceBinder,Class<T>)
+ {static} LocalService<T> readService(LocalService<T>,Class<T>)
+ {static} void debugMsg(OutgoingDatagramMessage)
}
class org.fourthline.cling.model.message.discovery.IncomingSearchRequest {
+ <<Create>> IncomingSearchRequest(IncomingDatagramMessage<UpnpRequest>)
+ UpnpHeader getSearchTarget()
+ Integer getMX()
+ boolean isMANSSDPDiscover()
}
class org.fourthline.cling.model.message.discovery.IncomingSearchResponse {
+ <<Create>> IncomingSearchResponse(IncomingDatagramMessage<UpnpResponse>)
+ boolean isSearchResponseMessage()
+ UDN getRootDeviceUDN()
+ URL getLocationURL()
+ Integer getMaxAge()
+ byte[] getInterfaceMacHeader()
}
class org.fourthline.cling.transport.impl.RecoveringGENAEventProcessorImpl {
- {static} Logger log
+ void readBody(IncomingEventRequestMessage)
# String fixXMLEncodedLastChange(String)
}
enum org.fourthline.cling.support.model.StorageMedium {
+  UNKNOWN
+  DV
+  MINI_DV
+  VHS
+  W_VHS
+  S_VHS
+  D_VHS
+  VHSC
+  VIDEO8
+  HI8
+  CD_ROM
+  CD_DA
+  CD_R
+  CD_RW
+  VIDEO_CD
+  SACD
+  MD_AUDIO
+  MD_PICTURE
+  DVD_ROM
+  DVD_VIDEO
+  DVD_R
+  DVD_PLUS_RW
+  DVD_MINUS_RW
+  DVD_RAM
+  DVD_AUDIO
+  DAT
+  LD
+  HDD
+  MICRO_MV
+  NETWORK
+  NONE
+  NOT_IMPLEMENTED
+  VENDOR_SPECIFIC
- {static} Map<String,StorageMedium> byProtocolString
- String protocolString
~ <<Create>> StorageMedium()
~ <<Create>> StorageMedium(String)
+ String toString()
+ {static} StorageMedium valueOrExceptionOf(String)
+ {static} StorageMedium valueOrVendorSpecificOf(String)
+ {static} StorageMedium[] valueOfCommaSeparatedList(String)
}
abstract class org.fourthline.cling.support.renderingcontrol.callback.GetVolume {
- {static} Logger log
+ <<Create>> GetVolume(Service)
+ <<Create>> GetVolume(UnsignedIntegerFourBytes,Service)
+ void success(ActionInvocation)
+ {abstract}void received(ActionInvocation,int)
}
class org.seamless.xhtml.Option {
- String key
- String[] values
+ <<Create>> Option(String,String[])
+ {static} Option[] fromString(String)
+ String getKey()
+ String[] getValues()
+ boolean isTrue()
+ boolean isFalse()
+ String getFirstValue()
+ String toString()
+ boolean equals(Object)
+ int hashCode()
}
class de.yaacc.R {
}
class de.yaacc.R.array {
+ {static} int duration_entries
+ {static} int duration_entries_with_never
+ {static} int duration_values
+ {static} int duration_values_with_never
}
class de.yaacc.R.attr {
+ {static} int font
+ {static} int fontProviderAuthority
+ {static} int fontProviderCerts
+ {static} int fontProviderFetchStrategy
+ {static} int fontProviderFetchTimeout
+ {static} int fontProviderPackage
+ {static} int fontProviderQuery
+ {static} int fontStyle
+ {static} int fontWeight
}
class de.yaacc.R.bool {
+ {static} int abc_action_bar_embed_tabs
}
class de.yaacc.R.color {
+ {static} int ic_launcher_background
+ {static} int notification_action_color_filter
+ {static} int notification_icon_bg_color
+ {static} int notification_material_background_media_default_color
+ {static} int primary_text_default_material_dark
+ {static} int ripple_material_light
+ {static} int secondary_text_default_material_dark
+ {static} int secondary_text_default_material_light
}
class de.yaacc.R.dimen {
+ {static} int compat_button_inset_horizontal_material
+ {static} int compat_button_inset_vertical_material
+ {static} int compat_button_padding_horizontal_material
+ {static} int compat_button_padding_vertical_material
+ {static} int compat_control_corner_material
+ {static} int notification_action_icon_size
+ {static} int notification_action_text_size
+ {static} int notification_big_circle_margin
+ {static} int notification_content_margin_start
+ {static} int notification_large_icon_height
+ {static} int notification_large_icon_width
+ {static} int notification_main_column_padding_top
+ {static} int notification_media_narrow_margin
+ {static} int notification_right_icon_size
+ {static} int notification_right_side_padding_top
+ {static} int notification_small_icon_background_padding
+ {static} int notification_small_icon_size_as_large
+ {static} int notification_subtext_size
+ {static} int notification_top_pad
+ {static} int notification_top_pad_large_text
}
class de.yaacc.R.drawable {
+ {static} int button_cancel
+ {static} int cdtrack
+ {static} int device
+ {static} int device_48_48
+ {static} int download
+ {static} int folder
+ {static} int ic_action_search
+ {static} int ic_launcher_background
+ {static} int ic_launcher_foreground
+ {static} int ic_notification_default
+ {static} int image
+ {static} int laptop
+ {static} int laptop_48_48
+ {static} int notification_action_background
+ {static} int notification_bg
+ {static} int notification_bg_low
+ {static} int notification_bg_low_normal
+ {static} int notification_bg_low_pressed
+ {static} int notification_bg_normal
+ {static} int notification_bg_normal_pressed
+ {static} int notification_icon_background
+ {static} int notification_template_icon_bg
+ {static} int notification_template_icon_low_bg
+ {static} int notification_tile_bg
+ {static} int notify_panel_notification_icon_bg
+ {static} int player_end
+ {static} int player_pause
+ {static} int player_play
+ {static} int player_start
+ {static} int player_stop
+ {static} int playlist
+ {static} int refresh
+ {static} int txt
+ {static} int unknown
+ {static} int video
+ {static} int yaacc120_24_bmp
+ {static} int yaacc120_24_png
+ {static} int yaacc120_8_bmp
+ {static} int yaacc120_8_png
+ {static} int yaacc120_jpg
+ {static} int yaacc192_32
+ {static} int yaacc32_24_bmp
+ {static} int yaacc32_24_png
+ {static} int yaacc32_8_bmp
+ {static} int yaacc32_8_png
+ {static} int yaacc32_jpg
+ {static} int yaacc48_24_bmp
+ {static} int yaacc48_24_png
+ {static} int yaacc48_8_bmp
+ {static} int yaacc48_8_png
+ {static} int yaacc48_jpg
}
class de.yaacc.R.id {
+ {static} int Separator
+ {static} int about_descrip
+ {static} int action0
+ {static} int action_container
+ {static} int action_divider
+ {static} int action_image
+ {static} int action_text
+ {static} int actions
+ {static} int async
+ {static} int avtransportPlayerActivityControlExit
+ {static} int avtransportPlayerActivityControlMuteSwitch
+ {static} int avtransportPlayerActivityControlNext
+ {static} int avtransportPlayerActivityControlPause
+ {static} int avtransportPlayerActivityControlPlay
+ {static} int avtransportPlayerActivityControlPrev
+ {static} int avtransportPlayerActivityControlSeekBar
+ {static} int avtransportPlayerActivityControlStop
+ {static} int avtransportPlayerActivityControlVolumeSeekBar
+ {static} int avtransportPlayerActivityControlVolumeTextView
+ {static} int avtransportPlayerActivityControls
+ {static} int avtransportPlayerActivityCurrentItem
+ {static} int avtransportPlayerActivityDuration
+ {static} int avtransportPlayerActivityElapsedTime
+ {static} int avtransportPlayerActivityImageView
+ {static} int avtransportPlayerActivityNextItem
+ {static} int avtransportPlayerActivityNextLabel
+ {static} int avtransportPlayerActivityPosition
+ {static} int avtransportPlayerActivitySeekBarLayout
+ {static} int avtransportPlayerActivitySeparator
+ {static} int avtransportPlayerActivitySeparator2
+ {static} int avtransportPlayerActivitySeparator3
+ {static} int blocking
+ {static} int browseItemCheckbox
+ {static} int browseItemIcon
+ {static} int browseItemName
+ {static} int browserTabContent
+ {static} int browserTabHost
+ {static} int browserTabPlayer
+ {static} int browserTabReceiver
+ {static} int browserTabServer
+ {static} int cancel_action
+ {static} int chronometer
+ {static} int contentList
+ {static} int controlDevices
+ {static} int controlNext
+ {static} int controlPrev
+ {static} int controlReceiverDevices
+ {static} int controlStop
+ {static} int controls
+ {static} int dialogProgressBar
+ {static} int end_padder
+ {static} int forever
+ {static} int icon
+ {static} int icon_group
+ {static} int imageView
+ {static} int info
+ {static} int italic
+ {static} int itemList
+ {static} int layout
+ {static} int line1
+ {static} int line3
+ {static} int media_actions
+ {static} int menu_exit
+ {static} int menu_next
+ {static} int menu_pause
+ {static} int menu_play
+ {static} int menu_previous
+ {static} int menu_settings
+ {static} int menu_stop
+ {static} int multiContentPlayerActivityControlExit
+ {static} int multiContentPlayerActivityControlNext
+ {static} int multiContentPlayerActivityControlPause
+ {static} int multiContentPlayerActivityControlPlay
+ {static} int multiContentPlayerActivityControlPrev
+ {static} int multiContentPlayerActivityControlStop
+ {static} int multiContentPlayerActivityControls
+ {static} int multiContentPlayerActivityImageView
+ {static} int musicActivityControlExit
+ {static} int musicActivityControlNext
+ {static} int musicActivityControlPause
+ {static} int musicActivityControlPlay
+ {static} int musicActivityControlPrev
+ {static} int musicActivityControlStop
+ {static} int musicActivityControls
+ {static} int musicActivityCurrentItem
+ {static} int musicActivityDuration
+ {static} int musicActivityElapsedTime
+ {static} int musicActivityImageView
+ {static} int musicActivityNextItem
+ {static} int musicActivityNextLabel
+ {static} int musicActivityPosition
+ {static} int musicActivitySeekBar
+ {static} int musicActivitySeekBarLayout
+ {static} int musicActivitySeparator
+ {static} int musicActivitySeparator2
+ {static} int musicActivitySeparator3
+ {static} int normal
+ {static} int notification_background
+ {static} int notification_main_column
+ {static} int notification_main_column_container
+ {static} int playerList
+ {static} int providerEnabled
+ {static} int receiverEnabled
+ {static} int receiverList
+ {static} int right_icon
+ {static} int right_side
+ {static} int serverList
+ {static} int startServer
+ {static} int status_bar_latest_event_content
+ {static} int stopServer
+ {static} int text
+ {static} int text2
+ {static} int thirdPartieMusicActivityControls
+ {static} int thirdPratieMusicActivityControlExit
+ {static} int thirdPratieMusicActivityControlNext
+ {static} int thirdPratieMusicActivityControlPause
+ {static} int thirdPratieMusicActivityControlPlay
+ {static} int thirdPratieMusicActivityControlPrev
+ {static} int thirdPratieMusicActivityControlStop
+ {static} int thirdPratieMusicActivityImageView
+ {static} int time
+ {static} int title
+ {static} int yaaccLog_content
+ {static} int yaaccLog_scrollView
+ {static} int yaacc_about
+ {static} int yaacc_log
}
class de.yaacc.R.integer {
+ {static} int cancel_button_image_alpha
+ {static} int status_bar_notification_info_maxnum
}
class de.yaacc.R.layout {
+ {static} int about
+ {static} int activity_avtransport_player
+ {static} int activity_browse
+ {static} int activity_content_list
+ {static} int activity_image_viewer
+ {static} int activity_multi_content_player
+ {static} int activity_music_player
+ {static} int activity_player_list
+ {static} int activity_receiver_list
+ {static} int activity_server_list
+ {static} int activity_tab_browse
+ {static} int activity_third_partie_music_player
+ {static} int activity_yaacc_log
+ {static} int activity_yaacc_upnp_server_control
+ {static} int browse_item
+ {static} int browse_item_checkable
+ {static} int notification_action
+ {static} int notification_action_tombstone
+ {static} int notification_media_action
+ {static} int notification_media_cancel_action
+ {static} int notification_template_big_media
+ {static} int notification_template_big_media_custom
+ {static} int notification_template_big_media_narrow
+ {static} int notification_template_big_media_narrow_custom
+ {static} int notification_template_custom_big
+ {static} int notification_template_icon_group
+ {static} int notification_template_lines_media
+ {static} int notification_template_media
+ {static} int notification_template_media_custom
+ {static} int notification_template_part_chronometer
+ {static} int notification_template_part_time
+ {static} int yaacc_progress_dialog
}
class de.yaacc.R.menu {
+ {static} int activity_avtransport_player
+ {static} int activity_image_viewer
+ {static} int activity_main
+ {static} int activity_multi_content_player
+ {static} int activity_music_player
+ {static} int activity_third_partie_music_player
+ {static} int activity_yaacc_upnp_server_control
}
class de.yaacc.R.mipmap {
+ {static} int ic_launcher
+ {static} int ic_launcher_foreground
+ {static} int ic_launcher_round
}
class de.yaacc.R.string {
+ {static} int activity_remote_player_mute
+ {static} int activity_remote_player_volume
+ {static} int albums
+ {static} int all
+ {static} int all_images
+ {static} int app_descrip
+ {static} int app_name
+ {static} int artists
+ {static} int avtransportPlayerActivityImageView
+ {static} int avtransportPlayerActivityNextLabel
+ {static} int browse_button_devices
+ {static} int browse_button_next
+ {static} int browse_button_prev
+ {static} int browse_button_stop
+ {static} int browse_context_add_to_playplist
+ {static} int browse_context_control_device
+ {static} int browse_context_download
+ {static} int browse_context_play
+ {static} int browse_context_play_all
+ {static} int browse_context_title
+ {static} int browse_main_folder
+ {static} int browse_no_content_found
+ {static} int bucket_names
+ {static} int can_not_start_activity
+ {static} int error_no_activity_found
+ {static} int error_no_receiver_device_found
+ {static} int error_upnp_generic
+ {static} int error_upnp_specific
+ {static} int exit
+ {static} int exitActivity
+ {static} int genres
+ {static} int icon
+ {static} int image_viewer_settings_duration
+ {static} int image_viewer_settings_duration_key
+ {static} int images
+ {static} int logContent
+ {static} int menu_settings
+ {static} int multiContentPlayerActivityImageView
+ {static} int music
+ {static} int musicActivityImageView
+ {static} int musicActivityNextLabel
+ {static} int next
+ {static} int no_valid_uri_data_found_to_display
+ {static} int not_yet_implemented
+ {static} int open
+ {static} int pause
+ {static} int play
+ {static} int playerCurrentItem
+ {static} int playerNameAvTransport
+ {static} int playerNameImage
+ {static} int playerNameMultiContent
+ {static} int playerNameMusic
+ {static} int playerNextItem
+ {static} int playerPosition
+ {static} int playerTimeDuration
+ {static} int playerTimeElapsed
+ {static} int playerTimeSeparator
+ {static} int playerTiming
+ {static} int previous
+ {static} int settings_audio_app
+ {static} int settings_audio_app_off
+ {static} int settings_audio_app_on
+ {static} int settings_audio_chkbx
+ {static} int settings_browse_audio_off
+ {static} int settings_browse_audio_on
+ {static} int settings_browse_image_off
+ {static} int settings_browse_image_on
+ {static} int settings_browse_load_threads
+ {static} int settings_browse_load_threads_key
+ {static} int settings_browse_load_threads_summ
+ {static} int settings_browse_thumbnails_coverlookup_chkbx
+ {static} int settings_browse_thumbnails_coverlookup_off
+ {static} int settings_browse_thumbnails_coverlookup_on
+ {static} int settings_browse_thumbnails_off
+ {static} int settings_browse_thumbnails_on
+ {static} int settings_browse_video_off
+ {static} int settings_browse_video_on
+ {static} int settings_category_browsing
+ {static} int settings_category_playing
+ {static} int settings_category_send_rec
+ {static} int settings_category_synchronization
+ {static} int settings_change_provider
+ {static} int settings_change_receiver
+ {static} int settings_default_duration
+ {static} int settings_default_duration_key
+ {static} int settings_default_playback_delay
+ {static} int settings_default_playback_delay_key
+ {static} int settings_device_playback_offset
+ {static} int settings_device_playback_offset_key
+ {static} int settings_device_playback_offset_summ
+ {static} int settings_image_app
+ {static} int settings_image_app_off
+ {static} int settings_image_app_on
+ {static} int settings_image_chkbx
+ {static} int settings_local_server_autostart_activated
+ {static} int settings_local_server_autostart_chkbx
+ {static} int settings_local_server_autostart_deactivated
+ {static} int settings_local_server_chkbx
+ {static} int settings_local_server_mediastore
+ {static} int settings_local_server_name
+ {static} int settings_local_server_name_key
+ {static} int settings_local_server_provider_chkbx
+ {static} int settings_local_server_provider_off
+ {static} int settings_local_server_provider_on
+ {static} int settings_local_server_receiver_chkbx
+ {static} int settings_local_server_receiver_off
+ {static} int settings_local_server_receiver_on
+ {static} int settings_local_server_serve_images_chkbx
+ {static} int settings_local_server_serve_images_off
+ {static} int settings_local_server_serve_images_on
+ {static} int settings_local_server_serve_music_chkbx
+ {static} int settings_local_server_serve_music_off
+ {static} int settings_local_server_serve_music_on
+ {static} int settings_local_server_serve_video_chkbx
+ {static} int settings_local_server_serve_video_off
+ {static} int settings_local_server_serve_video_on
+ {static} int settings_local_server_started
+ {static} int settings_local_server_stopped
+ {static} int settings_local_server_testcontent
+ {static} int settings_local_server_testcontent_chkbx
+ {static} int settings_local_server_title
+ {static} int settings_music_player_shuffle_chkbx
+ {static} int settings_music_player_shuffle_off
+ {static} int settings_music_player_shuffle_on
+ {static} int settings_no_content_found
+ {static} int settings_replay_playlist_chkbx
+ {static} int settings_replay_playlist_off
+ {static} int settings_replay_playlist_on
+ {static} int settings_selected_provider_title
+ {static} int settings_selected_receivers_title
+ {static} int settings_sending_upnp_alive_interval
+ {static} int settings_sending_upnp_alive_interval_key
+ {static} int settings_silence_duration
+ {static} int settings_silence_duration_key
+ {static} int settings_thumbnails_chkbx
+ {static} int settings_video_app
+ {static} int settings_video_app_off
+ {static} int settings_video_app_on
+ {static} int settings_video_chkbx
+ {static} int status_bar_notification_info_overflow
+ {static} int stop
+ {static} int title_activity_avtransport_player
+ {static} int title_activity_content_list
+ {static} int title_activity_generic_browse
+ {static} int title_activity_image_viewer
+ {static} int title_activity_image_viewer_settings
+ {static} int title_activity_main
+ {static} int title_activity_multi_content_player
+ {static} int title_activity_music_player
+ {static} int title_activity_player_list
+ {static} int title_activity_receiver_list
+ {static} int title_activity_server_list
+ {static} int title_activity_settings
+ {static} int title_activity_upnp_browser
+ {static} int title_activity_yaacc_log
+ {static} int title_activity_yaacc_upnp_server_control
+ {static} int videos
+ {static} int yaacc_about
+ {static} int yaacc_menu_settings
+ {static} int yaacc_upnp_server_start_server
+ {static} int yaacc_upnp_server_stop_server
}
class de.yaacc.R.style {
+ {static} int AppTheme
+ {static} int TextAppearance_Compat_Notification
+ {static} int TextAppearance_Compat_Notification_Info
+ {static} int TextAppearance_Compat_Notification_Info_Media
+ {static} int TextAppearance_Compat_Notification_Line2
+ {static} int TextAppearance_Compat_Notification_Line2_Media
+ {static} int TextAppearance_Compat_Notification_Media
+ {static} int TextAppearance_Compat_Notification_Time
+ {static} int TextAppearance_Compat_Notification_Time_Media
+ {static} int TextAppearance_Compat_Notification_Title
+ {static} int TextAppearance_Compat_Notification_Title_Media
+ {static} int Theme_Transparent
+ {static} int Widget_Compat_NotificationActionContainer
+ {static} int Widget_Compat_NotificationActionText
}
class de.yaacc.R.styleable {
+ {static} int[] FontFamily
+ {static} int FontFamily_fontProviderAuthority
+ {static} int FontFamily_fontProviderCerts
+ {static} int FontFamily_fontProviderFetchStrategy
+ {static} int FontFamily_fontProviderFetchTimeout
+ {static} int FontFamily_fontProviderPackage
+ {static} int FontFamily_fontProviderQuery
+ {static} int[] FontFamilyFont
+ {static} int FontFamilyFont_font
+ {static} int FontFamilyFont_fontStyle
+ {static} int FontFamilyFont_fontWeight
}
class de.yaacc.R.xml {
+ {static} int preference
}
abstract class org.fourthline.cling.support.avtransport.impl.state.AbstractState {
- T transport
+ <<Create>> AbstractState(T)
+ T getTransport()
+ {abstract}TransportAction[] getCurrentTransportActions()
}
class org.fourthline.cling.android.FixedAndroidLogHandler {
- {static} Formatter THE_FORMATTER
+ <<Create>> FixedAndroidLogHandler()
+ void close()
+ void flush()
+ void publish(LogRecord)
~ {static} int getAndroidLevel(Level)
}
class org.fourthline.cling.model.types.BooleanDatatype {
+ <<Create>> BooleanDatatype()
+ boolean isHandlingJavaType(Class)
+ Boolean valueOf(String)
+ String getString(Boolean)
}
class org.seamless.util.ByteArray {
+ {static} byte[] toPrimitive(Byte[])
+ {static} Byte[] toWrapper(byte[])
}
abstract class org.fourthline.cling.support.renderingcontrol.callback.GetMute {
- {static} Logger log
+ <<Create>> GetMute(Service)
+ <<Create>> GetMute(UnsignedIntegerFourBytes,Service)
+ void success(ActionInvocation)
+ {abstract}void received(ActionInvocation,boolean)
}
class org.fourthline.cling.support.model.ProtocolInfo {
+ {static} String WILDCARD
# Protocol protocol
# String network
# String contentFormat
# String additionalInfo
+ <<Create>> ProtocolInfo(String)
+ <<Create>> ProtocolInfo(MimeType)
+ <<Create>> ProtocolInfo(Protocol,String,String,String)
+ Protocol getProtocol()
+ String getNetwork()
+ String getContentFormat()
+ MimeType getContentFormatMimeType()
+ String getAdditionalInfo()
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
class de.yaacc.browser.BrowseItemAdapter {
- {static} long CHUNK_SIZE
+ {static} Item LOAD_MORE_FAKE_ITEM
- {static} Item LOADING_FAKE_ITEM
- boolean loading
- LayoutInflater inflator
- List<DIDLObject> objects
- Context context
- Navigator navigator
- List<AsyncTask> asyncTasks
- boolean allItemsFetched
+ <<Create>> BrowseItemAdapter(Context,Navigator)
- void initialize(Context,Navigator)
+ Navigator getNavigator()
+ void setAllItemsFetched(boolean)
+ Context getContext()
+ void setLoading(boolean)
+ int getCount()
+ void addAll(Collection<? extends DIDLObject>)
+ void clear()
+ Object getItem(int)
+ long getItemId(int)
+ View getView(int,View,ViewGroup)
+ void cancelRunningTasks()
+ void removeTask(AsyncTask)
+ void addLoadMoreItem()
+ void addLoadingItem()
+ void removeLoadMoreItem()
+ void removeLoadingItem()
+ DIDLObject getFolder(int)
+ void onScrollStateChanged(AbsListView,int)
+ void onScroll(AbsListView,int,int,int)
+ void loadMore()
}
class de.yaacc.browser.BrowseItemAdapter.ViewHolder {
~ ImageView icon
~ TextView name
}
interface org.fourthline.cling.transport.spi.DatagramIO {
+ void init(InetAddress,Router,DatagramProcessor)
+ void stop()
+ C getConfiguration()
+ void send(OutgoingDatagramMessage)
+ void send(DatagramPacket)
}
class org.fourthline.cling.model.message.discovery.OutgoingSearchResponseUDN {
+ <<Create>> OutgoingSearchResponseUDN(IncomingDatagramMessage,Location,LocalDevice)
}
abstract class org.fourthline.cling.transport.spi.AbstractStreamClientConfiguration {
# ExecutorService requestExecutorService
# int timeoutSeconds
# int logWarningSeconds
# <<Create>> AbstractStreamClientConfiguration(ExecutorService)
# <<Create>> AbstractStreamClientConfiguration(ExecutorService,int)
# <<Create>> AbstractStreamClientConfiguration(ExecutorService,int,int)
+ ExecutorService getRequestExecutorService()
+ void setRequestExecutorService(ExecutorService)
+ int getTimeoutSeconds()
+ void setTimeoutSeconds(int)
+ int getLogWarningSeconds()
+ void setLogWarningSeconds(int)
+ String getUserAgentValue(int,int)
}
abstract class de.yaacc.upnp.callback.avtransport.GetSyncOffset {
- {static} Logger log
+ <<Create>> GetSyncOffset(UnsignedIntegerFourBytes,Service,String)
+ void success(ActionInvocation)
}
class org.fourthline.cling.support.messagebox.model.MessageSMS {
- DateTime receiveTime
- NumberName receiver
- NumberName sender
- String body
+ <<Create>> MessageSMS(NumberName,NumberName,String)
+ <<Create>> MessageSMS(DateTime,NumberName,NumberName,String)
+ <<Create>> MessageSMS(DisplayType,DateTime,NumberName,NumberName,String)
+ DateTime getReceiveTime()
+ NumberName getReceiver()
+ NumberName getSender()
+ String getBody()
+ void appendMessageElements(MessageElement)
}
class de.yaacc.upnp.server.avtransport.AvTransport {
~ SynchronizationInfo synchronizationInfo
+ <<Create>> AvTransport(UnsignedIntegerFourBytes,LastChange,StorageMedium)
+ SynchronizationInfo getSynchronizationInfo()
+ void setSynchronizationInfo(SynchronizationInfo)
}
class org.fourthline.cling.support.model.DescMeta {
# String id
# String type
# URI nameSpace
# M metadata
+ <<Create>> DescMeta()
+ <<Create>> DescMeta(String,String,URI,M)
+ String getId()
+ void setId(String)
+ String getType()
+ void setType(String)
+ URI getNameSpace()
+ void setNameSpace(URI)
+ M getMetadata()
+ void setMetadata(M)
+ Document createMetadataDocument()
}
class example.localservice.MyServiceWithAllowedValueRange {
- int restricted
+ int getRestricted()
+ void setRestricted(int)
}
class org.fourthline.cling.model.message.gena.OutgoingEventRequestMessage {
- Collection<StateVariableValue> stateVariableValues
+ <<Create>> OutgoingEventRequestMessage(GENASubscription,URL,UnsignedIntegerFourBytes,Collection<StateVariableValue>)
+ <<Create>> OutgoingEventRequestMessage(GENASubscription,URL)
+ Collection<StateVariableValue> getStateVariableValues()
}
interface org.fourthline.cling.model.Command {
+ void execute(ServiceManager<T>)
}
class org.fourthline.cling.model.meta.ModelDetails {
- String modelName
- String modelDescription
- String modelNumber
- URI modelURI
~ <<Create>> ModelDetails()
+ <<Create>> ModelDetails(String)
+ <<Create>> ModelDetails(String,String)
+ <<Create>> ModelDetails(String,String,String)
+ <<Create>> ModelDetails(String,String,String,URI)
+ <<Create>> ModelDetails(String,String,String,String)
+ String getModelName()
+ String getModelDescription()
+ String getModelNumber()
+ URI getModelURI()
}
class org.fourthline.cling.model.types.UnsignedIntegerFourBytes {
+ <<Create>> UnsignedIntegerFourBytes(long)
+ <<Create>> UnsignedIntegerFourBytes(String)
+ Bits getBits()
}
class org.fourthline.cling.test.model.HeaderParsingTest {
+ void parseContentTypeHeader()
+ void parseDeviceType()
+ void parseUDADeviceType()
+ void parseInvalidDeviceTypeHeader()
+ void parseDeviceTypeHeaderURI()
+ void parseDeviceUSNHeader()
+ void parseDeviceUSNHeaderStatic()
+ void parseInvalidDeviceUSNHeader()
+ void parseInvalidEXTHeader()
+ void parseHostHeaderConstructor()
+ void parseHostHeader()
+ void parseInvalidHostHeader()
+ void parseInvalidLocationHeader()
+ void parseInvalidMANHeader()
+ void parseMANHeaderNoNS()
+ void parseMANHeaderNS()
+ void parseMaxAgeHeader()
+ void parseInvalidMaxAgeHeader()
+ void parseMXHeader()
+ void parseInvalidMXHeader()
+ void parseInvalidNTSHeader()
+ void parseInvalidRootDeviceHeader()
+ void parseServerHeader()
+ void parseInvalidServerHeader()
+ void parseServiceType()
+ void parseUDAServiceType()
+ void parseInvalidServiceTypeHeader()
+ void parseServiceTypeHeaderURI()
+ void parseServiceUSNHeader()
+ void parseServiceUSNHeaderStatic()
+ void parseInvalidServiceUSNHeader()
+ void parseInvalidSTAllHeader()
+ void parseInvalidUDADeviceTypeHeader()
+ void parseUDADeviceTypeHeaderURI()
+ void parseInvalidUDAServiceTypeHeader()
+ void parseUDAServiceTypeHeaderURI()
+ void parseUDNHeader()
+ void parseInvalidUDNHeaderPrefix()
+ void parseInvalidUDNHeaderURN()
+ void parseInvalidUSNRootDeviceHeader()
+ void parseSoapActionHeader()
+ void parseSoapActionHeaderString()
+ void parseSoapActionHeaderQueryString()
+ void parseEventSequenceHeaderString()
+ void parseTimeoutHeaderString()
+ void parseCallbackHeaderString()
+ void parseInvalidCallbackHeaderString()
+ void parseSubscriptionIdHeaderString()
+ void parseInvalidSubscriptionIdHeaderString()
+ void parseInterfaceMacAddress()
+ void parseRange()
+ void parseContentRange()
+ void parsePragma()
}
class org.fourthline.cling.model.message.StreamRequestMessage {
# Connection connection
+ <<Create>> StreamRequestMessage(StreamRequestMessage)
+ <<Create>> StreamRequestMessage(UpnpRequest)
+ <<Create>> StreamRequestMessage(UpnpRequest.Method,URI)
+ <<Create>> StreamRequestMessage(UpnpRequest.Method,URL)
+ <<Create>> StreamRequestMessage(UpnpRequest,String)
+ <<Create>> StreamRequestMessage(UpnpRequest.Method,URI,String)
+ <<Create>> StreamRequestMessage(UpnpRequest.Method,URL,String)
+ <<Create>> StreamRequestMessage(UpnpRequest,byte[])
+ <<Create>> StreamRequestMessage(UpnpRequest.Method,URI,byte[])
+ <<Create>> StreamRequestMessage(UpnpRequest.Method,URL,byte[])
+ URI getUri()
+ void setUri(URI)
+ void setConnection(Connection)
+ Connection getConnection()
}
class org.fourthline.cling.model.types.DLNADoc {
+ {static} Pattern PATTERN
- String devClass
- String version
+ <<Create>> DLNADoc(String,String)
+ <<Create>> DLNADoc(String,Version)
+ String getDevClass()
+ String getVersion()
+ {static} DLNADoc valueOf(String)
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
enum org.fourthline.cling.model.types.Version {
+  V1_0
+  V1_5
~ String s
~ <<Create>> Version(String)
+ String toString()
}
class de.yaacc.databinding.ActivityReceiverListBinding {
- RelativeLayout rootView
+ ListView receiverList
- <<Create>> ActivityReceiverListBinding(RelativeLayout,ListView)
+ RelativeLayout getRoot()
+ {static} ActivityReceiverListBinding inflate(LayoutInflater)
+ {static} ActivityReceiverListBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityReceiverListBinding bind(View)
}
abstract class org.fourthline.cling.protocol.SendingSync {
- IN inputMessage
# OUT outputMessage
# <<Create>> SendingSync(UpnpService,IN)
+ IN getInputMessage()
+ OUT getOutputMessage()
# void execute()
# {abstract}OUT executeSync()
+ String toString()
}
class org.seamless.test.xml.SAXParserTest {
+ void testXxe()
}
interface de.yaacc.upnp.server.avtransport.YaaccState {
~ Class<? extends AbstractState<?>> syncPlay(String,String,String,String,String)
~ Class<? extends AbstractState<?>> syncPause(String,String)
~ Class<? extends AbstractState<?>> syncStop(String,String)
~ TransportAction[] getPossibleTransportActions()
}
enum org.fourthline.cling.support.model.Channel {
+  Master
+  LF
+  RF
+  CF
+  LFE
+  LS
+  RS
+  LFC
+  RFC
+  SD
+  SL
+  SR
+  T
}
class org.seamless.test.xhtml.Wrapping {
# XHTMLParser createParser()
+ void workFragment()
+ void wrapParse()
}
class org.fourthline.cling.binding.staging.MutableActionArgument {
+ String name
+ String relatedStateVariable
+ ActionArgument.Direction direction
+ boolean retval
+ ActionArgument build()
}
class org.fourthline.cling.model.types.InvalidValueException {
+ <<Create>> InvalidValueException(String)
+ <<Create>> InvalidValueException(String,Throwable)
}
class de.yaacc.player.LocalThirdPartieMusicPlayer {
- int musicAppPid
+ <<Create>> LocalThirdPartieMusicPlayer(UpnpClient,String)
+ <<Create>> LocalThirdPartieMusicPlayer(UpnpClient)
# void stopItem(PlayableItem)
# Object loadItem(PlayableItem)
# void startItem(PlayableItem,Object)
- void discoverMusicActivityPid()
+ void onDestroy()
+ URI getAlbumArt()
+ PendingIntent getNotificationIntent()
# int getNotificationId()
+ void seekTo(long)
}
abstract class org.fourthline.cling.model.types.AbstractDatatype {
- Builtin builtin
# Class<V> getValueType()
+ boolean isHandlingJavaType(Class)
+ V valueOf(String)
+ Builtin getBuiltin()
+ void setBuiltin(Builtin)
+ String getString(V)
+ boolean isValid(V)
+ String toString()
+ String getDisplayString()
}
class org.fourthline.cling.transport.impl.DatagramIOImpl {
- {static} Logger log
# DatagramIOConfigurationImpl configuration
# Router router
# DatagramProcessor datagramProcessor
# InetSocketAddress localAddress
# MulticastSocket socket
+ <<Create>> DatagramIOImpl(DatagramIOConfigurationImpl)
+ DatagramIOConfigurationImpl getConfiguration()
+ void init(InetAddress,Router,DatagramProcessor)
+ void stop()
+ void run()
+ void send(OutgoingDatagramMessage)
+ void send(DatagramPacket)
}
class org.fourthline.cling.model.meta.UDAVersion {
- int major
- int minor
+ <<Create>> UDAVersion()
+ <<Create>> UDAVersion(int,int)
+ int getMajor()
+ int getMinor()
+ List<ValidationError> validate()
}
class org.fourthline.cling.model.message.StreamResponseMessage {
+ <<Create>> StreamResponseMessage(StreamResponseMessage)
+ <<Create>> StreamResponseMessage(UpnpResponse.Status)
+ <<Create>> StreamResponseMessage(UpnpResponse)
+ <<Create>> StreamResponseMessage(UpnpResponse,String)
+ <<Create>> StreamResponseMessage(String)
+ <<Create>> StreamResponseMessage(UpnpResponse,byte[])
+ <<Create>> StreamResponseMessage(byte[])
+ <<Create>> StreamResponseMessage(String,ContentTypeHeader)
+ <<Create>> StreamResponseMessage(String,MimeType)
+ <<Create>> StreamResponseMessage(byte[],ContentTypeHeader)
+ <<Create>> StreamResponseMessage(byte[],MimeType)
}
class example.localservice.MyServiceWithEnum {
- Color color
+ Color getColor()
+ void setColor(String)
}
enum example.localservice.Color {
+  Red
+  Green
+  Blue
}
class org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl {
- {static} Logger log
+ void readBody(IncomingEventRequestMessage)
# void readProperties(XmlPullParser,IncomingEventRequestMessage)
# void readProperty(XmlPullParser,IncomingEventRequestMessage,StateVariable[])
}
enum org.fourthline.cling.model.types.NotificationSubtype {
+  ALIVE
+  UPDATE
+  BYEBYE
+  ALL
+  DISCOVER
+  PROPCHANGE
- String headerString
~ <<Create>> NotificationSubtype(String)
+ String getHeaderString()
}
class org.fourthline.cling.support.messagebox.model.DateTime {
- String date
- String time
+ <<Create>> DateTime()
+ <<Create>> DateTime(String,String)
+ String getDate()
+ String getTime()
+ void appendMessageElements(MessageElement)
+ {static} String getCurrentDate()
+ {static} String getCurrentTime()
}
class org.fourthline.cling.test.protocol.ProtocolFactoryTest {
+ void noSyncProtocol()
+ void receivingEvent()
}
abstract class org.fourthline.cling.support.model.dlna.message.header.DLNAHeader {
- {static} Logger log
+ {static} DLNAHeader newInstance(DLNAHeader.Type,String)
}
enum org.fourthline.cling.support.model.dlna.message.header.Type {
+  TimeSeekRange
+  XSeekRange
+  PlaySpeed
+  AvailableSeekRange
+  GetAvailableSeekRange
+  GetContentFeatures
+  ContentFeatures
+  TransferMode
+  FriendlyName
+  PeerManager
+  AvailableRange
+  SCID
+  RealTimeInfo
+  ScmsFlag
+  WCT
+  MaxPrate
+  EventType
+  Supported
+  BufferInfo
+  RTPH264DeInterleaving
+  RTPAACDeInterleaving
+  RTPAMRDeInterleaving
+  RTPAMRWBPlusDeInterleaving
+  PRAGMA
- {static} Map<String,Type> byName
- String httpName
- Class<? extends DLNAHeader>[] headerTypes
- <<Create>> Type(String,Class<? extends DLNAHeader>)
+ String getHttpName()
+ Class<? extends DLNAHeader>[] getHeaderTypes()
+ boolean isValidHeaderType(Class<? extends DLNAHeader>)
+ {static} Type getByHttpName(String)
}
class org.fourthline.cling.model.message.header.DeviceUSNHeader {
+ <<Create>> DeviceUSNHeader()
+ <<Create>> DeviceUSNHeader(UDN,DeviceType)
+ <<Create>> DeviceUSNHeader(NamedDeviceType)
+ void setString(String)
+ String getString()
}
abstract class org.fourthline.cling.model.gena.RemoteGENASubscription {
# PropertyChangeSupport propertyChangeSupport
# <<Create>> RemoteGENASubscription(RemoteService,int)
+ URL getEventSubscriptionURL()
+ List<URL> getEventCallbackURLs(List<NetworkAddress>,Namespace)
+ void establish()
+ void fail(UpnpResponse)
+ void end(CancelReason,UpnpResponse)
+ void receive(UnsignedIntegerFourBytes,Collection<StateVariableValue>)
+ {abstract}void invalidMessage(UnsupportedDataException)
+ {abstract}void failed(UpnpResponse)
+ {abstract}void ended(CancelReason,UpnpResponse)
+ {abstract}void eventsMissed(int)
+ String toString()
}
class org.fourthline.cling.support.model.dlna.message.header.FriendlyNameHeader {
+ <<Create>> FriendlyNameHeader()
+ <<Create>> FriendlyNameHeader(String)
+ void setString(String)
+ String getString()
}
class android.support.fragment.R {
- <<Create>> R()
}
class android.support.fragment.R.attr {
+ {static} int font
+ {static} int fontProviderAuthority
+ {static} int fontProviderCerts
+ {static} int fontProviderFetchStrategy
+ {static} int fontProviderFetchTimeout
+ {static} int fontProviderPackage
+ {static} int fontProviderQuery
+ {static} int fontStyle
+ {static} int fontWeight
- <<Create>> attr()
}
class android.support.fragment.R.bool {
+ {static} int abc_action_bar_embed_tabs
- <<Create>> bool()
}
class android.support.fragment.R.color {
+ {static} int notification_action_color_filter
+ {static} int notification_icon_bg_color
+ {static} int ripple_material_light
+ {static} int secondary_text_default_material_light
- <<Create>> color()
}
class android.support.fragment.R.dimen {
+ {static} int compat_button_inset_horizontal_material
+ {static} int compat_button_inset_vertical_material
+ {static} int compat_button_padding_horizontal_material
+ {static} int compat_button_padding_vertical_material
+ {static} int compat_control_corner_material
+ {static} int notification_action_icon_size
+ {static} int notification_action_text_size
+ {static} int notification_big_circle_margin
+ {static} int notification_content_margin_start
+ {static} int notification_large_icon_height
+ {static} int notification_large_icon_width
+ {static} int notification_main_column_padding_top
+ {static} int notification_media_narrow_margin
+ {static} int notification_right_icon_size
+ {static} int notification_right_side_padding_top
+ {static} int notification_small_icon_background_padding
+ {static} int notification_small_icon_size_as_large
+ {static} int notification_subtext_size
+ {static} int notification_top_pad
+ {static} int notification_top_pad_large_text
- <<Create>> dimen()
}
class android.support.fragment.R.drawable {
+ {static} int notification_action_background
+ {static} int notification_bg
+ {static} int notification_bg_low
+ {static} int notification_bg_low_normal
+ {static} int notification_bg_low_pressed
+ {static} int notification_bg_normal
+ {static} int notification_bg_normal_pressed
+ {static} int notification_icon_background
+ {static} int notification_template_icon_bg
+ {static} int notification_template_icon_low_bg
+ {static} int notification_tile_bg
+ {static} int notify_panel_notification_icon_bg
- <<Create>> drawable()
}
class android.support.fragment.R.id {
+ {static} int action_container
+ {static} int action_divider
+ {static} int action_image
+ {static} int action_text
+ {static} int actions
+ {static} int async
+ {static} int blocking
+ {static} int chronometer
+ {static} int forever
+ {static} int icon
+ {static} int icon_group
+ {static} int info
+ {static} int italic
+ {static} int line1
+ {static} int line3
+ {static} int normal
+ {static} int notification_background
+ {static} int notification_main_column
+ {static} int notification_main_column_container
+ {static} int right_icon
+ {static} int right_side
+ {static} int text
+ {static} int text2
+ {static} int time
+ {static} int title
- <<Create>> id()
}
class android.support.fragment.R.integer {
+ {static} int status_bar_notification_info_maxnum
- <<Create>> integer()
}
class android.support.fragment.R.layout {
+ {static} int notification_action
+ {static} int notification_action_tombstone
+ {static} int notification_template_custom_big
+ {static} int notification_template_icon_group
+ {static} int notification_template_part_chronometer
+ {static} int notification_template_part_time
- <<Create>> layout()
}
class android.support.fragment.R.string {
+ {static} int status_bar_notification_info_overflow
- <<Create>> string()
}
class android.support.fragment.R.style {
+ {static} int TextAppearance_Compat_Notification
+ {static} int TextAppearance_Compat_Notification_Info
+ {static} int TextAppearance_Compat_Notification_Line2
+ {static} int TextAppearance_Compat_Notification_Time
+ {static} int TextAppearance_Compat_Notification_Title
+ {static} int Widget_Compat_NotificationActionContainer
+ {static} int Widget_Compat_NotificationActionText
- <<Create>> style()
}
class android.support.fragment.R.styleable {
+ {static} int[] FontFamily
+ {static} int FontFamily_fontProviderAuthority
+ {static} int FontFamily_fontProviderCerts
+ {static} int FontFamily_fontProviderFetchStrategy
+ {static} int FontFamily_fontProviderFetchTimeout
+ {static} int FontFamily_fontProviderPackage
+ {static} int FontFamily_fontProviderQuery
+ {static} int[] FontFamilyFont
+ {static} int FontFamilyFont_font
+ {static} int FontFamilyFont_fontStyle
+ {static} int FontFamilyFont_fontWeight
- <<Create>> styleable()
}
class org.seamless.test.xhtml.ReadModifyDocument {
# XHTMLParser createParser()
+ void readDocument()
+ void modifyDocument()
+ void getOptions()
}
class org.fourthline.cling.protocol.sync.ReceivingSubscribe {
- {static} Logger log
# LocalGENASubscription subscription
+ <<Create>> ReceivingSubscribe(UpnpService,StreamRequestMessage)
# OutgoingSubscribeResponseMessage executeSync()
# OutgoingSubscribeResponseMessage processRenewal(LocalService,IncomingSubscribeRequestMessage)
# OutgoingSubscribeResponseMessage processNewSubscription(LocalService,IncomingSubscribeRequestMessage)
+ void responseSent(StreamResponseMessage)
+ void responseException(Throwable)
}
class org.fourthline.cling.transport.spi.InitializationException {
+ <<Create>> InitializationException(String)
+ <<Create>> InitializationException(String,Throwable)
}
enum org.fourthline.cling.support.model.PlayMode {
+  NORMAL
+  SHUFFLE
+  REPEAT_ONE
+  REPEAT_ALL
+  RANDOM
+  DIRECT_1
+  INTRO
}
interface org.fourthline.cling.model.message.Connection {
~ boolean isOpen()
~ InetAddress getRemoteAddress()
~ InetAddress getLocalAddress()
}
class example.mediaserver.ConnectionManagerPeerTest {
+ void createDestroyConnections()
+ LocalDevice createDevice(String,String,LocalService)
+ LocalService<PeeringConnectionManager> createService(PeeringConnectionManager)
}
class example.mediaserver.ConnectionManagerPeerTest.PeeringConnectionManager {
~ <<Create>> PeeringConnectionManager(ProtocolInfos,ProtocolInfos)
# ConnectionInfo createConnection(int,int,ServiceReference,ConnectionInfo.Direction,ProtocolInfo)
# void closeConnection(ConnectionInfo)
# void peerFailure(ActionInvocation,UpnpResponse,String)
}
class example.mediaserver.ConnectionManagerPeerTest.CountingListener {
~ int count
+ void propertyChange(PropertyChangeEvent)
}
class org.fourthline.cling.support.model.item.ImageItem {
+ {static} Class CLASS
+ <<Create>> ImageItem()
+ <<Create>> ImageItem(Item)
+ <<Create>> ImageItem(String,Container,String,String,Res)
+ <<Create>> ImageItem(String,String,String,String,Res)
+ String getDescription()
+ ImageItem setDescription(String)
+ String getLongDescription()
+ ImageItem setLongDescription(String)
+ Person getFirstPublisher()
+ Person[] getPublishers()
+ ImageItem setPublishers(Person[])
+ StorageMedium getStorageMedium()
+ ImageItem setStorageMedium(StorageMedium)
+ String getRating()
+ ImageItem setRating(String)
+ String getDate()
+ ImageItem setDate(String)
+ String getFirstRights()
+ String[] getRights()
+ ImageItem setRights(String[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueChannelLoudness {
+ <<Create>> EventedValueChannelLoudness(ChannelLoudness)
+ <<Create>> EventedValueChannelLoudness(Map.Entry<String,String>[])
# ChannelLoudness valueOf(Map.Entry<String,String>[])
+ Map.Entry<String,String>[] getAttributes()
+ String toString()
# Datatype getDatatype()
}
class android.support.compat.R {
- <<Create>> R()
}
class android.support.compat.R.attr {
+ {static} int font
+ {static} int fontProviderAuthority
+ {static} int fontProviderCerts
+ {static} int fontProviderFetchStrategy
+ {static} int fontProviderFetchTimeout
+ {static} int fontProviderPackage
+ {static} int fontProviderQuery
+ {static} int fontStyle
+ {static} int fontWeight
- <<Create>> attr()
}
class android.support.compat.R.bool {
+ {static} int abc_action_bar_embed_tabs
- <<Create>> bool()
}
class android.support.compat.R.color {
+ {static} int notification_action_color_filter
+ {static} int notification_icon_bg_color
+ {static} int ripple_material_light
+ {static} int secondary_text_default_material_light
- <<Create>> color()
}
class android.support.compat.R.dimen {
+ {static} int compat_button_inset_horizontal_material
+ {static} int compat_button_inset_vertical_material
+ {static} int compat_button_padding_horizontal_material
+ {static} int compat_button_padding_vertical_material
+ {static} int compat_control_corner_material
+ {static} int notification_action_icon_size
+ {static} int notification_action_text_size
+ {static} int notification_big_circle_margin
+ {static} int notification_content_margin_start
+ {static} int notification_large_icon_height
+ {static} int notification_large_icon_width
+ {static} int notification_main_column_padding_top
+ {static} int notification_media_narrow_margin
+ {static} int notification_right_icon_size
+ {static} int notification_right_side_padding_top
+ {static} int notification_small_icon_background_padding
+ {static} int notification_small_icon_size_as_large
+ {static} int notification_subtext_size
+ {static} int notification_top_pad
+ {static} int notification_top_pad_large_text
- <<Create>> dimen()
}
class android.support.compat.R.drawable {
+ {static} int notification_action_background
+ {static} int notification_bg
+ {static} int notification_bg_low
+ {static} int notification_bg_low_normal
+ {static} int notification_bg_low_pressed
+ {static} int notification_bg_normal
+ {static} int notification_bg_normal_pressed
+ {static} int notification_icon_background
+ {static} int notification_template_icon_bg
+ {static} int notification_template_icon_low_bg
+ {static} int notification_tile_bg
+ {static} int notify_panel_notification_icon_bg
- <<Create>> drawable()
}
class android.support.compat.R.id {
+ {static} int action_container
+ {static} int action_divider
+ {static} int action_image
+ {static} int action_text
+ {static} int actions
+ {static} int async
+ {static} int blocking
+ {static} int chronometer
+ {static} int forever
+ {static} int icon
+ {static} int icon_group
+ {static} int info
+ {static} int italic
+ {static} int line1
+ {static} int line3
+ {static} int normal
+ {static} int notification_background
+ {static} int notification_main_column
+ {static} int notification_main_column_container
+ {static} int right_icon
+ {static} int right_side
+ {static} int text
+ {static} int text2
+ {static} int time
+ {static} int title
- <<Create>> id()
}
class android.support.compat.R.integer {
+ {static} int status_bar_notification_info_maxnum
- <<Create>> integer()
}
class android.support.compat.R.layout {
+ {static} int notification_action
+ {static} int notification_action_tombstone
+ {static} int notification_template_custom_big
+ {static} int notification_template_icon_group
+ {static} int notification_template_part_chronometer
+ {static} int notification_template_part_time
- <<Create>> layout()
}
class android.support.compat.R.string {
+ {static} int status_bar_notification_info_overflow
- <<Create>> string()
}
class android.support.compat.R.style {
+ {static} int TextAppearance_Compat_Notification
+ {static} int TextAppearance_Compat_Notification_Info
+ {static} int TextAppearance_Compat_Notification_Line2
+ {static} int TextAppearance_Compat_Notification_Time
+ {static} int TextAppearance_Compat_Notification_Title
+ {static} int Widget_Compat_NotificationActionContainer
+ {static} int Widget_Compat_NotificationActionText
- <<Create>> style()
}
class android.support.compat.R.styleable {
+ {static} int[] FontFamily
+ {static} int FontFamily_fontProviderAuthority
+ {static} int FontFamily_fontProviderCerts
+ {static} int FontFamily_fontProviderFetchStrategy
+ {static} int FontFamily_fontProviderFetchTimeout
+ {static} int FontFamily_fontProviderPackage
+ {static} int FontFamily_fontProviderQuery
+ {static} int[] FontFamilyFont
+ {static} int FontFamilyFont_font
+ {static} int FontFamilyFont_fontStyle
+ {static} int FontFamilyFont_fontWeight
- <<Create>> styleable()
}
class org.fourthline.cling.support.model.dlna.message.header.PlaySpeedHeader {
+ <<Create>> PlaySpeedHeader()
+ <<Create>> PlaySpeedHeader(TransportPlaySpeed)
+ void setString(String)
+ String getString()
}
class org.seamless.http.Representation {
- URL url
- CacheControl cacheControl
- Integer contentLength
- String contentType
- Long lastModified
- String entityTag
- E entity
+ <<Create>> Representation(CacheControl,Integer,String,Long,String,E)
+ <<Create>> Representation(URL,CacheControl,Integer,String,Long,String,E)
+ <<Create>> Representation(URLConnection,E)
+ URL getUrl()
+ CacheControl getCacheControl()
+ Integer getContentLength()
+ String getContentType()
+ Long getLastModified()
+ String getEntityTag()
+ E getEntity()
+ Long getMaxAgeOrNull()
+ boolean isExpired(long,long)
+ boolean isExpired(long)
+ boolean isNoStore()
+ boolean isNoCache()
+ boolean mustRevalidate()
+ boolean hasEntityTagChanged(String)
+ boolean hasBeenModified(long)
+ String toString()
}
class de.yaacc.player.PlayerService {
- IBinder binder
- Map<Integer,Player> currentActivePlayer
- HandlerThread playerHandlerThread
+ <<Create>> PlayerService()
+ void addPlayer(Player)
+ void removePlayer(Player)
+ void onDestroy()
+ IBinder onBind(Intent)
+ Collection<Player> getPlayer()
+ int onStartCommand(Intent,int,int)
- void initialize(Intent)
+ HandlerThread getPlayerHandlerThread()
+ Player getPlayer(int)
+ List<Player> createPlayer(UpnpClient,SynchronizationInfo,List<PlayableItem>)
- Player createPlayer(UpnpClient,Device,boolean,boolean,boolean,SynchronizationInfo)
- Player createImagePlayer(UpnpClient)
- Player createMusicPlayer(UpnpClient)
+ Collection<Player> getCurrentPlayers()
+ List<Player> getCurrentPlayersOfType(Class,SynchronizationInfo)
+ List<Player> getCurrentPlayersOfType(Class)
+ Player getFirstCurrentPlayerOfType(Class)
+ Class getPlayerClassForMimeType(String)
+ void shutdown(Player)
+ void shutdown()
+ void controlDevice(UpnpClient,Device)
}
class de.yaacc.player.PlayerService.PlayerServiceBinder {
+ PlayerService getService()
}
class org.fourthline.cling.support.contentdirectory.ContentDirectoryException {
+ <<Create>> ContentDirectoryException(int,String)
+ <<Create>> ContentDirectoryException(int,String,Throwable)
+ <<Create>> ContentDirectoryException(ErrorCode,String)
+ <<Create>> ContentDirectoryException(ErrorCode)
+ <<Create>> ContentDirectoryException(ContentDirectoryErrorCode,String)
+ <<Create>> ContentDirectoryException(ContentDirectoryErrorCode)
}
class org.fourthline.cling.model.types.csv.CSVDouble {
+ <<Create>> CSVDouble()
+ <<Create>> CSVDouble(String)
}
class org.fourthline.cling.support.renderingcontrol.lastchange.ChannelVolumeDB {
# Channel channel
# Integer volumeDB
+ <<Create>> ChannelVolumeDB(Channel,Integer)
+ Channel getChannel()
+ Integer getVolumeDB()
+ String toString()
}
class org.fourthline.cling.binding.staging.MutableIcon {
+ String mimeType
+ int width
+ int height
+ int depth
+ URI uri
+ Icon build()
}
class org.fourthline.cling.model.message.gena.OutgoingSubscribeRequestMessage {
+ <<Create>> OutgoingSubscribeRequestMessage(RemoteGENASubscription,List<URL>,UpnpHeaders)
+ boolean hasCallbackURLs()
}
class de.yaacc.upnp.model.types.SyncOffset {
- int hour
- int minute
- int second
- int millis
- int micros
- int nanos
- boolean positive
+ <<Create>> SyncOffset(boolean,int,int,int,int,int,int)
+ <<Create>> SyncOffset()
+ <<Create>> SyncOffset(long)
+ <<Create>> SyncOffset(String)
+ java.lang.String toString()
+ boolean equals(Object)
+ int hashCode()
+ int getHour()
+ int getMinute()
+ int getSecond()
+ int getMillis()
+ int getMicros()
+ int getNanos()
+ boolean isPositive()
+ SyncOffset add(SyncOffset)
+ long toNanos()
+ boolean isHandlingJavaType(Class)
+ Builtin getBuiltin()
+ boolean isValid(Object)
+ String getString(Object)
+ Object valueOf(String)
+ String getDisplayString()
}
class org.fourthline.cling.registry.event.FailedRemoteDeviceDiscovery {
# Exception exception
+ <<Create>> FailedRemoteDeviceDiscovery(RemoteDevice,Exception)
+ Exception getException()
}
class example.mediaserver.ConnectionManagerSimpleTest {
+ void retrieveProtocolInfo()
}
abstract class org.fourthline.cling.support.lastchange.EventedValueEnum {
+ <<Create>> EventedValueEnum(E)
+ <<Create>> EventedValueEnum(Map.Entry<String,String>[])
# E valueOf(String)
# {abstract}E enumValueOf(String)
+ String toString()
# Datatype getDatatype()
}
class org.fourthline.cling.support.model.dlna.types.TimeSeekRangeType {
- NormalPlayTimeRange normalPlayTimeRange
- BytesRange bytesRange
+ <<Create>> TimeSeekRangeType(NormalPlayTimeRange)
+ <<Create>> TimeSeekRangeType(NormalPlayTimeRange,BytesRange)
+ NormalPlayTimeRange getNormalPlayTimeRange()
+ BytesRange getBytesRange()
+ void setBytesRange(BytesRange)
}
class org.fourthline.cling.protocol.async.SendingSearch {
- {static} Logger log
- UpnpHeader searchTarget
- int mxSeconds
+ <<Create>> SendingSearch(UpnpService)
+ <<Create>> SendingSearch(UpnpService,UpnpHeader)
+ <<Create>> SendingSearch(UpnpService,UpnpHeader,int)
+ UpnpHeader getSearchTarget()
+ int getMxSeconds()
# void execute()
+ int getBulkRepeat()
+ int getBulkIntervalMilliseconds()
# void prepareOutgoingSearchRequest(OutgoingSearchRequest)
}
class de.yaacc.upnp.server.avtransport.AvTransportMediaRendererNoMediaPresent {
- UpnpClient upnpClient
+ <<Create>> AvTransportMediaRendererNoMediaPresent(AvTransport,UpnpClient)
+ Class<? extends AbstractState<?>> setTransportURI(URI,String)
+ Class<? extends AbstractState<?>> syncPlay(String,String,String,String,String)
+ Class<? extends AbstractState<?>> syncPause(String,String)
+ Class<? extends AbstractState<?>> syncStop(String,String)
+ TransportAction[] getPossibleTransportActions()
}
class org.fourthline.cling.test.data.SampleServiceTwo {
+ {static} URI getThisDescriptorURI()
+ {static} URL getThisDescriptorURL()
+ {static} ServiceId getThisServiceId()
+ {static} ServiceType getThisServiceType()
+ ServiceType getServiceType()
+ ServiceId getServiceId()
+ URI getDescriptorURI()
+ URI getControlURI()
+ URI getEventSubscriptionURI()
+ Action[] getActions()
+ StateVariable[] getStateVariables()
}
class org.seamless.test.util.IteratorsTest {
+ void iterate()
+ void concurrentIterate()
+ void concurrentRemove()
}
class org.seamless.test.util.IteratorsTest.Foo {
# ReentrantLock lock
~ List<String> strings
~ <<Create>> Foo()
+ Iterator<String> getIterator()
# void lock()
# void unlock()
}
class org.seamless.test.util.IteratorsTest.Iterate {
~ Iterator<String> it
~ <<Create>> Iterate(Iterator<String>)
+ Integer call()
}
class org.fourthline.cling.model.ValidationError {
- Class clazz
- String propertyName
- String message
+ <<Create>> ValidationError(Class,String)
+ <<Create>> ValidationError(Class,String,String)
+ Class getClazz()
+ String getPropertyName()
+ String getMessage()
+ String toString()
}
interface org.fourthline.cling.transport.spi.StreamClient {
+ StreamResponseMessage sendRequest(StreamRequestMessage)
+ void stop()
+ C getConfiguration()
}
class org.fourthline.cling.registry.LocalItems {
- {static} Logger log
# Map<UDN,DiscoveryOptions> discoveryOptions
# long lastAliveIntervalTimestamp
# Random randomGenerator
~ <<Create>> LocalItems(RegistryImpl)
# void setDiscoveryOptions(UDN,DiscoveryOptions)
# DiscoveryOptions getDiscoveryOptions(UDN)
# boolean isAdvertised(UDN)
# boolean isByeByeBeforeFirstAlive(UDN)
~ void add(LocalDevice)
~ void add(LocalDevice,DiscoveryOptions)
~ Collection<LocalDevice> get()
~ boolean remove(LocalDevice)
~ boolean remove(LocalDevice,boolean)
~ void removeAll()
~ void removeAll(boolean)
+ void advertiseLocalDevices()
~ void maintain()
~ void shutdown()
# void advertiseAlive(LocalDevice)
# void advertiseByebye(LocalDevice,boolean)
}
class org.fourthline.cling.support.model.dlna.message.header.SCIDHeader {
+ <<Create>> SCIDHeader()
+ void setString(String)
+ String getString()
}
class org.seamless.test.util.URIUtilTest {
+ void uriCreation()
+ void urlCreation()
+ void encoding()
}
interface org.fourthline.cling.controlpoint.ControlPoint {
+ UpnpServiceConfiguration getConfiguration()
+ ProtocolFactory getProtocolFactory()
+ Registry getRegistry()
+ void search()
+ void search(UpnpHeader)
+ void search(int)
+ void search(UpnpHeader,int)
+ Future execute(ActionCallback)
+ void execute(SubscriptionCallback)
}
class de.yaacc.browser.ServerListFragment {
- UpnpClient upnpClient
- ListView contentList
- SharedPreferences getPreferences()
+ void onCreate(Bundle)
- void populateDeviceList()
+ void deviceAdded(Device<?,?,?>)
+ void deviceRemoved(Device<?,?,?>)
+ void deviceUpdated(Device<?,?,?>)
+ void onResume()
- void init(Bundle,View)
+ View onCreateView(LayoutInflater,ViewGroup,Bundle)
}
class android.support.coreutils.R {
- <<Create>> R()
}
class android.support.coreutils.R.attr {
+ {static} int font
+ {static} int fontProviderAuthority
+ {static} int fontProviderCerts
+ {static} int fontProviderFetchStrategy
+ {static} int fontProviderFetchTimeout
+ {static} int fontProviderPackage
+ {static} int fontProviderQuery
+ {static} int fontStyle
+ {static} int fontWeight
- <<Create>> attr()
}
class android.support.coreutils.R.bool {
+ {static} int abc_action_bar_embed_tabs
- <<Create>> bool()
}
class android.support.coreutils.R.color {
+ {static} int notification_action_color_filter
+ {static} int notification_icon_bg_color
+ {static} int ripple_material_light
+ {static} int secondary_text_default_material_light
- <<Create>> color()
}
class android.support.coreutils.R.dimen {
+ {static} int compat_button_inset_horizontal_material
+ {static} int compat_button_inset_vertical_material
+ {static} int compat_button_padding_horizontal_material
+ {static} int compat_button_padding_vertical_material
+ {static} int compat_control_corner_material
+ {static} int notification_action_icon_size
+ {static} int notification_action_text_size
+ {static} int notification_big_circle_margin
+ {static} int notification_content_margin_start
+ {static} int notification_large_icon_height
+ {static} int notification_large_icon_width
+ {static} int notification_main_column_padding_top
+ {static} int notification_media_narrow_margin
+ {static} int notification_right_icon_size
+ {static} int notification_right_side_padding_top
+ {static} int notification_small_icon_background_padding
+ {static} int notification_small_icon_size_as_large
+ {static} int notification_subtext_size
+ {static} int notification_top_pad
+ {static} int notification_top_pad_large_text
- <<Create>> dimen()
}
class android.support.coreutils.R.drawable {
+ {static} int notification_action_background
+ {static} int notification_bg
+ {static} int notification_bg_low
+ {static} int notification_bg_low_normal
+ {static} int notification_bg_low_pressed
+ {static} int notification_bg_normal
+ {static} int notification_bg_normal_pressed
+ {static} int notification_icon_background
+ {static} int notification_template_icon_bg
+ {static} int notification_template_icon_low_bg
+ {static} int notification_tile_bg
+ {static} int notify_panel_notification_icon_bg
- <<Create>> drawable()
}
class android.support.coreutils.R.id {
+ {static} int action_container
+ {static} int action_divider
+ {static} int action_image
+ {static} int action_text
+ {static} int actions
+ {static} int async
+ {static} int blocking
+ {static} int chronometer
+ {static} int forever
+ {static} int icon
+ {static} int icon_group
+ {static} int info
+ {static} int italic
+ {static} int line1
+ {static} int line3
+ {static} int normal
+ {static} int notification_background
+ {static} int notification_main_column
+ {static} int notification_main_column_container
+ {static} int right_icon
+ {static} int right_side
+ {static} int text
+ {static} int text2
+ {static} int time
+ {static} int title
- <<Create>> id()
}
class android.support.coreutils.R.integer {
+ {static} int status_bar_notification_info_maxnum
- <<Create>> integer()
}
class android.support.coreutils.R.layout {
+ {static} int notification_action
+ {static} int notification_action_tombstone
+ {static} int notification_template_custom_big
+ {static} int notification_template_icon_group
+ {static} int notification_template_part_chronometer
+ {static} int notification_template_part_time
- <<Create>> layout()
}
class android.support.coreutils.R.string {
+ {static} int status_bar_notification_info_overflow
- <<Create>> string()
}
class android.support.coreutils.R.style {
+ {static} int TextAppearance_Compat_Notification
+ {static} int TextAppearance_Compat_Notification_Info
+ {static} int TextAppearance_Compat_Notification_Line2
+ {static} int TextAppearance_Compat_Notification_Time
+ {static} int TextAppearance_Compat_Notification_Title
+ {static} int Widget_Compat_NotificationActionContainer
+ {static} int Widget_Compat_NotificationActionText
- <<Create>> style()
}
class android.support.coreutils.R.styleable {
+ {static} int[] FontFamily
+ {static} int FontFamily_fontProviderAuthority
+ {static} int FontFamily_fontProviderCerts
+ {static} int FontFamily_fontProviderFetchStrategy
+ {static} int FontFamily_fontProviderFetchTimeout
+ {static} int FontFamily_fontProviderPackage
+ {static} int FontFamily_fontProviderQuery
+ {static} int[] FontFamilyFont
+ {static} int FontFamilyFont_font
+ {static} int FontFamilyFont_fontStyle
+ {static} int FontFamilyFont_fontWeight
- <<Create>> styleable()
}
abstract class de.yaacc.upnp.callback.avtransport.SyncPause {
- {static} Logger log
+ <<Create>> SyncPause(UnsignedIntegerFourBytes,Service,String,String)
+ void success(ActionInvocation)
}
class example.binarylight.BinaryLightSampleData {
+ {static} LocalDevice createDevice(Class<?>)
+ {static} LocalDevice createDevice(LocalService)
}
class example.localservice.SwitchPowerBeanReturn {
- boolean target
- boolean status
+ void setTarget(boolean)
+ boolean getTarget()
+ StatusHolder getStatus()
}
class example.localservice.SwitchPowerBeanReturn.StatusHolder {
~ boolean wrapped
+ <<Create>> StatusHolder(boolean)
+ boolean getWrapped()
}
class example.binarylight.BinaryLightTest {
+ void testServer()
+ void testClient()
}
abstract class org.fourthline.cling.support.lastchange.LastChangeParser {
- {static} Logger log
# {abstract}String getNamespace()
# Set<Class<? extends EventedValue>> getEventedVariables()
# EventedValue createValue(String,Map.Entry<String,String>[])
+ Event parseResource(String)
+ Event parse(String)
+ String generate(Event)
# Document buildDOM(Event)
# void generateRoot(Event,Document)
# void generateInstanceIDs(Event,Document,Element)
# void generateEventedValue(EventedValue,Document,Element)
}
enum org.fourthline.cling.support.lastchange.CONSTANTS {
+  Event
+  InstanceID
+  val
+ boolean equals(String)
}
class org.fourthline.cling.support.lastchange.LastChangeParser.RootHandler {
~ <<Create>> RootHandler(Event,SAXParser)
~ <<Create>> RootHandler(Event)
+ void startElement(String,String,String,Attributes)
}
class org.fourthline.cling.support.lastchange.LastChangeParser.InstanceIDHandler {
~ <<Create>> InstanceIDHandler(InstanceID,SAXParser.Handler)
+ void startElement(String,String,String,Attributes)
# boolean isLastElement(String,String,String)
}
class org.fourthline.cling.model.ExpirationDetails {
+ {static} int UNLIMITED_AGE
- int maxAgeSeconds
- long lastRefreshTimestampSeconds
- {static} String simpleName
+ <<Create>> ExpirationDetails()
+ <<Create>> ExpirationDetails(int)
+ int getMaxAgeSeconds()
+ long getLastRefreshTimestampSeconds()
+ void setLastRefreshTimestampSeconds(long)
+ void stampLastRefresh()
+ boolean hasExpired()
+ boolean hasExpired(boolean)
+ long getSecondsUntilExpiration()
# long getCurrentTimestampSeconds()
+ String toString()
}
class org.fourthline.cling.model.message.header.UDADeviceTypeHeader {
+ <<Create>> UDADeviceTypeHeader()
+ <<Create>> UDADeviceTypeHeader(URI)
+ <<Create>> UDADeviceTypeHeader(DeviceType)
+ void setString(String)
}
enum org.fourthline.cling.model.gena.CancelReason {
+  RENEWAL_FAILED
+  DEVICE_WAS_REMOVED
+  UNSUBSCRIBE_FAILED
+  EXPIRED
}
class org.seamless.xml.SAXParser {
- {static} Logger log
+ {static} URI XML_SCHEMA_NAMESPACE
+ {static} URL XML_SCHEMA_RESOURCE
- XMLReader xr
+ <<Create>> SAXParser()
+ <<Create>> SAXParser(DefaultHandler)
+ void setContentHandler(ContentHandler)
# XMLReader create()
# Schema createSchema(Source[])
# Source[] getSchemaSources()
# ErrorHandler getErrorHandler()
+ void parse(InputSource)
}
class org.seamless.xml.SAXParser.SimpleErrorHandler {
+ void warning(SAXParseException)
+ void error(SAXParseException)
+ void fatalError(SAXParseException)
}
class org.seamless.xml.SAXParser.Handler {
# SAXParser parser
# I instance
# Handler parent
# StringBuilder characters
# Attributes attributes
+ <<Create>> Handler(I)
+ <<Create>> Handler(I,SAXParser)
+ <<Create>> Handler(I,Handler)
+ <<Create>> Handler(I,SAXParser,Handler)
+ I getInstance()
+ SAXParser getParser()
+ Handler getParent()
# void switchToParent()
+ String getCharacters()
+ void startElement(String,String,String,Attributes)
+ void characters(char[],int,int)
+ void endElement(String,String,String)
# boolean isLastElement(String,String,String)
# Attributes getAttributes()
}
class android.support.coreui.R {
- <<Create>> R()
}
class android.support.coreui.R.attr {
+ {static} int font
+ {static} int fontProviderAuthority
+ {static} int fontProviderCerts
+ {static} int fontProviderFetchStrategy
+ {static} int fontProviderFetchTimeout
+ {static} int fontProviderPackage
+ {static} int fontProviderQuery
+ {static} int fontStyle
+ {static} int fontWeight
- <<Create>> attr()
}
class android.support.coreui.R.bool {
+ {static} int abc_action_bar_embed_tabs
- <<Create>> bool()
}
class android.support.coreui.R.color {
+ {static} int notification_action_color_filter
+ {static} int notification_icon_bg_color
+ {static} int ripple_material_light
+ {static} int secondary_text_default_material_light
- <<Create>> color()
}
class android.support.coreui.R.dimen {
+ {static} int compat_button_inset_horizontal_material
+ {static} int compat_button_inset_vertical_material
+ {static} int compat_button_padding_horizontal_material
+ {static} int compat_button_padding_vertical_material
+ {static} int compat_control_corner_material
+ {static} int notification_action_icon_size
+ {static} int notification_action_text_size
+ {static} int notification_big_circle_margin
+ {static} int notification_content_margin_start
+ {static} int notification_large_icon_height
+ {static} int notification_large_icon_width
+ {static} int notification_main_column_padding_top
+ {static} int notification_media_narrow_margin
+ {static} int notification_right_icon_size
+ {static} int notification_right_side_padding_top
+ {static} int notification_small_icon_background_padding
+ {static} int notification_small_icon_size_as_large
+ {static} int notification_subtext_size
+ {static} int notification_top_pad
+ {static} int notification_top_pad_large_text
- <<Create>> dimen()
}
class android.support.coreui.R.drawable {
+ {static} int notification_action_background
+ {static} int notification_bg
+ {static} int notification_bg_low
+ {static} int notification_bg_low_normal
+ {static} int notification_bg_low_pressed
+ {static} int notification_bg_normal
+ {static} int notification_bg_normal_pressed
+ {static} int notification_icon_background
+ {static} int notification_template_icon_bg
+ {static} int notification_template_icon_low_bg
+ {static} int notification_tile_bg
+ {static} int notify_panel_notification_icon_bg
- <<Create>> drawable()
}
class android.support.coreui.R.id {
+ {static} int action_container
+ {static} int action_divider
+ {static} int action_image
+ {static} int action_text
+ {static} int actions
+ {static} int async
+ {static} int blocking
+ {static} int chronometer
+ {static} int forever
+ {static} int icon
+ {static} int icon_group
+ {static} int info
+ {static} int italic
+ {static} int line1
+ {static} int line3
+ {static} int normal
+ {static} int notification_background
+ {static} int notification_main_column
+ {static} int notification_main_column_container
+ {static} int right_icon
+ {static} int right_side
+ {static} int text
+ {static} int text2
+ {static} int time
+ {static} int title
- <<Create>> id()
}
class android.support.coreui.R.integer {
+ {static} int status_bar_notification_info_maxnum
- <<Create>> integer()
}
class android.support.coreui.R.layout {
+ {static} int notification_action
+ {static} int notification_action_tombstone
+ {static} int notification_template_custom_big
+ {static} int notification_template_icon_group
+ {static} int notification_template_part_chronometer
+ {static} int notification_template_part_time
- <<Create>> layout()
}
class android.support.coreui.R.string {
+ {static} int status_bar_notification_info_overflow
- <<Create>> string()
}
class android.support.coreui.R.style {
+ {static} int TextAppearance_Compat_Notification
+ {static} int TextAppearance_Compat_Notification_Info
+ {static} int TextAppearance_Compat_Notification_Line2
+ {static} int TextAppearance_Compat_Notification_Time
+ {static} int TextAppearance_Compat_Notification_Title
+ {static} int Widget_Compat_NotificationActionContainer
+ {static} int Widget_Compat_NotificationActionText
- <<Create>> style()
}
class android.support.coreui.R.styleable {
+ {static} int[] FontFamily
+ {static} int FontFamily_fontProviderAuthority
+ {static} int FontFamily_fontProviderCerts
+ {static} int FontFamily_fontProviderFetchStrategy
+ {static} int FontFamily_fontProviderFetchTimeout
+ {static} int FontFamily_fontProviderPackage
+ {static} int FontFamily_fontProviderQuery
+ {static} int[] FontFamilyFont
+ {static} int FontFamilyFont_font
+ {static} int FontFamilyFont_fontStyle
+ {static} int FontFamilyFont_fontWeight
- <<Create>> styleable()
}
class example.localservice.MyServiceWithAllowedValues {
- String restricted
+ String getRestricted()
+ void setRestricted(String)
}
abstract class org.fourthline.cling.support.connectionmanager.AbstractPeeringConnectionManagerService {
- {static} Logger log
# <<Create>> AbstractPeeringConnectionManagerService(ConnectionInfo)
# <<Create>> AbstractPeeringConnectionManagerService(ProtocolInfos,ProtocolInfos,ConnectionInfo)
# <<Create>> AbstractPeeringConnectionManagerService(PropertyChangeSupport,ProtocolInfos,ProtocolInfos,ConnectionInfo)
# int getNewConnectionId()
# void storeConnection(ConnectionInfo)
# void removeConnection(int)
+ ConnectionInfo prepareForConnection(ProtocolInfo,ServiceReference,int,String)
+ void connectionComplete(int)
+ int createConnectionWithPeer(ServiceReference,ControlPoint,Service,ProtocolInfo,ConnectionInfo.Direction)
+ void closeConnectionWithPeer(ControlPoint,Service,int)
+ void closeConnectionWithPeer(ControlPoint,Service,ConnectionInfo)
# {abstract}ConnectionInfo createConnection(int,int,ServiceReference,ConnectionInfo.Direction,ProtocolInfo)
# {abstract}void closeConnection(ConnectionInfo)
# {abstract}void peerFailure(ActionInvocation,UpnpResponse,String)
}
interface org.fourthline.cling.model.message.control.ActionMessage {
+ String getActionNamespace()
+ boolean isBodyNonEmptyString()
+ String getBodyString()
+ void setBody(String)
}
interface org.fourthline.cling.support.avtransport.impl.AVTransportStateMachine {
+ {abstract}void setTransportURI(URI,String)
+ {abstract}void setNextTransportURI(URI,String)
+ {abstract}void stop()
+ {abstract}void play(String)
+ {abstract}void pause()
+ {abstract}void record()
+ {abstract}void seek(SeekMode,String)
+ {abstract}void next()
+ {abstract}void previous()
}
class de.yaacc.databinding.ActivityContentListBinding {
- RelativeLayout rootView
+ ListView contentList
- <<Create>> ActivityContentListBinding(RelativeLayout,ListView)
+ RelativeLayout getRoot()
+ {static} ActivityContentListBinding inflate(LayoutInflater)
+ {static} ActivityContentListBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityContentListBinding bind(View)
}
class org.fourthline.cling.test.gena.OutgoingSubscriptionFailureTest {
+ void subscriptionLifecycleNetworkOff()
+ void subscriptionLifecycleMissedEvent()
# StreamResponseMessage createSubscribeResponseMessage()
# StreamResponseMessage createUnsubscribeResponseMessage()
# IncomingEventRequestMessage createEventRequestMessage(UpnpService,SubscriptionCallback,int)
}
interface org.fourthline.cling.model.ServiceManager {
+ {static} String EVENTED_STATE_VARIABLES
+ LocalService<T> getService()
+ T getImplementation()
+ void execute(Command<T>)
+ PropertyChangeSupport getPropertyChangeSupport()
+ Collection<StateVariableValue> getCurrentState()
}
class org.fourthline.cling.support.model.dlna.message.header.AvailableRangeHeader {
+ <<Create>> AvailableRangeHeader()
+ void setString(String)
+ String getString()
}
abstract class org.fourthline.cling.support.model.DIDLObject {
# String id
# String parentID
# String title
# String creator
# boolean restricted
# WriteStatus writeStatus
# Class clazz
# List<Res> resources
# List<Property> properties
# List<DescMeta> descMetadata
# <<Create>> DIDLObject()
# <<Create>> DIDLObject(DIDLObject)
# <<Create>> DIDLObject(String,String,String,String,boolean,WriteStatus,Class,List<Res>,List<Property>,List<DescMeta>)
+ String getId()
+ DIDLObject setId(String)
+ String getParentID()
+ DIDLObject setParentID(String)
+ String getTitle()
+ DIDLObject setTitle(String)
+ String getCreator()
+ DIDLObject setCreator(String)
+ boolean isRestricted()
+ DIDLObject setRestricted(boolean)
+ WriteStatus getWriteStatus()
+ DIDLObject setWriteStatus(WriteStatus)
+ Res getFirstResource()
+ List<Res> getResources()
+ DIDLObject setResources(List<Res>)
+ DIDLObject addResource(Res)
+ Class getClazz()
+ DIDLObject setClazz(Class)
+ List<Property> getProperties()
+ DIDLObject setProperties(List<Property>)
+ DIDLObject addProperty(Property)
+ DIDLObject replaceFirstProperty(Property)
+ DIDLObject replaceProperties(java.lang.Class<? extends Property>,Property[])
+ DIDLObject addProperties(Property[])
+ DIDLObject removeProperties(java.lang.Class<? extends Property>)
+ boolean hasProperty(java.lang.Class<? extends Property>)
+ Property<V> getFirstProperty(java.lang.Class<? extends Property<V>>)
+ Property<V> getLastProperty(java.lang.Class<? extends Property<V>>)
+ Property<V>[] getProperties(java.lang.Class<? extends Property<V>>)
+ Property<V>[] getPropertiesByNamespace(java.lang.Class<? extends Property.NAMESPACE>)
+ V getFirstPropertyValue(java.lang.Class<? extends Property<V>>)
+ List<V> getPropertyValues(java.lang.Class<? extends Property<V>>)
+ List<DescMeta> getDescMetadata()
+ void setDescMetadata(List<DescMeta>)
+ DIDLObject addDescMetadata(DescMeta)
+ boolean equals(Object)
+ int hashCode()
}
abstract class org.fourthline.cling.support.model.DIDLObject.Property {
- V value
- String descriptorName
- List<Property<DIDLAttribute>> attributes
# <<Create>> Property()
# <<Create>> Property(String)
# <<Create>> Property(V,String)
# <<Create>> Property(V,String,List<Property<DIDLAttribute>>)
+ V getValue()
+ void setValue(V)
+ String getDescriptorName()
+ void setOnElement(Element)
+ void addAttribute(Property<DIDLAttribute>)
+ void removeAttribute(Property<DIDLAttribute>)
+ void removeAttribute(String)
+ Property<DIDLAttribute> getAttribute(String)
+ String toString()
}
interface org.fourthline.cling.support.model.DIDLObject.Property.NAMESPACE {
}
class org.fourthline.cling.support.model.DIDLObject.Property.PropertyPersonWithRole {
+ <<Create>> PropertyPersonWithRole()
+ <<Create>> PropertyPersonWithRole(String)
+ <<Create>> PropertyPersonWithRole(PersonWithRole,String)
+ void setOnElement(Element)
}
class org.fourthline.cling.support.model.DIDLObject.Property.DC {
}
interface org.fourthline.cling.support.model.DIDLObject.Property.DC.NAMESPACE {
+ {static} String URI
}
class org.fourthline.cling.support.model.DIDLObject.Property.DC.DESCRIPTION {
+ <<Create>> DESCRIPTION()
+ <<Create>> DESCRIPTION(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.DC.PUBLISHER {
+ <<Create>> PUBLISHER()
+ <<Create>> PUBLISHER(Person)
}
class org.fourthline.cling.support.model.DIDLObject.Property.DC.CONTRIBUTOR {
+ <<Create>> CONTRIBUTOR()
+ <<Create>> CONTRIBUTOR(Person)
}
class org.fourthline.cling.support.model.DIDLObject.Property.DC.DATE {
+ <<Create>> DATE()
+ <<Create>> DATE(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.DC.LANGUAGE {
+ <<Create>> LANGUAGE()
+ <<Create>> LANGUAGE(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.DC.RELATION {
+ <<Create>> RELATION()
+ <<Create>> RELATION(URI)
}
class org.fourthline.cling.support.model.DIDLObject.Property.DC.RIGHTS {
+ <<Create>> RIGHTS()
+ <<Create>> RIGHTS(String)
}
abstract class org.fourthline.cling.support.model.DIDLObject.Property.SEC {
}
interface org.fourthline.cling.support.model.DIDLObject.Property.SEC.NAMESPACE {
+ {static} String URI
}
class org.fourthline.cling.support.model.DIDLObject.Property.SEC.CAPTIONINFOEX {
+ <<Create>> CAPTIONINFOEX()
+ <<Create>> CAPTIONINFOEX(URI)
+ <<Create>> CAPTIONINFOEX(URI,List<Property<DIDLAttribute>>)
}
class org.fourthline.cling.support.model.DIDLObject.Property.SEC.CAPTIONINFO {
+ <<Create>> CAPTIONINFO()
+ <<Create>> CAPTIONINFO(URI)
+ <<Create>> CAPTIONINFO(URI,List<Property<DIDLAttribute>>)
}
class org.fourthline.cling.support.model.DIDLObject.Property.SEC.TYPE {
+ <<Create>> TYPE()
+ <<Create>> TYPE(DIDLAttribute)
}
abstract class org.fourthline.cling.support.model.DIDLObject.Property.UPNP {
}
interface org.fourthline.cling.support.model.DIDLObject.Property.UPNP.NAMESPACE {
+ {static} String URI
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ARTIST {
+ <<Create>> ARTIST()
+ <<Create>> ARTIST(PersonWithRole)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ACTOR {
+ <<Create>> ACTOR()
+ <<Create>> ACTOR(PersonWithRole)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.AUTHOR {
+ <<Create>> AUTHOR()
+ <<Create>> AUTHOR(PersonWithRole)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.PRODUCER {
+ <<Create>> PRODUCER()
+ <<Create>> PRODUCER(Person)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.DIRECTOR {
+ <<Create>> DIRECTOR()
+ <<Create>> DIRECTOR(Person)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.GENRE {
+ <<Create>> GENRE()
+ <<Create>> GENRE(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ALBUM {
+ <<Create>> ALBUM()
+ <<Create>> ALBUM(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.PLAYLIST {
+ <<Create>> PLAYLIST()
+ <<Create>> PLAYLIST(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.REGION {
+ <<Create>> REGION()
+ <<Create>> REGION(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RATING {
+ <<Create>> RATING()
+ <<Create>> RATING(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.TOC {
+ <<Create>> TOC()
+ <<Create>> TOC(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ALBUM_ART_URI {
+ <<Create>> ALBUM_ART_URI()
+ <<Create>> ALBUM_ART_URI(URI)
+ <<Create>> ALBUM_ART_URI(URI,List<Property<DIDLAttribute>>)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ARTIST_DISCO_URI {
+ <<Create>> ARTIST_DISCO_URI()
+ <<Create>> ARTIST_DISCO_URI(URI)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.LYRICS_URI {
+ <<Create>> LYRICS_URI()
+ <<Create>> LYRICS_URI(URI)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_TOTAL {
+ <<Create>> STORAGE_TOTAL()
+ <<Create>> STORAGE_TOTAL(Long)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_USED {
+ <<Create>> STORAGE_USED()
+ <<Create>> STORAGE_USED(Long)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_FREE {
+ <<Create>> STORAGE_FREE()
+ <<Create>> STORAGE_FREE(Long)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_MAX_PARTITION {
+ <<Create>> STORAGE_MAX_PARTITION()
+ <<Create>> STORAGE_MAX_PARTITION(Long)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_MEDIUM {
+ <<Create>> STORAGE_MEDIUM()
+ <<Create>> STORAGE_MEDIUM(StorageMedium)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.LONG_DESCRIPTION {
+ <<Create>> LONG_DESCRIPTION()
+ <<Create>> LONG_DESCRIPTION(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ICON {
+ <<Create>> ICON()
+ <<Create>> ICON(URI)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RADIO_CALL_SIGN {
+ <<Create>> RADIO_CALL_SIGN()
+ <<Create>> RADIO_CALL_SIGN(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RADIO_STATION_ID {
+ <<Create>> RADIO_STATION_ID()
+ <<Create>> RADIO_STATION_ID(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RADIO_BAND {
+ <<Create>> RADIO_BAND()
+ <<Create>> RADIO_BAND(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.CHANNEL_NR {
+ <<Create>> CHANNEL_NR()
+ <<Create>> CHANNEL_NR(Integer)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.CHANNEL_NAME {
+ <<Create>> CHANNEL_NAME()
+ <<Create>> CHANNEL_NAME(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.SCHEDULED_START_TIME {
+ <<Create>> SCHEDULED_START_TIME()
+ <<Create>> SCHEDULED_START_TIME(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.SCHEDULED_END_TIME {
+ <<Create>> SCHEDULED_END_TIME()
+ <<Create>> SCHEDULED_END_TIME(String)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.DVD_REGION_CODE {
+ <<Create>> DVD_REGION_CODE()
+ <<Create>> DVD_REGION_CODE(Integer)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ORIGINAL_TRACK_NUMBER {
+ <<Create>> ORIGINAL_TRACK_NUMBER()
+ <<Create>> ORIGINAL_TRACK_NUMBER(Integer)
}
class org.fourthline.cling.support.model.DIDLObject.Property.UPNP.USER_ANNOTATION {
+ <<Create>> USER_ANNOTATION()
+ <<Create>> USER_ANNOTATION(String)
}
abstract class org.fourthline.cling.support.model.DIDLObject.Property.DLNA {
}
interface org.fourthline.cling.support.model.DIDLObject.Property.DLNA.NAMESPACE {
+ {static} String URI
}
class org.fourthline.cling.support.model.DIDLObject.Property.DLNA.PROFILE_ID {
+ <<Create>> PROFILE_ID()
+ <<Create>> PROFILE_ID(DIDLAttribute)
}
class org.fourthline.cling.support.model.DIDLObject.Class {
# String value
# String friendlyName
# boolean includeDerived
+ <<Create>> Class()
+ <<Create>> Class(String)
+ <<Create>> Class(String,String)
+ <<Create>> Class(String,String,boolean)
+ String getValue()
+ void setValue(String)
+ String getFriendlyName()
+ void setFriendlyName(String)
+ boolean isIncludeDerived()
+ void setIncludeDerived(boolean)
+ boolean equals(DIDLObject)
}
class android.support.coreutils.R {
- <<Create>> R()
}
class android.support.coreutils.R.attr {
+ {static} int font
+ {static} int fontProviderAuthority
+ {static} int fontProviderCerts
+ {static} int fontProviderFetchStrategy
+ {static} int fontProviderFetchTimeout
+ {static} int fontProviderPackage
+ {static} int fontProviderQuery
+ {static} int fontStyle
+ {static} int fontWeight
- <<Create>> attr()
}
class android.support.coreutils.R.bool {
+ {static} int abc_action_bar_embed_tabs
- <<Create>> bool()
}
class android.support.coreutils.R.color {
+ {static} int notification_action_color_filter
+ {static} int notification_icon_bg_color
+ {static} int ripple_material_light
+ {static} int secondary_text_default_material_light
- <<Create>> color()
}
class android.support.coreutils.R.dimen {
+ {static} int compat_button_inset_horizontal_material
+ {static} int compat_button_inset_vertical_material
+ {static} int compat_button_padding_horizontal_material
+ {static} int compat_button_padding_vertical_material
+ {static} int compat_control_corner_material
+ {static} int notification_action_icon_size
+ {static} int notification_action_text_size
+ {static} int notification_big_circle_margin
+ {static} int notification_content_margin_start
+ {static} int notification_large_icon_height
+ {static} int notification_large_icon_width
+ {static} int notification_main_column_padding_top
+ {static} int notification_media_narrow_margin
+ {static} int notification_right_icon_size
+ {static} int notification_right_side_padding_top
+ {static} int notification_small_icon_background_padding
+ {static} int notification_small_icon_size_as_large
+ {static} int notification_subtext_size
+ {static} int notification_top_pad
+ {static} int notification_top_pad_large_text
- <<Create>> dimen()
}
class android.support.coreutils.R.drawable {
+ {static} int notification_action_background
+ {static} int notification_bg
+ {static} int notification_bg_low
+ {static} int notification_bg_low_normal
+ {static} int notification_bg_low_pressed
+ {static} int notification_bg_normal
+ {static} int notification_bg_normal_pressed
+ {static} int notification_icon_background
+ {static} int notification_template_icon_bg
+ {static} int notification_template_icon_low_bg
+ {static} int notification_tile_bg
+ {static} int notify_panel_notification_icon_bg
- <<Create>> drawable()
}
class android.support.coreutils.R.id {
+ {static} int action_container
+ {static} int action_divider
+ {static} int action_image
+ {static} int action_text
+ {static} int actions
+ {static} int async
+ {static} int blocking
+ {static} int chronometer
+ {static} int forever
+ {static} int icon
+ {static} int icon_group
+ {static} int info
+ {static} int italic
+ {static} int line1
+ {static} int line3
+ {static} int normal
+ {static} int notification_background
+ {static} int notification_main_column
+ {static} int notification_main_column_container
+ {static} int right_icon
+ {static} int right_side
+ {static} int text
+ {static} int text2
+ {static} int time
+ {static} int title
- <<Create>> id()
}
class android.support.coreutils.R.integer {
+ {static} int status_bar_notification_info_maxnum
- <<Create>> integer()
}
class android.support.coreutils.R.layout {
+ {static} int notification_action
+ {static} int notification_action_tombstone
+ {static} int notification_template_custom_big
+ {static} int notification_template_icon_group
+ {static} int notification_template_part_chronometer
+ {static} int notification_template_part_time
- <<Create>> layout()
}
class android.support.coreutils.R.string {
+ {static} int status_bar_notification_info_overflow
- <<Create>> string()
}
class android.support.coreutils.R.style {
+ {static} int TextAppearance_Compat_Notification
+ {static} int TextAppearance_Compat_Notification_Info
+ {static} int TextAppearance_Compat_Notification_Line2
+ {static} int TextAppearance_Compat_Notification_Time
+ {static} int TextAppearance_Compat_Notification_Title
+ {static} int Widget_Compat_NotificationActionContainer
+ {static} int Widget_Compat_NotificationActionText
- <<Create>> style()
}
class android.support.coreutils.R.styleable {
+ {static} int[] FontFamily
+ {static} int FontFamily_fontProviderAuthority
+ {static} int FontFamily_fontProviderCerts
+ {static} int FontFamily_fontProviderFetchStrategy
+ {static} int FontFamily_fontProviderFetchTimeout
+ {static} int FontFamily_fontProviderPackage
+ {static} int FontFamily_fontProviderQuery
+ {static} int[] FontFamilyFont
+ {static} int FontFamilyFont_font
+ {static} int FontFamilyFont_fontStyle
+ {static} int FontFamilyFont_fontWeight
- <<Create>> styleable()
}
class de.yaacc.util.image.ImageDownloadTask {
- ImageView imageView
- IconDownloadCacheHandler cache
+ <<Create>> ImageDownloadTask(ImageView)
# Bitmap doInBackground(Uri)
# void onPostExecute(Bitmap)
}
class example.mediarenderer.MyRendererNoMediaPresent {
+ <<Create>> MyRendererNoMediaPresent(AVTransport)
+ Class<? extends AbstractState> setTransportURI(URI,String)
}
class org.fourthline.cling.model.UserConstants {
+ {static} String PRODUCT_TOKEN_NAME
+ {static} String PRODUCT_TOKEN_VERSION
+ {static} int DEFAULT_SUBSCRIPTION_DURATION_SECONDS
}
class org.fourthline.cling.support.model.DIDLContent {
+ {static} String NAMESPACE_URI
+ {static} String DESC_WRAPPER_NAMESPACE_URI
# List<Container> containers
# List<Item> items
# List<DescMeta> descMetadata
+ Container getFirstContainer()
+ DIDLContent addContainer(Container)
+ List<Container> getContainers()
+ void setContainers(List<Container>)
+ DIDLContent addObject(Object)
+ DIDLContent addItem(Item)
+ List<Item> getItems()
+ void setItems(List<Item>)
+ DIDLContent addDescMetadata(DescMeta)
+ List<DescMeta> getDescMetadata()
+ void setDescMetadata(List<DescMeta>)
+ void replaceGenericContainerAndItems()
# List<Item> replaceGenericItems(List<Item>)
# List<Container> replaceGenericContainers(List<Container>)
+ long getCount()
}
class de.yaacc.databinding.ActivityYaaccUpnpServerControlBinding {
- RelativeLayout rootView
+ Space Separator
+ CheckBox providerEnabled
+ CheckBox receiverEnabled
+ Button startServer
+ Button stopServer
- <<Create>> ActivityYaaccUpnpServerControlBinding(RelativeLayout,Space,CheckBox,CheckBox,Button,Button)
+ RelativeLayout getRoot()
+ {static} ActivityYaaccUpnpServerControlBinding inflate(LayoutInflater)
+ {static} ActivityYaaccUpnpServerControlBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityYaaccUpnpServerControlBinding bind(View)
}
class org.fourthline.cling.support.model.dlna.message.header.BufferBytesHeader {
+ <<Create>> BufferBytesHeader()
+ void setString(String)
+ String getString()
}
class de.yaacc.browser.BrowseReceiverDeviceClickListener {
+ void onItemClick(AdapterView<?>,View,int,long)
}
class org.fourthline.cling.support.model.dlna.message.header.TransferModeHeader {
+ <<Create>> TransferModeHeader()
+ <<Create>> TransferModeHeader(Type)
+ void setString(String)
+ String getString()
}
enum org.fourthline.cling.support.model.dlna.message.header.Type {
+  Streaming
+  Interactive
+  Background
}
class org.seamless.statemachine.StateMachineBuilder {
+ {static} T build(Class<T>,Class)
+ {static} T build(Class<T>,Class,Class[],Object[])
}
interface org.fourthline.cling.protocol.ProtocolFactory {
+ UpnpService getUpnpService()
+ ReceivingAsync createReceivingAsync(IncomingDatagramMessage)
+ ReceivingSync createReceivingSync(StreamRequestMessage)
+ SendingNotificationAlive createSendingNotificationAlive(LocalDevice)
+ SendingNotificationByebye createSendingNotificationByebye(LocalDevice)
+ SendingSearch createSendingSearch(UpnpHeader,int)
+ SendingAction createSendingAction(ActionInvocation,URL)
+ SendingSubscribe createSendingSubscribe(RemoteGENASubscription)
+ SendingRenewal createSendingRenewal(RemoteGENASubscription)
+ SendingUnsubscribe createSendingUnsubscribe(RemoteGENASubscription)
+ SendingEvent createSendingEvent(LocalGENASubscription)
}
class de.yaacc.databinding.AboutBinding {
- LinearLayout rootView
+ TextView aboutDescrip
- <<Create>> AboutBinding(LinearLayout,TextView)
+ LinearLayout getRoot()
+ {static} AboutBinding inflate(LayoutInflater)
+ {static} AboutBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} AboutBinding bind(View)
}
class de.yaacc.musicplayer.BackgroundMusicBroadcastReceiver {
+ {static} String ACTION_PLAY
+ {static} String ACTION_STOP
+ {static} String ACTION_PAUSE
+ {static} String ACTION_SET_DATA
+ {static} String ACTION_SET_DATA_URI_PARAM
+ {static} String ACTION_SEEK_TO
+ {static} String ACTION_SEEK_TO_PARAM
- BackgroundMusicService backgroundMusicService
+ <<Create>> BackgroundMusicBroadcastReceiver(BackgroundMusicService)
+ void onReceive(Context,Intent)
+ void registerReceiver()
}
class de.yaacc.upnp.server.avtransport.YaaccAVTransportService {
- UpnpClient upnpClient
- Map<Long,AVTransportStateMachine> stateMachines
~ Class<? extends AVTransportStateMachine> stateMachineDefinition
~ Class<? extends AbstractState> initialState
~ Class<? extends AVTransport> transportClass
- LastChange lastChange
# PropertyChangeSupport propertyChangeSupport
# <<Create>> YaaccAVTransportService()
# <<Create>> YaaccAVTransportService(LastChange)
# <<Create>> YaaccAVTransportService(PropertyChangeSupport)
# <<Create>> YaaccAVTransportService(PropertyChangeSupport,LastChange)
# <<Create>> YaaccAVTransportService(Class<? extends AVTransportStateMachine>,Class<? extends AbstractState>)
# <<Create>> YaaccAVTransportService(Class<? extends AVTransportStateMachine>,Class<? extends AbstractState>,Class<? extends AVTransport>)
+ <<Create>> YaaccAVTransportService(UpnpClient)
+ LastChange getLastChange()
+ void appendCurrentState(LastChange,UnsignedIntegerFourBytes)
+ PropertyChangeSupport getPropertyChangeSupport()
+ {static} UnsignedIntegerFourBytes getDefaultInstanceID()
# AVTransportStateMachine createStateMachine(UnsignedIntegerFourBytes)
+ SyncOffset getSyncOffset(UnsignedIntegerFourBytes)
+ void setSyncOffset(UnsignedIntegerFourBytes,String)
+ void adjustSyncOffset(UnsignedIntegerFourBytes,String)
+ void syncPlay(UnsignedIntegerFourBytes,String,String,String,String,String)
+ void syncStop(UnsignedIntegerFourBytes,String,String)
+ void syncPause(UnsignedIntegerFourBytes,String,String)
+ String getCurrentTransportActionsString(UnsignedIntegerFourBytes)
# TransportAction[] getPossibleTransportActions(UnsignedIntegerFourBytes)
+ void setAVTransportURI(UnsignedIntegerFourBytes,String,String)
+ void setNextAVTransportURI(UnsignedIntegerFourBytes,String,String)
+ void setPlayMode(UnsignedIntegerFourBytes,String)
+ void setRecordQualityMode(UnsignedIntegerFourBytes,String)
+ MediaInfo getMediaInfo(UnsignedIntegerFourBytes)
+ TransportInfo getTransportInfo(UnsignedIntegerFourBytes)
+ PositionInfo getPositionInfo(UnsignedIntegerFourBytes)
+ DeviceCapabilities getDeviceCapabilities(UnsignedIntegerFourBytes)
+ TransportSettings getTransportSettings(UnsignedIntegerFourBytes)
+ void stop(UnsignedIntegerFourBytes)
+ void play(UnsignedIntegerFourBytes,String)
+ void pause(UnsignedIntegerFourBytes)
+ void record(UnsignedIntegerFourBytes)
+ void seek(UnsignedIntegerFourBytes,String,String)
+ void next(UnsignedIntegerFourBytes)
+ void previous(UnsignedIntegerFourBytes)
# org.fourthline.cling.support.model.TransportAction[] getCurrentTransportActions(UnsignedIntegerFourBytes)
+ UnsignedIntegerFourBytes[] getCurrentInstanceIds()
# AVTransportStateMachine findStateMachine(UnsignedIntegerFourBytes)
# AVTransportStateMachine findStateMachine(UnsignedIntegerFourBytes,boolean)
}
class org.fourthline.cling.support.model.Res {
# URI importUri
# ProtocolInfo protocolInfo
# Long size
# String duration
# Long bitrate
# Long sampleFrequency
# Long bitsPerSample
# Long nrAudioChannels
# Long colorDepth
# String protection
# String resolution
# String value
+ <<Create>> Res()
+ <<Create>> Res(String,Long,String,Long,String)
+ <<Create>> Res(MimeType,Long,String,Long,String)
+ <<Create>> Res(MimeType,Long,String)
+ <<Create>> Res(ProtocolInfo,Long,String)
+ <<Create>> Res(ProtocolInfo,Long,String,Long,String)
+ <<Create>> Res(URI,ProtocolInfo,Long,String,Long,Long,Long,Long,Long,String,String,String)
+ URI getImportUri()
+ void setImportUri(URI)
+ ProtocolInfo getProtocolInfo()
+ void setProtocolInfo(ProtocolInfo)
+ Long getSize()
+ void setSize(Long)
+ String getDuration()
+ void setDuration(String)
+ Long getBitrate()
+ void setBitrate(Long)
+ Long getSampleFrequency()
+ void setSampleFrequency(Long)
+ Long getBitsPerSample()
+ void setBitsPerSample(Long)
+ Long getNrAudioChannels()
+ void setNrAudioChannels(Long)
+ Long getColorDepth()
+ void setColorDepth(Long)
+ String getProtection()
+ void setProtection(String)
+ String getResolution()
+ void setResolution(String)
+ void setResolution(int,int)
+ int getResolutionX()
+ int getResolutionY()
+ String getValue()
+ void setValue(String)
}
class de.yaacc.browser.ContentListClickListener {
+ {static} DIDLObject currentObject
- ContentListFragment contentListFragment
- UpnpClient upnpClient
- Navigator navigator
+ <<Create>> ContentListClickListener(UpnpClient,ContentListFragment)
+ void onItemClick(AdapterView<?>,View,int,long)
+ void playCurrent()
+ void playAll()
+ boolean onContextItemSelected(DIDLObject,MenuItem,Context)
- void play(List<Player>)
}
abstract class de.yaacc.upnp.callback.avtransport.AdjustSyncOffset {
- {static} Logger log
+ <<Create>> AdjustSyncOffset(UnsignedIntegerFourBytes,Service,String)
+ void success(ActionInvocation)
}
class org.fourthline.cling.support.contentdirectory.DIDLParser {
- {static} Logger log
+ {static} String UNKNOWN_TITLE
+ DIDLContent parseResource(String)
+ DIDLContent parse(String)
# RootHandler createRootHandler(DIDLContent,SAXParser)
# ContainerHandler createContainerHandler(Container,Handler)
# ItemHandler createItemHandler(Item,Handler)
# ResHandler createResHandler(Res,Handler)
# DescMetaHandler createDescMetaHandler(DescMeta,Handler)
# Container createContainer(Attributes)
# Item createItem(Attributes)
# Res createResource(Attributes)
- Long toLongOrNull(String)
# DescMeta createDescMeta(Attributes)
+ String generate(DIDLContent)
+ String generate(DIDLContent,boolean)
# String documentToString(Document,boolean)
# Document buildDOM(DIDLContent,boolean)
# void generateRoot(DIDLContent,Document,boolean)
# void generateContainer(Container,Document,Element,boolean)
# void generateItem(Item,Document,Element)
# void generateResource(Res,Document,Element)
# void generateDescMetadata(DescMeta,Document,Element)
# void populateDescMetadata(Element,DescMeta)
# void appendProperties(Document,Element,DIDLObject,String,Class<? extends DIDLObject.Property.NAMESPACE>,String)
# void appendClass(Document,Element,DIDLObject.Class,String,boolean)
# String booleanToInt(boolean)
+ void debugXML(String)
}
abstract class org.fourthline.cling.support.contentdirectory.DIDLParser.DIDLObjectHandler {
# <<Create>> DIDLObjectHandler(I,Handler)
+ void endElement(String,String,String)
}
class org.fourthline.cling.support.contentdirectory.DIDLParser.RootHandler {
~ <<Create>> RootHandler(DIDLContent,SAXParser)
+ void startElement(String,String,String,Attributes)
# boolean isLastElement(String,String,String)
}
class org.fourthline.cling.support.contentdirectory.DIDLParser.ContainerHandler {
+ <<Create>> ContainerHandler(Container,Handler)
+ void startElement(String,String,String,Attributes)
+ void endElement(String,String,String)
# boolean isLastElement(String,String,String)
}
class org.fourthline.cling.support.contentdirectory.DIDLParser.ItemHandler {
+ <<Create>> ItemHandler(Item,Handler)
+ void startElement(String,String,String,Attributes)
# boolean isLastElement(String,String,String)
}
class org.fourthline.cling.support.contentdirectory.DIDLParser.ResHandler {
+ <<Create>> ResHandler(Res,Handler)
+ void endElement(String,String,String)
# boolean isLastElement(String,String,String)
}
class org.fourthline.cling.support.contentdirectory.DIDLParser.DescMetaHandler {
# Element current
+ <<Create>> DescMetaHandler(DescMeta,Handler)
+ DescMeta<Document> getInstance()
+ void startElement(String,String,String,Attributes)
+ void endElement(String,String,String)
# boolean isLastElement(String,String,String)
}
class org.seamless.util.Exceptions {
+ {static} Throwable unwrap(Throwable)
}
class org.fourthline.cling.support.model.DIDLAttribute {
- String namespaceURI
- String prefix
- String value
+ <<Create>> DIDLAttribute(String,String,String)
+ String getNamespaceURI()
+ String getPrefix()
+ String getValue()
}
class org.fourthline.cling.model.message.discovery.IncomingNotificationRequest {
+ <<Create>> IncomingNotificationRequest(IncomingDatagramMessage<UpnpRequest>)
+ boolean isAliveMessage()
+ boolean isByeByeMessage()
+ URL getLocationURL()
+ UDN getUDN()
+ Integer getMaxAge()
+ byte[] getInterfaceMacHeader()
}
interface org.fourthline.cling.transport.spi.NetworkAddressFactory {
+ {static} String SYSTEM_PROPERTY_NET_IFACES
+ {static} String SYSTEM_PROPERTY_NET_ADDRESSES
+ InetAddress getMulticastGroup()
+ int getMulticastPort()
+ int getStreamListenPort()
+ Iterator<NetworkInterface> getNetworkInterfaces()
+ Iterator<InetAddress> getBindAddresses()
+ boolean hasUsableNetwork()
+ Short getAddressNetworkPrefixLength(InetAddress)
+ byte[] getHardwareAddress(InetAddress)
+ InetAddress getBroadcastAddress(InetAddress)
+ InetAddress getLocalAddress(NetworkInterface,boolean,InetAddress)
+ void logInterfaceInformation()
}
class org.fourthline.cling.protocol.sync.SendingSubscribe {
- {static} Logger log
# RemoteGENASubscription subscription
+ <<Create>> SendingSubscribe(UpnpService,RemoteGENASubscription,List<NetworkAddress>)
# IncomingSubscribeResponseMessage executeSync()
# void onSubscriptionFailure()
}
abstract class org.fourthline.cling.support.connectionmanager.callback.GetCurrentConnectionInfo {
+ <<Create>> GetCurrentConnectionInfo(Service,int)
# <<Create>> GetCurrentConnectionInfo(Service,ControlPoint,int)
+ void success(ActionInvocation)
+ {abstract}void received(ActionInvocation,ConnectionInfo)
}
class org.fourthline.cling.transport.DisableRouter {
}
class org.fourthline.cling.model.types.csv.CSVDate {
+ <<Create>> CSVDate()
+ <<Create>> CSVDate(String)
}
class de.yaacc.databinding.ActivityMultiContentPlayerBinding {
- RelativeLayout rootView
+ ImageButton multiContentPlayerActivityControlExit
+ ImageButton multiContentPlayerActivityControlNext
+ ImageButton multiContentPlayerActivityControlPause
+ ImageButton multiContentPlayerActivityControlPlay
+ ImageButton multiContentPlayerActivityControlPrev
+ ImageButton multiContentPlayerActivityControlStop
+ RelativeLayout multiContentPlayerActivityControls
+ ImageView multiContentPlayerActivityImageView
- <<Create>> ActivityMultiContentPlayerBinding(RelativeLayout,ImageButton,ImageButton,ImageButton,ImageButton,ImageButton,ImageButton,RelativeLayout,ImageView)
+ RelativeLayout getRoot()
+ {static} ActivityMultiContentPlayerBinding inflate(LayoutInflater)
+ {static} ActivityMultiContentPlayerBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityMultiContentPlayerBinding bind(View)
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlLastChangeParser {
+ {static} String NAMESPACE_URI
+ {static} String SCHEMA_RESOURCE
# String getNamespace()
# Source[] getSchemaSources()
# Set<Class<? extends EventedValue>> getEventedVariables()
}
class org.fourthline.cling.model.meta.QueryStateVariableAction {
+ {static} String INPUT_ARG_VAR_NAME
+ {static} String OUTPUT_ARG_RETURN
+ {static} String ACTION_NAME
+ {static} String VIRTUAL_STATEVARIABLE_INPUT
+ {static} String VIRTUAL_STATEVARIABLE_OUTPUT
+ <<Create>> QueryStateVariableAction()
+ <<Create>> QueryStateVariableAction(S)
+ String getName()
+ List<ValidationError> validate()
}
interface org.fourthline.cling.model.Constants {
+ {static} String SYSTEM_PROPERTY_ANNOUNCE_MAC_ADDRESS
+ {static} int UPNP_MULTICAST_PORT
+ {static} String IPV4_UPNP_MULTICAST_GROUP
+ {static} String IPV6_UPNP_LINK_LOCAL_ADDRESS
+ {static} String IPV6_UPNP_SUBNET_ADDRESS
+ {static} String IPV6_UPNP_ADMINISTRATIVE_ADDRESS
+ {static} String IPV6_UPNP_SITE_LOCAL_ADDRESS
+ {static} String IPV6_UPNP_GLOBAL_ADDRESS
+ {static} int MIN_ADVERTISEMENT_AGE_SECONDS
+ {static} String REGEX_NAMESPACE
+ {static} String REGEX_TYPE
+ {static} String REGEX_ID
+ {static} String REGEX_UDA_NAME
+ {static} String SOAP_NS_ENVELOPE
+ {static} String SOAP_URI_ENCODING_STYLE
+ {static} String NS_UPNP_CONTROL_10
+ {static} String NS_UPNP_EVENT_10
+ {static} String ARG_TYPE_PREFIX
}
class org.fourthline.cling.model.resource.IconResource {
+ <<Create>> IconResource(URI,Icon)
}
class example.mediarenderer.AVTransportTest {
+ void testCustomPlayer()
}
interface de.yaacc.player.Player {
~ void next()
~ void previous()
~ void pause()
~ void play()
~ void stop()
~ void setItems(PlayableItem)
~ void clear()
~ void onDestroy()
~ void setName(String)
~ String getName()
~ void exit()
~ int getId()
~ void addPropertyChangeListener(PropertyChangeListener)
~ void removePropertyChangeListener(PropertyChangeListener)
~ String getPositionString()
~ String getCurrentItemTitle()
~ String getNextItemTitle()
~ String getDuration()
~ String getElapsedTime()
~ URI getAlbumArt()
~ void setSyncInfo(SynchronizationInfo)
~ SynchronizationInfo getSyncInfo()
~ boolean getMute()
~ void setMute(boolean)
~ void setVolume(int)
+ int getVolume()
~ int getIconResourceId()
~ String getDeviceId()
~ PendingIntent getNotificationIntent()
~ void seekTo(long)
}
class org.fourthline.cling.test.resources.InvalidUDA10DeviceDescriptorParsingTest {
+ {static} Object[][] strict()
+ {static} Object[][] recoverable()
+ {static} Object[][] unrecoverable()
+ void readFailure(String)
+ void readRecoveringFailure(String)
+ void readDefault(String)
+ void readSAX(String)
+ void readRecoveringStrict(String)
# void readDevice(String,UpnpService)
}
class de.yaacc.upnp.server.contentdirectory.YaaccContentDirectory {
+ {static} String CAPS_WILDCARD
- {static} Pattern IPV4_PATTERN
- CSV<String> searchCapabilities
- CSV<String> sortCapabilities
- PropertyChangeSupport propertyChangeSupport
- Map<String,DIDLObject> content
- Context context
- SharedPreferences preferences
- UnsignedIntegerFourBytes systemUpdateID
+ <<Create>> YaaccContentDirectory(Context)
- boolean isUsingTestContent()
+ Context getContext()
- void createTestContentDirectory()
- List<MusicTrack> createMusicTracks(String)
- List<Photo> createPhotos(String)
+ CSV<String> getSearchCapabilities()
+ CSV<String> getSortCapabilities()
+ UnsignedIntegerFourBytes getSystemUpdateID()
+ PropertyChangeSupport getPropertyChangeSupport()
# void changeSystemUpdateID()
- void addContent(String,DIDLObject)
+ BrowseResult browse(String,String,String,UnsignedIntegerFourBytes,UnsignedIntegerFourBytes,String)
+ BrowseResult browse(String,BrowseFlag,String,long,long,SortCriterion[])
- ContentBrowser findBrowserFor(String)
+ String getIpAddress()
+ String formatDuration(String)
}
class org.fourthline.cling.support.model.item.PlaylistItem {
+ {static} Class CLASS
+ <<Create>> PlaylistItem()
+ <<Create>> PlaylistItem(Item)
+ <<Create>> PlaylistItem(String,Container,String,String,Res)
+ <<Create>> PlaylistItem(String,String,String,String,Res)
+ PersonWithRole getFirstArtist()
+ PersonWithRole[] getArtists()
+ PlaylistItem setArtists(PersonWithRole[])
+ String getFirstGenre()
+ String[] getGenres()
+ PlaylistItem setGenres(String[])
+ String getDescription()
+ PlaylistItem setDescription(String)
+ String getLongDescription()
+ PlaylistItem setLongDescription(String)
+ String getLanguage()
+ PlaylistItem setLanguage(String)
+ StorageMedium getStorageMedium()
+ PlaylistItem setStorageMedium(StorageMedium)
+ String getDate()
+ PlaylistItem setDate(String)
}
class de.yaacc.upnp.server.contentdirectory.MusicAlbumItemBrowser {
+ <<Create>> MusicAlbumItemBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
class org.fourthline.cling.support.model.dlna.message.header.MaxPrateHeader {
+ <<Create>> MaxPrateHeader()
+ void setString(String)
+ String getString()
}
abstract class org.fourthline.cling.support.contentdirectory.callback.Browse {
+ {static} String CAPS_WILDCARD
- {static} Logger log
+ <<Create>> Browse(Service,String,BrowseFlag)
+ <<Create>> Browse(Service,String,BrowseFlag,String,long,Long,SortCriterion)
+ void run()
+ void success(ActionInvocation)
+ long getDefaultMaxResults()
+ boolean receivedRaw(ActionInvocation,BrowseResult)
+ {abstract}void received(ActionInvocation,DIDLContent)
+ {abstract}void updateStatus(Status)
}
enum org.fourthline.cling.support.contentdirectory.callback.Status {
+  NO_CONTENT
+  LOADING
+  OK
- String defaultMessage
~ <<Create>> Status(String)
+ String getDefaultMessage()
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable {
+ {static} Set<Class<? extends EventedValue>> ALL
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.PresetNameList {
+ <<Create>> PresetNameList(String)
+ <<Create>> PresetNameList(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Brightness {
+ <<Create>> Brightness(UnsignedIntegerTwoBytes)
+ <<Create>> Brightness(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Contrast {
+ <<Create>> Contrast(UnsignedIntegerTwoBytes)
+ <<Create>> Contrast(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Sharpness {
+ <<Create>> Sharpness(UnsignedIntegerTwoBytes)
+ <<Create>> Sharpness(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.RedVideoGain {
+ <<Create>> RedVideoGain(UnsignedIntegerTwoBytes)
+ <<Create>> RedVideoGain(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.BlueVideoGain {
+ <<Create>> BlueVideoGain(UnsignedIntegerTwoBytes)
+ <<Create>> BlueVideoGain(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.GreenVideoGain {
+ <<Create>> GreenVideoGain(UnsignedIntegerTwoBytes)
+ <<Create>> GreenVideoGain(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.RedVideoBlackLevel {
+ <<Create>> RedVideoBlackLevel(UnsignedIntegerTwoBytes)
+ <<Create>> RedVideoBlackLevel(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.BlueVideoBlackLevel {
+ <<Create>> BlueVideoBlackLevel(UnsignedIntegerTwoBytes)
+ <<Create>> BlueVideoBlackLevel(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.GreenVideoBlackLevel {
+ <<Create>> GreenVideoBlackLevel(UnsignedIntegerTwoBytes)
+ <<Create>> GreenVideoBlackLevel(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.ColorTemperature {
+ <<Create>> ColorTemperature(UnsignedIntegerTwoBytes)
+ <<Create>> ColorTemperature(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.HorizontalKeystone {
+ <<Create>> HorizontalKeystone(Short)
+ <<Create>> HorizontalKeystone(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.VerticalKeystone {
+ <<Create>> VerticalKeystone(Short)
+ <<Create>> VerticalKeystone(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Mute {
+ <<Create>> Mute(ChannelMute)
+ <<Create>> Mute(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.VolumeDB {
+ <<Create>> VolumeDB(ChannelVolumeDB)
+ <<Create>> VolumeDB(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Volume {
+ <<Create>> Volume(ChannelVolume)
+ <<Create>> Volume(Map.Entry<String,String>[])
}
class org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Loudness {
+ <<Create>> Loudness(ChannelLoudness)
+ <<Create>> Loudness(Map.Entry<String,String>[])
}
abstract class org.fourthline.cling.support.messagebox.AddMessage {
# MimeType mimeType
+ <<Create>> AddMessage(Service,Message)
}
class org.fourthline.cling.model.message.header.MaxAgeHeader {
+ {static} Pattern MAX_AGE_REGEX
+ <<Create>> MaxAgeHeader(Integer)
+ <<Create>> MaxAgeHeader()
+ void setString(String)
+ String getString()
}
class de.yaacc.databinding.YaaccProgressDialogBinding {
- LinearLayout rootView
+ ProgressBar dialogProgressBar
- <<Create>> YaaccProgressDialogBinding(LinearLayout,ProgressBar)
+ LinearLayout getRoot()
+ {static} YaaccProgressDialogBinding inflate(LayoutInflater)
+ {static} YaaccProgressDialogBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} YaaccProgressDialogBinding bind(View)
}
class de.yaacc.player.MusicPlayerActivity {
# boolean updateTime
# SeekBar seekBar
- PlayerService playerService
+ void onServiceConnected(ComponentName,IBinder)
+ void onServiceDisconnected(ComponentName)
# void initialize()
# void onPause()
# void onRestart()
# void onResume()
# void onDestroy()
# void onCreate(Bundle)
- Player getPlayer()
+ boolean onCreateOptionsMenu(Menu)
+ boolean onOptionsItemSelected(MenuItem)
- void exit()
- void setTrackInfo()
- void doSetTrackInfo()
- void updateTime()
}
class org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl {
- {static} Logger log
+ D describe(D,String)
}
class org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.RootHandler {
+ <<Create>> RootHandler(MutableDevice,SAXParser)
+ void startElement(ELEMENT,Attributes)
+ void endElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.SpecVersionHandler {
+ {static} ELEMENT EL
+ <<Create>> SpecVersionHandler(MutableUDAVersion,DeviceDescriptorHandler)
+ void endElement(ELEMENT)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.DeviceHandler {
+ {static} ELEMENT EL
+ <<Create>> DeviceHandler(MutableDevice,DeviceDescriptorHandler)
+ void startElement(ELEMENT,Attributes)
+ void endElement(ELEMENT)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.IconListHandler {
+ {static} ELEMENT EL
+ <<Create>> IconListHandler(List<MutableIcon>,DeviceDescriptorHandler)
+ void startElement(ELEMENT,Attributes)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.IconHandler {
+ {static} ELEMENT EL
+ <<Create>> IconHandler(MutableIcon,DeviceDescriptorHandler)
+ void endElement(ELEMENT)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.ServiceListHandler {
+ {static} ELEMENT EL
+ <<Create>> ServiceListHandler(List<MutableService>,DeviceDescriptorHandler)
+ void startElement(ELEMENT,Attributes)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.ServiceHandler {
+ {static} ELEMENT EL
+ <<Create>> ServiceHandler(MutableService,DeviceDescriptorHandler)
+ void endElement(ELEMENT)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.DeviceListHandler {
+ {static} ELEMENT EL
+ <<Create>> DeviceListHandler(List<MutableDevice>,DeviceDescriptorHandler)
+ void startElement(ELEMENT,Attributes)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.DeviceDescriptorHandler {
+ <<Create>> DeviceDescriptorHandler(I)
+ <<Create>> DeviceDescriptorHandler(I,SAXParser)
+ <<Create>> DeviceDescriptorHandler(I,DeviceDescriptorHandler)
+ <<Create>> DeviceDescriptorHandler(I,SAXParser,DeviceDescriptorHandler)
+ void startElement(String,String,String,Attributes)
+ void endElement(String,String,String)
# boolean isLastElement(String,String,String)
+ void startElement(ELEMENT,Attributes)
+ void endElement(ELEMENT)
+ boolean isLastElement(ELEMENT)
}
class org.fourthline.cling.support.model.dlna.message.header.AvailableSeekRangeHeader {
+ <<Create>> AvailableSeekRangeHeader()
+ <<Create>> AvailableSeekRangeHeader(AvailableSeekRangeType)
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.support.model.ProtocolInfos {
+ <<Create>> ProtocolInfos(ProtocolInfo)
+ <<Create>> ProtocolInfos(String)
+ String toString()
}
class org.fourthline.cling.registry.RegistryItem {
- K key
- I item
- ExpirationDetails expirationDetails
~ <<Create>> RegistryItem(K)
~ <<Create>> RegistryItem(K,I,int)
+ K getKey()
+ I getItem()
+ ExpirationDetails getExpirationDetails()
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
class org.fourthline.cling.test.data.SampleDeviceEmbeddedTwo {
+ <<Create>> SampleDeviceEmbeddedTwo(DeviceIdentity,Service,Device)
+ DeviceType getDeviceType()
+ DeviceDetails getDeviceDetails()
+ DeviceDetailsProvider getDeviceDetailsProvider()
+ Icon[] getIcons()
+ {static} UDN getEmbeddedTwoUDN()
}
class org.fourthline.cling.model.message.control.IncomingActionRequestMessage {
- Action action
- String actionNamespace
+ <<Create>> IncomingActionRequestMessage(StreamRequestMessage,LocalService)
+ Action getAction()
+ String getActionNamespace()
}
abstract class org.fourthline.cling.support.avtransport.callback.Pause {
- {static} Logger log
# <<Create>> Pause(ActionInvocation,ControlPoint)
# <<Create>> Pause(ActionInvocation)
+ <<Create>> Pause(Service)
+ <<Create>> Pause(UnsignedIntegerFourBytes,Service)
+ void success(ActionInvocation)
}
class org.fourthline.cling.transport.impl.GENAEventProcessorImpl {
- {static} Logger log
# DocumentBuilderFactory createDocumentBuilderFactory()
+ void writeBody(OutgoingEventRequestMessage)
+ void readBody(IncomingEventRequestMessage)
# Element writePropertysetElement(Document)
# Element readPropertysetElement(Document)
# void writeProperties(Document,Element,OutgoingEventRequestMessage)
# void readProperties(Element,IncomingEventRequestMessage)
# String getMessageBody(UpnpMessage)
# String toString(Document)
# String getUnprefixedNodeName(Node)
+ void warning(SAXParseException)
+ void error(SAXParseException)
+ void fatalError(SAXParseException)
}
class org.fourthline.cling.test.model.DatatypesTest {
+ void upperLowerCase()
+ void validUnsignedIntegers()
+ void invalidUnsignedIntegersOne()
+ void invalidUnsignedIntegersTwo()
+ void signedIntegers()
+ void dateAndTime()
+ void dateAndTimeWithZone()
+ void time()
+ void timeWithZone()
+ void base64()
+ void simpleCSV()
+ void parseDLNADoc()
+ void caseSensitivity()
+ void valueOfDouble()
+ void valueOfFloat()
}
class org.fourthline.cling.model.message.control.OutgoingActionResponseMessage {
- String actionNamespace
+ <<Create>> OutgoingActionResponseMessage(Action)
+ <<Create>> OutgoingActionResponseMessage(UpnpResponse.Status)
+ <<Create>> OutgoingActionResponseMessage(UpnpResponse.Status,Action)
# void addHeaders()
+ String getActionNamespace()
}
class example.mediarenderer.MyRendererPlaying {
+ <<Create>> MyRendererPlaying(AVTransport)
+ void onEntry()
+ Class<? extends AbstractState> setTransportURI(URI,String)
+ Class<? extends AbstractState> stop()
+ Class<? extends AbstractState> play(String)
+ Class<? extends AbstractState> pause()
+ Class<? extends AbstractState> next()
+ Class<? extends AbstractState> previous()
+ Class<? extends AbstractState> seek(SeekMode,String)
}
class org.fourthline.cling.support.model.item.TextItem {
+ {static} Class CLASS
+ <<Create>> TextItem()
+ <<Create>> TextItem(Item)
+ <<Create>> TextItem(String,Container,String,String,Res)
+ <<Create>> TextItem(String,String,String,String,Res)
+ PersonWithRole getFirstAuthor()
+ PersonWithRole[] getAuthors()
+ TextItem setAuthors(PersonWithRole[])
+ String getDescription()
+ TextItem setDescription(String)
+ String getLongDescription()
+ TextItem setLongDescription(String)
+ String getLanguage()
+ TextItem setLanguage(String)
+ StorageMedium getStorageMedium()
+ TextItem setStorageMedium(StorageMedium)
+ String getDate()
+ TextItem setDate(String)
+ URI getFirstRelation()
+ URI[] getRelations()
+ TextItem setRelations(URI[])
+ String getFirstRights()
+ String[] getRights()
+ TextItem setRights(String[])
+ String getRating()
+ TextItem setRating(String)
+ Person getFirstContributor()
+ Person[] getContributors()
+ TextItem setContributors(Person[])
+ Person getFirstPublisher()
+ Person[] getPublishers()
+ TextItem setPublishers(Person[])
}
class org.fourthline.cling.model.message.header.InvalidHeaderException {
+ <<Create>> InvalidHeaderException(String)
}
abstract class org.fourthline.cling.support.contentdirectory.callback.Search {
+ {static} String CAPS_WILDCARD
- {static} Logger log
+ <<Create>> Search(Service,String,String)
+ <<Create>> Search(Service,String,String,String,long,Long,SortCriterion)
+ void run()
+ void success(ActionInvocation)
+ Long getDefaultMaxResults()
+ boolean receivedRaw(ActionInvocation,SearchResult)
+ {abstract}void received(ActionInvocation,DIDLContent)
+ {abstract}void updateStatus(Status)
}
enum org.fourthline.cling.support.contentdirectory.callback.Status {
+  NO_CONTENT
+  LOADING
+  OK
- String defaultMessage
~ <<Create>> Status(String)
+ String getDefaultMessage()
}
class org.fourthline.cling.model.profile.RemoteClientInfo {
# Connection connection
# UpnpHeaders extraResponseHeaders
+ <<Create>> RemoteClientInfo()
+ <<Create>> RemoteClientInfo(StreamRequestMessage)
+ <<Create>> RemoteClientInfo(Connection,UpnpHeaders)
+ Connection getConnection()
+ boolean isRequestCancelled()
+ void throwIfRequestCancelled()
+ InetAddress getRemoteAddress()
+ InetAddress getLocalAddress()
+ UpnpHeaders getExtraResponseHeaders()
+ void setResponseUserAgent(String)
+ void setResponseUserAgent(UserAgentHeader)
+ boolean isWMPRequest()
+ boolean isXbox360Request()
+ boolean isPS3Request()
+ String toString()
}
class org.fourthline.cling.transport.RouterImpl {
- {static} Logger log
# UpnpServiceConfiguration configuration
# ProtocolFactory protocolFactory
# boolean enabled
# ReentrantReadWriteLock routerLock
# Lock readLock
# Lock writeLock
# NetworkAddressFactory networkAddressFactory
# StreamClient streamClient
# Map<NetworkInterface,MulticastReceiver> multicastReceivers
# Map<InetAddress,DatagramIO> datagramIOs
# Map<InetAddress,StreamServer> streamServers
# <<Create>> RouterImpl()
+ <<Create>> RouterImpl(UpnpServiceConfiguration,ProtocolFactory)
+ boolean enable(EnableRouter)
+ boolean disable(DisableRouter)
+ UpnpServiceConfiguration getConfiguration()
+ ProtocolFactory getProtocolFactory()
+ boolean enable()
+ boolean disable()
+ void shutdown()
+ boolean isEnabled()
+ void handleStartFailure(InitializationException)
+ List<NetworkAddress> getActiveStreamServers(InetAddress)
+ void received(IncomingDatagramMessage)
+ void received(UpnpStream)
+ void send(OutgoingDatagramMessage)
+ StreamResponseMessage send(StreamRequestMessage)
+ void broadcast(byte[])
# void startInterfaceBasedTransports(Iterator<NetworkInterface>)
# void startAddressBasedTransports(Iterator<InetAddress>)
# void lock(Lock,int)
# void lock(Lock)
# void unlock(Lock)
# int getLockTimeoutMillis()
}
class org.fourthline.cling.controlpoint.event.ExecuteAction {
# ActionCallback callback
+ <<Create>> ExecuteAction(ActionCallback)
+ ActionCallback getCallback()
}
class org.fourthline.cling.test.data.SampleServiceThree {
+ {static} URI getThisDescriptorURI()
+ {static} URL getDescriptorURL()
+ {static} ServiceId getThisServiceId()
+ {static} ServiceType getThisServiceType()
+ ServiceType getServiceType()
+ ServiceId getServiceId()
+ URI getDescriptorURI()
+ URI getControlURI()
+ URI getEventSubscriptionURI()
+ Action[] getActions()
+ StateVariable[] getStateVariables()
}
class org.fourthline.cling.support.model.dlna.DLNAPlaySpeedAttribute {
+ <<Create>> DLNAPlaySpeedAttribute()
+ <<Create>> DLNAPlaySpeedAttribute(TransportPlaySpeed[])
+ <<Create>> DLNAPlaySpeedAttribute(String[])
+ void setString(String,String)
+ String getString()
}
class org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderImpl {
- {static} Logger log
+ S describe(S,String)
+ S describe(S,Document)
# S buildInstance(S,MutableService)
# void hydrateBasic(MutableService,Service)
# void hydrateRoot(MutableService,Element)
+ void hydrateActionList(MutableService,Node)
+ void hydrateAction(MutableAction,Node)
+ void hydrateActionArgument(MutableActionArgument,Node)
+ void hydrateServiceStateTableList(MutableService,Node)
+ void hydrateStateVariable(MutableStateVariable,Element)
+ String generate(Service)
+ Document buildDOM(Service)
- void generateScpd(Service,Document)
- void generateSpecVersion(Service,Document,Element)
- void generateActionList(Service,Document,Element)
- void generateAction(Action,Document,Element)
- void generateActionArgument(ActionArgument,Document,Element)
- void generateServiceStateTable(Service,Document,Element)
- void generateStateVariable(StateVariable,Document,Element)
+ void warning(SAXParseException)
+ void error(SAXParseException)
+ void fatalError(SAXParseException)
}
class de.yaacc.upnp.server.YaaccHttpHandler {
- Context context
+ <<Create>> YaaccHttpHandler(Context)
+ void handle(ClassicHttpRequest,ClassicHttpResponse,HttpContext)
- Context getContext()
- ContentHolder lookupContent(String)
- ContentHolder lookupAlbumArt(String)
- ContentHolder lookupThumbnail(String)
- byte[] getDefaultIcon()
}
class de.yaacc.upnp.server.YaaccHttpHandler.ContentHolder {
- String uri
- MimeType mimeType
- byte[] content
+ <<Create>> ContentHolder(MimeType,String)
+ <<Create>> ContentHolder(MimeType,byte[])
+ String getUri()
+ MimeType getMimeType()
+ HttpEntity getHttpEntity()
}
class org.fourthline.cling.test.model.LocalServiceBindingDatatypesTest {
+ {static} LocalDevice createTestDevice(LocalService)
+ {static} Object[][] devices()
+ void validateBinding(LocalDevice)
}
class org.fourthline.cling.test.model.LocalServiceBindingDatatypesTest.TestServiceOne {
- byte[] data
+ <<Create>> TestServiceOne()
+ byte[] getData()
}
class de.yaacc.upnp.UpnpClient {
+ {static} String LOCAL_UID
~ SharedPreferences preferences
- List<UpnpClientListener> listeners
- AndroidUpnpService androidUpnpService
- Context context
- boolean mute
- PlayerService playerService
+ <<Create>> UpnpClient()
+ <<Create>> UpnpClient(Context)
+ boolean initialize(Context)
+ boolean startService()
- SyncOffset getDeviceSyncOffset()
- void deviceAdded(Device)
- void deviceRemoved(Device)
- void deviceUpdated(Device)
- void fireDeviceAdded(Device<?,?,?>)
- void fireDeviceRemoved(Device<?,?,?>)
- void fireDeviceUpdated(Device<?,?,?>)
+ void onServiceConnected(ComponentName,IBinder)
+ void onServiceDisconnected(ComponentName)
+ void remoteDeviceDiscoveryStarted(Registry,RemoteDevice)
+ void remoteDeviceDiscoveryFailed(Registry,RemoteDevice,Exception)
+ void remoteDeviceAdded(Registry,RemoteDevice)
+ void remoteDeviceUpdated(Registry,RemoteDevice)
+ void remoteDeviceRemoved(Registry,RemoteDevice)
+ void localDeviceAdded(Registry,LocalDevice)
+ void localDeviceRemoved(Registry,LocalDevice)
+ void beforeShutdown(Registry)
+ void afterShutdown()
+ Service getAVTransportService(Device<?,?,?>)
+ Service getRenderingControlService(Device<?,?,?>)
+ void addUpnpClientListener(UpnpClientListener)
- AndroidUpnpService getAndroidUpnpService()
- void setAndroidUpnpService(AndroidUpnpService)
+ Collection<Device> getDevices()
+ Collection<Device> getDevicesProvidingContentDirectoryService()
+ Collection<Device> getDevicesProvidingAvTransportService()
+ Device<?,?,?> getDevice(String)
+ boolean isInitialized()
+ ControlPoint getControlPoint()
+ Registry getRegistry()
+ Context getContext()
- void refreshUpnpDeviceCatalog()
- ContentDirectoryBrowseResult browseSync(Device<?,?,?>,String)
+ ContentDirectoryBrowseResult browseSync(Position)
+ ContentDirectoryBrowseResult browseSync(Position,Long,Long)
+ ContentDirectoryBrowseResult browseSync(Device<?,?,?>,String,BrowseFlag,String,long,Long,SortCriterion)
- ContentDirectoryBrowseResult enrichWithCover(ContentDirectoryBrowseResult)
- ContentDirectoryBrowseResult browseAsync(Device<?,?,?>,String,BrowseFlag,String,long,Long,SortCriterion)
- void searchDevices()
+ List<Player> initializePlayers(DIDLObject)
+ List<Player> initializePlayers(List<Item>)
+ List<Player> initializePlayers(AvTransport)
+ Collection<Player> getCurrentPlayers()
+ List<Player> getCurrentPlayers(AvTransport)
+ List<Item> toItemList(DIDLContent)
+ List<Item> toItemList(DIDLObject)
- DIDLContent loadContainer(Container)
+ Set<String> getReceiverDeviceIds()
- void setReceiverDeviceIds(Set<String>)
+ Collection<Device> getReceiverDevices()
+ void setReceiverDevices(Collection<Device>)
+ void addReceiverDevice(Device)
+ void removeReceiverDevice(Device)
+ String getProviderDeviceId()
+ Device<?,?,?> getProviderDevice()
+ void setProviderDevice(Device)
+ void shutdown()
+ int getDefaultDuration()
+ int getSilenceDuration()
- Device<?,?,?> getLocalDummyDevice()
+ boolean isMute()
+ void setMute(boolean)
+ int getVolume()
+ void setVolume(int)
+ void downloadItem(DIDLObject)
+ void controlDevice(Device)
}
class de.yaacc.upnp.UpnpClient.LocalDummyDevice {
~ <<Create>> LocalDummyDevice()
+ Service[] getServices()
+ Device[] getEmbeddedDevices()
+ Device getRoot()
+ Device findDevice(UDN)
+ Resource[] discoverResources(Namespace)
+ Device newInstance(UDN,UDAVersion,DeviceType,DeviceDetails,Icon[],Service[],List)
+ Service newInstance(ServiceType,ServiceId,URI,URI,URI,Action[],StateVariable[])
+ Device[] toDeviceArray(Collection)
+ Service[] newServiceArray(int)
+ Service[] toServiceArray(Collection)
+ String getDisplayString()
+ DeviceDetails getDetails()
}
class de.yaacc.databinding.ActivityThirdPartieMusicPlayerBinding {
- RelativeLayout rootView
+ RelativeLayout thirdPartieMusicActivityControls
+ ImageButton thirdPratieMusicActivityControlExit
+ ImageButton thirdPratieMusicActivityControlNext
+ ImageButton thirdPratieMusicActivityControlPause
+ ImageButton thirdPratieMusicActivityControlPlay
+ ImageButton thirdPratieMusicActivityControlPrev
+ ImageButton thirdPratieMusicActivityControlStop
+ ImageView thirdPratieMusicActivityImageView
- <<Create>> ActivityThirdPartieMusicPlayerBinding(RelativeLayout,RelativeLayout,ImageButton,ImageButton,ImageButton,ImageButton,ImageButton,ImageButton,ImageView)
+ RelativeLayout getRoot()
+ {static} ActivityThirdPartieMusicPlayerBinding inflate(LayoutInflater)
+ {static} ActivityThirdPartieMusicPlayerBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityThirdPartieMusicPlayerBinding bind(View)
}
abstract class org.fourthline.cling.support.igd.callback.PortMappingAdd {
# PortMapping portMapping
+ <<Create>> PortMappingAdd(Service,PortMapping)
# <<Create>> PortMappingAdd(Service,ControlPoint,PortMapping)
}
class org.fourthline.cling.test.ssdp.SearchReceivedTest {
+ void receivedSearchAll()
+ void receivedSearchRoot()
+ void receivedSearchUDN()
+ void receivedSearchDeviceType()
+ void receivedSearchServiceType()
+ void receivedInvalidST()
+ void receivedInvalidMX()
+ void receivedNonAdvertised()
# ReceivingSearch createProtocol(UpnpService,IncomingSearchRequest)
# void assertSearchResponseBasics(Namespace,UpnpMessage,LocalDevice)
# IncomingSearchRequest createRequestMessage()
}
class org.fourthline.cling.support.model.dlna.message.header.WCTHeader {
~ {static} Pattern pattern
+ <<Create>> WCTHeader()
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.registry.event.RegistryShutdown {
}
class de.yaacc.databinding.ActivityPlayerListBinding {
- RelativeLayout rootView
+ ListView playerList
- <<Create>> ActivityPlayerListBinding(RelativeLayout,ListView)
+ RelativeLayout getRoot()
+ {static} ActivityPlayerListBinding inflate(LayoutInflater)
+ {static} ActivityPlayerListBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityPlayerListBinding bind(View)
}
interface org.fourthline.cling.transport.spi.StreamClientConfiguration {
+ ExecutorService getRequestExecutorService()
+ int getTimeoutSeconds()
+ int getLogWarningSeconds()
+ String getUserAgentValue(int,int)
}
class org.seamless.test.util.Base64Test {
+ void encodeDecode()
}
enum org.fourthline.cling.support.model.RecordQualityMode {
+  EP
+  LP
+  SP
+  BASIC
+  MEDIUM
+  HIGH
+  NOT_IMPLEMENTED
- String protocolString
~ <<Create>> RecordQualityMode(String)
+ String toString()
+ {static} RecordQualityMode valueOrExceptionOf(String)
+ {static} RecordQualityMode[] valueOfCommaSeparatedList(String)
}
class org.seamless.xhtml.Meta {
+ <<Create>> Meta(XPath,Element)
}
class org.fourthline.cling.test.gena.GenaSampleData {
+ {static} LocalDevice createTestDevice()
+ {static} LocalDevice createTestDevice(Class<?>)
+ {static} LocalDevice createTestDevice(LocalService)
}
class org.fourthline.cling.test.gena.GenaSampleData.LocalTestService {
- boolean target
- boolean status
~ Foo someVar
+ void setTarget(boolean)
+ boolean getTarget()
+ void dummyStatus()
+ boolean getStatus()
}
enum org.fourthline.cling.test.gena.Foo {
+  foo
+  bar
}
class org.fourthline.cling.model.message.control.OutgoingActionRequestMessage {
- {static} Logger log
- String actionNamespace
+ <<Create>> OutgoingActionRequestMessage(ActionInvocation,URL)
+ <<Create>> OutgoingActionRequestMessage(Action,UpnpRequest)
+ String getActionNamespace()
}
class org.fourthline.cling.support.model.container.MusicGenre {
+ {static} Class CLASS
+ <<Create>> MusicGenre()
+ <<Create>> MusicGenre(Container)
+ <<Create>> MusicGenre(String,Container,String,String,Integer)
+ <<Create>> MusicGenre(String,String,String,String,Integer)
}
class org.fourthline.cling.model.types.csv.CSVFloat {
+ <<Create>> CSVFloat()
+ <<Create>> CSVFloat(String)
}
class de.yaacc.BuildConfig {
+ {static} boolean DEBUG
+ {static} String APPLICATION_ID
+ {static} String BUILD_TYPE
+ {static} int VERSION_CODE
+ {static} String VERSION_NAME
}
class org.fourthline.cling.model.types.UnsignedIntegerTwoBytes {
+ <<Create>> UnsignedIntegerTwoBytes(long)
+ <<Create>> UnsignedIntegerTwoBytes(String)
+ Bits getBits()
}
class org.fourthline.cling.support.model.dlna.message.header.GetContentFeaturesHeader {
+ <<Create>> GetContentFeaturesHeader()
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.model.message.gena.IncomingUnsubscribeRequestMessage {
- LocalService service
+ <<Create>> IncomingUnsubscribeRequestMessage(StreamRequestMessage,LocalService)
+ LocalService getService()
+ boolean hasCallbackHeader()
+ boolean hasNotificationHeader()
+ String getSubscriptionId()
}
class de.yaacc.databinding.FragmentPlayerListBinding {
- RelativeLayout rootView
+ ListView playerList
- <<Create>> FragmentPlayerListBinding(RelativeLayout,ListView)
+ RelativeLayout getRoot()
+ {static} FragmentPlayerListBinding inflate(LayoutInflater)
+ {static} FragmentPlayerListBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} FragmentPlayerListBinding bind(View)
}
enum org.seamless.util.time.DateRangeOption {
+  ALL
+  MONTH_TO_DATE
+  YEAR_TO_DATE
+  LAST_MONTH
+  LAST_YEAR
+  CUSTOM
~ String label
~ DateRange dateRange
~ <<Create>> DateRangeOption(String,DateRange)
+ String getLabel()
+ DateRange getDateRange()
}
class de.yaacc.player.LocalBackgoundMusicPlayer {
- BackgroundMusicService backgroundMusicService
- Timer commandExecutionTimer
- URI albumArtUri
+ <<Create>> LocalBackgoundMusicPlayer(UpnpClient,String)
+ <<Create>> LocalBackgoundMusicPlayer(UpnpClient)
+ void onDestroy()
# void doPause()
# void doResume()
# void stopItem(PlayableItem)
# Object loadItem(PlayableItem)
# void startItem(PlayableItem,Object)
+ PendingIntent getNotificationIntent()
# int getNotificationId()
# boolean isShufflePlay()
+ String getDuration()
+ String getElapsedTime()
+ URI getAlbumArt()
- String formatMillis(long)
+ void onServiceConnected(ComponentName,IBinder)
+ void onServiceDisconnected(ComponentName)
+ boolean isMusicServiceBound()
- BackgroundMusicService getBackgroundService()
+ int getIconResourceId()
+ void seekTo(long)
}
abstract class org.fourthline.cling.model.message.UpnpOperation {
- int httpMinorVersion
+ int getHttpMinorVersion()
+ void setHttpMinorVersion(int)
}
class de.yaacc.util.image.ImageDownloader {
+ <<Create>> ImageDownloader()
+ Bitmap retrieveImageWithCertainSize(Uri,int,int)
- Bitmap decodeSampledBitmapFromStream(Uri,int,int,boolean)
- InputStream getUriAsStream(Uri)
}
class de.yaacc.util.image.ImageDownloader.FlushedInputStream {
+ <<Create>> FlushedInputStream(InputStream)
+ long skip(long)
}
abstract class org.fourthline.cling.support.avtransport.callback.GetCurrentTransportActions {
- {static} Logger log
+ <<Create>> GetCurrentTransportActions(Service)
+ <<Create>> GetCurrentTransportActions(UnsignedIntegerFourBytes,Service)
+ void success(ActionInvocation)
+ {abstract}void received(ActionInvocation,TransportAction[])
}
class org.seamless.util.time.DateRange {
# Date start
# Date end
+ <<Create>> DateRange()
+ <<Create>> DateRange(Date)
+ <<Create>> DateRange(Date,Date)
+ <<Create>> DateRange(String,String)
+ Date getStart()
+ Date getEnd()
+ boolean isStartAfter(Date)
+ Date getOneDayBeforeStart()
+ {static} int getCurrentYear()
+ {static} int getCurrentMonth()
+ {static} int getCurrentDayOfMonth()
+ boolean hasStartOrEnd()
+ {static} int getDaysInMonth(Date)
+ {static} DateRange getMonthOf(Date)
+ boolean isInRange(Date)
+ boolean isValid()
+ boolean equals(Object)
+ int hashCode()
+ {static} DateRange valueOf(String)
+ String toString()
}
enum org.seamless.util.time.Preset {
+  ALL
+  YEAR_TO_DATE
+  MONTH_TO_DATE
+  LAST_MONTH
+  LAST_YEAR
~ DateRange dateRange
~ <<Create>> Preset(DateRange)
+ DateRange getDateRange()
}
abstract class org.fourthline.cling.support.messagebox.RemoveMessage {
+ <<Create>> RemoveMessage(Service,Message)
+ <<Create>> RemoveMessage(Service,int)
}
interface org.fourthline.cling.transport.spi.MulticastReceiver {
+ void init(NetworkInterface,Router,NetworkAddressFactory,DatagramProcessor)
+ void stop()
+ C getConfiguration()
}
class example.localservice.SwitchPowerModerated {
+ String moderatedMaxRateVar
+ Integer moderatedMinDeltaVar
}
class org.fourthline.cling.support.model.BrowseResult {
# String result
# UnsignedIntegerFourBytes count
# UnsignedIntegerFourBytes totalMatches
# UnsignedIntegerFourBytes containerUpdateID
+ <<Create>> BrowseResult(String,UnsignedIntegerFourBytes,UnsignedIntegerFourBytes,UnsignedIntegerFourBytes)
+ <<Create>> BrowseResult(String,long,long)
+ <<Create>> BrowseResult(String,long,long,long)
+ String getResult()
+ UnsignedIntegerFourBytes getCount()
+ long getCountLong()
+ UnsignedIntegerFourBytes getTotalMatches()
+ long getTotalMatchesLong()
+ UnsignedIntegerFourBytes getContainerUpdateID()
+ long getContainerUpdateIDLong()
}
class org.fourthline.cling.model.action.QueryStateVariableExecutor {
# void execute(ActionInvocation<LocalService>,Object)
# void executeQueryStateVariable(ActionInvocation<LocalService>,Object)
}
class de.yaacc.databinding.ActivityAvtransportPlayerBinding {
- RelativeLayout rootView
+ ImageButton avtransportPlayerActivityControlExit
+ Switch avtransportPlayerActivityControlMuteSwitch
+ ImageButton avtransportPlayerActivityControlNext
+ ImageButton avtransportPlayerActivityControlPause
+ ImageButton avtransportPlayerActivityControlPlay
+ ImageButton avtransportPlayerActivityControlPrev
+ SeekBar avtransportPlayerActivityControlSeekBar
+ ImageButton avtransportPlayerActivityControlStop
+ SeekBar avtransportPlayerActivityControlVolumeSeekBar
+ TextView avtransportPlayerActivityControlVolumeTextView
+ RelativeLayout avtransportPlayerActivityControls
+ TextView avtransportPlayerActivityCurrentItem
+ TextView avtransportPlayerActivityDuration
+ TextView avtransportPlayerActivityElapsedTime
+ ImageView avtransportPlayerActivityImageView
+ TextView avtransportPlayerActivityNextItem
+ TextView avtransportPlayerActivityNextLabel
+ TextView avtransportPlayerActivityPosition
+ RelativeLayout avtransportPlayerActivitySeekBarLayout
+ TextView avtransportPlayerActivitySeparator
+ Space avtransportPlayerActivitySeparator2
+ Space avtransportPlayerActivitySeparator3
- <<Create>> ActivityAvtransportPlayerBinding(RelativeLayout,ImageButton,Switch,ImageButton,ImageButton,ImageButton,ImageButton,SeekBar,ImageButton,SeekBar,TextView,RelativeLayout,TextView,TextView,TextView,ImageView,TextView,TextView,TextView,RelativeLayout,TextView,Space,Space)
+ RelativeLayout getRoot()
+ {static} ActivityAvtransportPlayerBinding inflate(LayoutInflater)
+ {static} ActivityAvtransportPlayerBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityAvtransportPlayerBinding bind(View)
}
class org.seamless.xhtml.XHTML {
+ {static} String NAMESPACE_URI
+ {static} String SCHEMA_RESOURCE
+ <<Create>> XHTML(Document)
+ {static} Source[] createSchemaSources()
+ Root createRoot(XPath,ELEMENT)
+ String getRootElementNamespace()
+ Root getRoot(XPath)
+ XHTML copy()
}
enum org.seamless.xhtml.ELEMENT {
+  html
+  head
+  title
+  meta
+  link
+  script
+  style
+  body
+  div
+  span
+  p
+  object
+  a
+  img
+  pre
+  h1
+  h2
+  h3
+  h4
+  h5
+  h6
+  table
+  thead
+  tfoot
+  tbody
+  tr
+  th
+  td
+  ul
+  ol
+  li
+  dl
+  dt
+  dd
+  form
+  input
+  select
+  option
}
enum org.seamless.xhtml.ATTR {
+  id
+  style
+  title
+  type
+  href
+  name
+  content
+  scheme
+  rel
+  rev
+  colspan
+  rowspan
+  src
+  alt
+  action
+  method
+ {static} String CLASS
}
class org.fourthline.cling.support.model.item.AudioBroadcast {
+ {static} Class CLASS
+ <<Create>> AudioBroadcast()
+ <<Create>> AudioBroadcast(Item)
+ <<Create>> AudioBroadcast(String,String,String,String,Res)
+ String getRegion()
+ AudioBroadcast setRegion(String)
+ String getRadioCallSign()
+ AudioBroadcast setRadioCallSign(String)
+ String getRadioStationID()
+ AudioBroadcast setRadioStationID(String)
+ String getRadioBand()
+ AudioBroadcast setRadioBand(String)
+ Integer getChannelNr()
+ AudioBroadcast setChannelNr(Integer)
}
class de.yaacc.databinding.ActivityYaaccUpnpServerControlBinding {
- RelativeLayout rootView
+ Space Separator
+ CheckBox providerEnabled
+ CheckBox receiverEnabled
+ Button startServer
+ Button stopServer
- <<Create>> ActivityYaaccUpnpServerControlBinding(RelativeLayout,Space,CheckBox,CheckBox,Button,Button)
+ RelativeLayout getRoot()
+ {static} ActivityYaaccUpnpServerControlBinding inflate(LayoutInflater)
+ {static} ActivityYaaccUpnpServerControlBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityYaaccUpnpServerControlBinding bind(View)
}
class org.fourthline.cling.model.action.ActionArgumentValue {
- ActionArgument<S> argument
+ <<Create>> ActionArgumentValue(ActionArgument<S>,Object)
+ ActionArgument<S> getArgument()
}
abstract class org.fourthline.cling.support.avtransport.callback.SetPlayMode {
- {static} Logger log
+ <<Create>> SetPlayMode(Service,PlayMode)
+ <<Create>> SetPlayMode(UnsignedIntegerFourBytes,Service,PlayMode)
+ void success(ActionInvocation)
}
class org.fourthline.cling.support.model.DeviceCapabilities {
- StorageMedium[] playMedia
- StorageMedium[] recMedia
- RecordQualityMode[] recQualityModes
+ <<Create>> DeviceCapabilities(Map<String,ActionArgumentValue>)
+ <<Create>> DeviceCapabilities(StorageMedium[])
+ <<Create>> DeviceCapabilities(StorageMedium[],StorageMedium[],RecordQualityMode[])
+ StorageMedium[] getPlayMedia()
+ StorageMedium[] getRecMedia()
+ RecordQualityMode[] getRecQualityModes()
+ String getPlayMediaString()
+ String getRecMediaString()
+ String getRecQualityModesString()
}
class de.yaacc.browser.TabBrowserFragmentStateAdapter {
+ <<Create>> TabBrowserFragmentStateAdapter(FragmentActivity)
+ Fragment createFragment(int)
+ int getItemCount()
}
class org.fourthline.cling.model.message.header.NTSHeader {
+ <<Create>> NTSHeader()
+ <<Create>> NTSHeader(NotificationSubtype)
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.support.lastchange.EventedValueUnsignedIntegerFourBytes {
+ <<Create>> EventedValueUnsignedIntegerFourBytes(UnsignedIntegerFourBytes)
+ <<Create>> EventedValueUnsignedIntegerFourBytes(Map.Entry<String,String>[])
# Datatype getDatatype()
}
class org.fourthline.cling.support.messagebox.parser.MessageDOM {
+ {static} String NAMESPACE_URI
+ <<Create>> MessageDOM(Document)
+ String getRootElementNamespace()
+ MessageElement getRoot(XPath)
+ MessageDOM copy()
+ MessageElement createRoot(XPath,String)
}
class org.fourthline.cling.model.message.header.SoapActionHeader {
+ <<Create>> SoapActionHeader()
+ <<Create>> SoapActionHeader(URI)
+ <<Create>> SoapActionHeader(SoapActionType)
+ <<Create>> SoapActionHeader(String)
+ void setString(String)
+ String getString()
}
interface org.fourthline.cling.android.AndroidUpnpService {
+ UpnpService get()
+ UpnpServiceConfiguration getConfiguration()
+ Registry getRegistry()
+ ControlPoint getControlPoint()
}
class org.fourthline.cling.support.model.dlna.types.ScmsFlagType {
- boolean copyright
- boolean original
+ <<Create>> ScmsFlagType()
+ <<Create>> ScmsFlagType(boolean,boolean)
+ boolean isCopyright()
+ boolean isOriginal()
}
abstract class org.fourthline.cling.support.igd.callback.PortMappingEntryGet {
+ <<Create>> PortMappingEntryGet(Service,long)
# <<Create>> PortMappingEntryGet(Service,ControlPoint,long)
+ void success(ActionInvocation)
# {abstract}void success(PortMapping)
}
class de.yaacc.upnp.YaaccAsyncStreamServerImpl {
- {static} Logger log
# YaaccAsyncStreamServerConfigurationImpl configuration
# int localPort
- ExecutorService executorService
- HttpAsyncServer server
- Future<ListenerEndpoint> listenerEndpointFuture
- ProtocolFactory protocolFactory
+ <<Create>> YaaccAsyncStreamServerImpl(ProtocolFactory,YaaccAsyncStreamServerConfigurationImpl)
+ YaaccAsyncStreamServerConfigurationImpl getConfiguration()
+ void init(InetAddress,Router)
+ int getPort()
+ void stop()
+ void run()
}
class org.fourthline.cling.model.meta.StateVariable {
- {static} Logger log
- String name
- StateVariableTypeDetails type
- StateVariableEventDetails eventDetails
- S service
+ <<Create>> StateVariable(String,StateVariableTypeDetails)
+ <<Create>> StateVariable(String,StateVariableTypeDetails,StateVariableEventDetails)
+ String getName()
+ StateVariableTypeDetails getTypeDetails()
+ StateVariableEventDetails getEventDetails()
+ S getService()
~ void setService(S)
+ List<ValidationError> validate()
+ boolean isModeratedNumericType()
+ StateVariable<S> deepCopy()
+ String toString()
}
class org.fourthline.cling.mock.MockRouter {
+ int counter
+ List<IncomingDatagramMessage> incomingDatagramMessages
+ List<OutgoingDatagramMessage> outgoingDatagramMessages
+ List<UpnpStream> receivedUpnpStreams
+ List<StreamRequestMessage> sentStreamRequestMessages
+ List<byte[]> broadcastedBytes
# UpnpServiceConfiguration configuration
# ProtocolFactory protocolFactory
+ <<Create>> MockRouter(UpnpServiceConfiguration,ProtocolFactory)
+ UpnpServiceConfiguration getConfiguration()
+ ProtocolFactory getProtocolFactory()
+ boolean enable()
+ boolean disable()
+ void shutdown()
+ boolean isEnabled()
+ void handleStartFailure(InitializationException)
+ List<NetworkAddress> getActiveStreamServers(InetAddress)
+ void received(IncomingDatagramMessage)
+ void received(UpnpStream)
+ void send(OutgoingDatagramMessage)
+ StreamResponseMessage send(StreamRequestMessage)
+ void broadcast(byte[])
+ void resetStreamRequestMessageCounter()
+ List<IncomingDatagramMessage> getIncomingDatagramMessages()
+ List<OutgoingDatagramMessage> getOutgoingDatagramMessages()
+ List<UpnpStream> getReceivedUpnpStreams()
+ List<StreamRequestMessage> getSentStreamRequestMessages()
+ List<byte[]> getBroadcastedBytes()
+ StreamResponseMessage[] getStreamResponseMessages()
+ StreamResponseMessage getStreamResponseMessage(StreamRequestMessage)
}
abstract class org.fourthline.cling.protocol.async.SendingNotification {
- {static} Logger log
- LocalDevice device
+ <<Create>> SendingNotification(UpnpService,LocalDevice)
+ LocalDevice getDevice()
# void execute()
# int getBulkRepeat()
# int getBulkIntervalMilliseconds()
+ void sendMessages(Location)
# List<OutgoingNotificationRequest> createDeviceMessages(LocalDevice,Location)
# List<OutgoingNotificationRequest> createServiceTypeMessages(LocalDevice,Location)
# {abstract}NotificationSubtype getNotificationSubtype()
}
class org.fourthline.cling.registry.DefaultRegistryListener {
+ void remoteDeviceDiscoveryStarted(Registry,RemoteDevice)
+ void remoteDeviceDiscoveryFailed(Registry,RemoteDevice,Exception)
+ void remoteDeviceAdded(Registry,RemoteDevice)
+ void remoteDeviceUpdated(Registry,RemoteDevice)
+ void remoteDeviceRemoved(Registry,RemoteDevice)
+ void localDeviceAdded(Registry,LocalDevice)
+ void localDeviceRemoved(Registry,LocalDevice)
+ void deviceAdded(Registry,Device)
+ void deviceRemoved(Registry,Device)
+ void beforeShutdown(Registry)
+ void afterShutdown()
}
class org.fourthline.cling.model.message.header.UserAgentHeader {
+ <<Create>> UserAgentHeader()
+ <<Create>> UserAgentHeader(String)
+ void setString(String)
+ String getString()
}
class android.support.fragment.R {
- <<Create>> R()
}
class android.support.fragment.R.attr {
+ {static} int font
+ {static} int fontProviderAuthority
+ {static} int fontProviderCerts
+ {static} int fontProviderFetchStrategy
+ {static} int fontProviderFetchTimeout
+ {static} int fontProviderPackage
+ {static} int fontProviderQuery
+ {static} int fontStyle
+ {static} int fontWeight
- <<Create>> attr()
}
class android.support.fragment.R.bool {
+ {static} int abc_action_bar_embed_tabs
- <<Create>> bool()
}
class android.support.fragment.R.color {
+ {static} int notification_action_color_filter
+ {static} int notification_icon_bg_color
+ {static} int ripple_material_light
+ {static} int secondary_text_default_material_light
- <<Create>> color()
}
class android.support.fragment.R.dimen {
+ {static} int compat_button_inset_horizontal_material
+ {static} int compat_button_inset_vertical_material
+ {static} int compat_button_padding_horizontal_material
+ {static} int compat_button_padding_vertical_material
+ {static} int compat_control_corner_material
+ {static} int notification_action_icon_size
+ {static} int notification_action_text_size
+ {static} int notification_big_circle_margin
+ {static} int notification_content_margin_start
+ {static} int notification_large_icon_height
+ {static} int notification_large_icon_width
+ {static} int notification_main_column_padding_top
+ {static} int notification_media_narrow_margin
+ {static} int notification_right_icon_size
+ {static} int notification_right_side_padding_top
+ {static} int notification_small_icon_background_padding
+ {static} int notification_small_icon_size_as_large
+ {static} int notification_subtext_size
+ {static} int notification_top_pad
+ {static} int notification_top_pad_large_text
- <<Create>> dimen()
}
class android.support.fragment.R.drawable {
+ {static} int notification_action_background
+ {static} int notification_bg
+ {static} int notification_bg_low
+ {static} int notification_bg_low_normal
+ {static} int notification_bg_low_pressed
+ {static} int notification_bg_normal
+ {static} int notification_bg_normal_pressed
+ {static} int notification_icon_background
+ {static} int notification_template_icon_bg
+ {static} int notification_template_icon_low_bg
+ {static} int notification_tile_bg
+ {static} int notify_panel_notification_icon_bg
- <<Create>> drawable()
}
class android.support.fragment.R.id {
+ {static} int action_container
+ {static} int action_divider
+ {static} int action_image
+ {static} int action_text
+ {static} int actions
+ {static} int async
+ {static} int blocking
+ {static} int chronometer
+ {static} int forever
+ {static} int icon
+ {static} int icon_group
+ {static} int info
+ {static} int italic
+ {static} int line1
+ {static} int line3
+ {static} int normal
+ {static} int notification_background
+ {static} int notification_main_column
+ {static} int notification_main_column_container
+ {static} int right_icon
+ {static} int right_side
+ {static} int text
+ {static} int text2
+ {static} int time
+ {static} int title
- <<Create>> id()
}
class android.support.fragment.R.integer {
+ {static} int status_bar_notification_info_maxnum
- <<Create>> integer()
}
class android.support.fragment.R.layout {
+ {static} int notification_action
+ {static} int notification_action_tombstone
+ {static} int notification_template_custom_big
+ {static} int notification_template_icon_group
+ {static} int notification_template_part_chronometer
+ {static} int notification_template_part_time
- <<Create>> layout()
}
class android.support.fragment.R.string {
+ {static} int status_bar_notification_info_overflow
- <<Create>> string()
}
class android.support.fragment.R.style {
+ {static} int TextAppearance_Compat_Notification
+ {static} int TextAppearance_Compat_Notification_Info
+ {static} int TextAppearance_Compat_Notification_Line2
+ {static} int TextAppearance_Compat_Notification_Time
+ {static} int TextAppearance_Compat_Notification_Title
+ {static} int Widget_Compat_NotificationActionContainer
+ {static} int Widget_Compat_NotificationActionText
- <<Create>> style()
}
class android.support.fragment.R.styleable {
+ {static} int[] FontFamily
+ {static} int FontFamily_fontProviderAuthority
+ {static} int FontFamily_fontProviderCerts
+ {static} int FontFamily_fontProviderFetchStrategy
+ {static} int FontFamily_fontProviderFetchTimeout
+ {static} int FontFamily_fontProviderPackage
+ {static} int FontFamily_fontProviderQuery
+ {static} int[] FontFamilyFont
+ {static} int FontFamilyFont_font
+ {static} int FontFamilyFont_fontStyle
+ {static} int FontFamilyFont_fontWeight
- <<Create>> styleable()
}
abstract class org.fourthline.cling.support.avtransport.impl.state.Stopped {
- {static} Logger log
+ <<Create>> Stopped(T)
+ void onEntry()
+ {abstract}Class<? extends AbstractState<?>> setTransportURI(URI,String)
+ {abstract}Class<? extends AbstractState<?>> stop()
+ {abstract}Class<? extends AbstractState<?>> play(String)
+ {abstract}Class<? extends AbstractState<?>> next()
+ {abstract}Class<? extends AbstractState<?>> previous()
+ {abstract}Class<? extends AbstractState<?>> seek(SeekMode,String)
+ TransportAction[] getCurrentTransportActions()
}
class org.fourthline.cling.binding.staging.MutableUDAVersion {
+ int major
+ int minor
}
class de.yaacc.browser.ControlPlayerTask {
- Device device
- UpnpClient upnpClient
+ <<Create>> ControlPlayerTask(UpnpClient,Device)
+ Void doInBackground(Integer)
}
abstract class org.seamless.xml.DOMParser {
- {static} Logger log
+ {static} URL XML_SCHEMA_RESOURCE
# Source[] schemaSources
# Schema schema
+ <<Create>> DOMParser()
+ <<Create>> DOMParser(Source[])
+ Schema getSchema()
# {abstract}D createDOM(Document)
+ DocumentBuilderFactory createFactory(boolean)
+ Transformer createTransformer(String,int,boolean)
+ D createDocument()
+ D parse(URL)
+ D parse(String)
+ D parse(File)
+ D parse(InputStream)
+ D parse(URL,boolean)
+ D parse(String,boolean)
+ D parse(File,boolean)
+ D parse(InputStream,boolean)
+ D parse(InputSource,boolean)
+ void validate(URL)
+ void validate(String)
+ void validate(Document)
+ void validate(DOM)
+ void validate(Source)
+ XPathFactory createXPathFactory()
+ XPath createXPath(NamespaceContext)
+ XPath createXPath(XPathFactory,NamespaceContext)
+ Object getXPathResult(DOM,XPath,String,QName)
+ Object getXPathResult(DOMElement,XPath,String,QName)
+ Object getXPathResult(Node,XPath,String,QName)
+ String print(DOM)
+ String print(DOM,int)
+ String print(DOM,boolean)
+ String print(DOM,int,boolean)
+ String print(Document,int,boolean)
+ String print(String,int,boolean)
+ String print(Source,int,boolean)
+ String printHTML(Document)
+ String printHTML(Document,int,boolean,boolean)
+ void removeIgnorableWSNodes(Element)
+ boolean isIgnorableWSNode(Node)
+ void warning(SAXParseException)
+ void error(SAXParseException)
+ void fatalError(SAXParseException)
# ParserException unwrapException(Exception)
+ InputSource resolveEntity(String,String)
+ {static} String escape(String)
+ {static} String escape(String,boolean,boolean)
+ {static} String stripElements(String)
+ {static} void accept(Node,NodeVisitor)
+ {static} String wrap(String,String)
+ {static} String wrap(String,String,String)
}
abstract class org.seamless.xml.DOMParser.NodeVisitor {
- short nodeType
# <<Create>> NodeVisitor(short)
+ boolean isHalted()
+ {abstract}void visit(Node)
}
enum org.fourthline.cling.support.model.WriteStatus {
+  WRITABLE
+  NOT_WRITABLE
+  UNKNOWN
+  MIXED
}
class org.seamless.util.math.Rectangle {
- Point position
- int width
- int height
+ <<Create>> Rectangle()
+ <<Create>> Rectangle(Point,int,int)
+ void reset()
+ Point getPosition()
+ void setPosition(Point)
+ int getWidth()
+ void setWidth(int)
+ int getHeight()
+ void setHeight(int)
+ Rectangle intersection(Rectangle)
+ boolean isOverlapping(Rectangle)
+ String toString()
}
class org.seamless.http.Headers {
~ {static} byte CR
~ {static} byte LF
~ Map<String,List<String>> map
- boolean normalizeHeaders
+ <<Create>> Headers()
+ <<Create>> Headers(Map<String,List<String>>)
+ <<Create>> Headers(ByteArrayInputStream)
+ <<Create>> Headers(boolean)
+ int size()
+ boolean isEmpty()
+ boolean containsKey(Object)
+ boolean containsValue(Object)
+ List<String> get(Object)
+ List<String> put(String,List<String>)
+ List<String> remove(Object)
+ void putAll(Map<? extends String,? extends List<String>>)
+ void clear()
+ Set<String> keySet()
+ Collection<List<String>> values()
+ Set<Map.Entry<String,List<String>>> entrySet()
+ boolean equals(Object)
+ int hashCode()
+ String getFirstHeader(String)
+ void add(String,String)
+ void set(String,String)
- String normalize(String)
+ {static} String readLine(ByteArrayInputStream)
+ {static} String readLine(StringBuilder,ByteArrayInputStream)
# String[] splitHeader(String)
# int findNonWhitespace(String,int)
# int findEndOfString(String)
+ String toString()
}
class org.fourthline.cling.support.model.Person {
- String name
+ <<Create>> Person(String)
+ String getName()
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
class de.yaacc.upnp.server.avtransport.AvTransportMediaRendererPaused {
- UpnpClient upnpClient
+ <<Create>> AvTransportMediaRendererPaused(AvTransport,UpnpClient)
+ Class<? extends AbstractState<?>> play(String)
+ Class<? extends AbstractState<?>> setTransportURI(URI,String)
+ Class<? extends AbstractState<?>> stop()
+ void onEntry()
+ Class<? extends AbstractState<?>> syncPlay(String,String,String,String,String)
+ Class<? extends AbstractState<?>> syncPause(String,String)
+ Class<? extends AbstractState<?>> syncStop(String,String)
+ TransportAction[] getPossibleTransportActions()
}
class org.fourthline.cling.model.meta.RemoteDevice {
+ <<Create>> RemoteDevice(RemoteDeviceIdentity)
+ <<Create>> RemoteDevice(RemoteDeviceIdentity,DeviceType,DeviceDetails,RemoteService)
+ <<Create>> RemoteDevice(RemoteDeviceIdentity,DeviceType,DeviceDetails,RemoteService,RemoteDevice)
+ <<Create>> RemoteDevice(RemoteDeviceIdentity,DeviceType,DeviceDetails,RemoteService[])
+ <<Create>> RemoteDevice(RemoteDeviceIdentity,DeviceType,DeviceDetails,RemoteService[],RemoteDevice[])
+ <<Create>> RemoteDevice(RemoteDeviceIdentity,DeviceType,DeviceDetails,Icon,RemoteService)
+ <<Create>> RemoteDevice(RemoteDeviceIdentity,DeviceType,DeviceDetails,Icon,RemoteService,RemoteDevice)
+ <<Create>> RemoteDevice(RemoteDeviceIdentity,DeviceType,DeviceDetails,Icon,RemoteService[])
+ <<Create>> RemoteDevice(RemoteDeviceIdentity,DeviceType,DeviceDetails,Icon,RemoteService[],RemoteDevice[])
+ <<Create>> RemoteDevice(RemoteDeviceIdentity,DeviceType,DeviceDetails,Icon[],RemoteService)
+ <<Create>> RemoteDevice(RemoteDeviceIdentity,DeviceType,DeviceDetails,Icon[],RemoteService,RemoteDevice)
+ <<Create>> RemoteDevice(RemoteDeviceIdentity,DeviceType,DeviceDetails,Icon[],RemoteService[])
+ <<Create>> RemoteDevice(RemoteDeviceIdentity,DeviceType,DeviceDetails,Icon[],RemoteService[],RemoteDevice[])
+ <<Create>> RemoteDevice(RemoteDeviceIdentity,UDAVersion,DeviceType,DeviceDetails,Icon[],RemoteService[],RemoteDevice[])
+ RemoteService[] getServices()
+ RemoteDevice[] getEmbeddedDevices()
+ URL normalizeURI(URI)
+ RemoteDevice newInstance(UDN,UDAVersion,DeviceType,DeviceDetails,Icon[],RemoteService[],List<RemoteDevice>)
+ RemoteService newInstance(ServiceType,ServiceId,URI,URI,URI,Action<RemoteService>[],StateVariable<RemoteService>[])
+ RemoteDevice[] toDeviceArray(Collection<RemoteDevice>)
+ RemoteService[] newServiceArray(int)
+ RemoteService[] toServiceArray(Collection<RemoteService>)
+ Resource[] discoverResources(Namespace)
+ RemoteDevice getRoot()
+ RemoteDevice findDevice(UDN)
}
enum org.fourthline.cling.support.model.TransportState {
+  STOPPED
+  PLAYING
+  TRANSITIONING
+  PAUSED_PLAYBACK
+  PAUSED_RECORDING
+  RECORDING
+  NO_MEDIA_PRESENT
+  CUSTOM
~ String value
~ <<Create>> TransportState()
+ String getValue()
+ TransportState setValue(String)
+ {static} TransportState valueOrCustomOf(String)
}
class de.yaacc.BuildConfig {
+ {static} boolean DEBUG
+ {static} String APPLICATION_ID
+ {static} String BUILD_TYPE
+ {static} int VERSION_CODE
+ {static} String VERSION_NAME
}
class org.fourthline.cling.mock.MockUpnpServiceConfiguration {
# boolean maintainsRegistry
# boolean multiThreaded
+ <<Create>> MockUpnpServiceConfiguration()
+ <<Create>> MockUpnpServiceConfiguration(boolean)
+ <<Create>> MockUpnpServiceConfiguration(boolean,boolean)
+ boolean isMaintainsRegistry()
+ boolean isMultiThreaded()
# NetworkAddressFactory createNetworkAddressFactory(int)
+ Executor getRegistryMaintainerExecutor()
# ExecutorService getDefaultExecutorService()
}
class org.fourthline.cling.model.NetworkAddress {
# InetAddress address
# int port
# byte[] hardwareAddress
+ <<Create>> NetworkAddress(InetAddress,int)
+ <<Create>> NetworkAddress(InetAddress,int,byte[])
+ InetAddress getAddress()
+ int getPort()
+ byte[] getHardwareAddress()
+ boolean equals(Object)
+ int hashCode()
}
class org.fourthline.cling.support.renderingcontrol.lastchange.ChannelMute {
# Channel channel
# Boolean mute
+ <<Create>> ChannelMute(Channel,Boolean)
+ Channel getChannel()
+ Boolean getMute()
+ String toString()
}
class org.fourthline.cling.model.meta.LocalService {
# Map<Action,ActionExecutor> actionExecutors
# Map<StateVariable,StateVariableAccessor> stateVariableAccessors
# Set<Class> stringConvertibleTypes
# boolean supportsQueryStateVariables
# ServiceManager manager
+ <<Create>> LocalService(ServiceType,ServiceId,Action[],StateVariable[])
+ <<Create>> LocalService(ServiceType,ServiceId,Map<Action,ActionExecutor>,Map<StateVariable,StateVariableAccessor>,Set<Class>,boolean)
+ void setManager(ServiceManager<T>)
+ ServiceManager<T> getManager()
+ boolean isSupportsQueryStateVariables()
+ Set<Class> getStringConvertibleTypes()
+ boolean isStringConvertibleType(Object)
+ boolean isStringConvertibleType(Class)
+ StateVariableAccessor getAccessor(String)
+ StateVariableAccessor getAccessor(StateVariable)
+ ActionExecutor getExecutor(String)
+ ActionExecutor getExecutor(Action)
+ Action getQueryStateVariableAction()
+ String toString()
}
class de.yaacc.browser.PlayerListItemClickListener {
+ void onItemClick(AdapterView<?>,View,int,long)
- void openIntent(Context,Player)
+ void onCreateContextMenu(ContextMenu,View,ContextMenuInfo)
+ boolean onContextItemSelected(Player,MenuItem,Context)
}
class org.fourthline.cling.support.lastchange.EventedValueShort {
+ <<Create>> EventedValueShort(Short)
+ <<Create>> EventedValueShort(Map.Entry<String,String>[])
# Datatype getDatatype()
}
class android.support.v4.R {
- <<Create>> R()
}
class android.support.v4.R.attr {
+ {static} int font
+ {static} int fontProviderAuthority
+ {static} int fontProviderCerts
+ {static} int fontProviderFetchStrategy
+ {static} int fontProviderFetchTimeout
+ {static} int fontProviderPackage
+ {static} int fontProviderQuery
+ {static} int fontStyle
+ {static} int fontWeight
- <<Create>> attr()
}
class android.support.v4.R.bool {
+ {static} int abc_action_bar_embed_tabs
- <<Create>> bool()
}
class android.support.v4.R.color {
+ {static} int notification_action_color_filter
+ {static} int notification_icon_bg_color
+ {static} int notification_material_background_media_default_color
+ {static} int primary_text_default_material_dark
+ {static} int ripple_material_light
+ {static} int secondary_text_default_material_dark
+ {static} int secondary_text_default_material_light
- <<Create>> color()
}
class android.support.v4.R.dimen {
+ {static} int compat_button_inset_horizontal_material
+ {static} int compat_button_inset_vertical_material
+ {static} int compat_button_padding_horizontal_material
+ {static} int compat_button_padding_vertical_material
+ {static} int compat_control_corner_material
+ {static} int notification_action_icon_size
+ {static} int notification_action_text_size
+ {static} int notification_big_circle_margin
+ {static} int notification_content_margin_start
+ {static} int notification_large_icon_height
+ {static} int notification_large_icon_width
+ {static} int notification_main_column_padding_top
+ {static} int notification_media_narrow_margin
+ {static} int notification_right_icon_size
+ {static} int notification_right_side_padding_top
+ {static} int notification_small_icon_background_padding
+ {static} int notification_small_icon_size_as_large
+ {static} int notification_subtext_size
+ {static} int notification_top_pad
+ {static} int notification_top_pad_large_text
- <<Create>> dimen()
}
class android.support.v4.R.drawable {
+ {static} int notification_action_background
+ {static} int notification_bg
+ {static} int notification_bg_low
+ {static} int notification_bg_low_normal
+ {static} int notification_bg_low_pressed
+ {static} int notification_bg_normal
+ {static} int notification_bg_normal_pressed
+ {static} int notification_icon_background
+ {static} int notification_template_icon_bg
+ {static} int notification_template_icon_low_bg
+ {static} int notification_tile_bg
+ {static} int notify_panel_notification_icon_bg
- <<Create>> drawable()
}
class android.support.v4.R.id {
+ {static} int action0
+ {static} int action_container
+ {static} int action_divider
+ {static} int action_image
+ {static} int action_text
+ {static} int actions
+ {static} int async
+ {static} int blocking
+ {static} int cancel_action
+ {static} int chronometer
+ {static} int end_padder
+ {static} int forever
+ {static} int icon
+ {static} int icon_group
+ {static} int info
+ {static} int italic
+ {static} int line1
+ {static} int line3
+ {static} int media_actions
+ {static} int normal
+ {static} int notification_background
+ {static} int notification_main_column
+ {static} int notification_main_column_container
+ {static} int right_icon
+ {static} int right_side
+ {static} int status_bar_latest_event_content
+ {static} int text
+ {static} int text2
+ {static} int time
+ {static} int title
- <<Create>> id()
}
class android.support.v4.R.integer {
+ {static} int cancel_button_image_alpha
+ {static} int status_bar_notification_info_maxnum
- <<Create>> integer()
}
class android.support.v4.R.layout {
+ {static} int notification_action
+ {static} int notification_action_tombstone
+ {static} int notification_media_action
+ {static} int notification_media_cancel_action
+ {static} int notification_template_big_media
+ {static} int notification_template_big_media_custom
+ {static} int notification_template_big_media_narrow
+ {static} int notification_template_big_media_narrow_custom
+ {static} int notification_template_custom_big
+ {static} int notification_template_icon_group
+ {static} int notification_template_lines_media
+ {static} int notification_template_media
+ {static} int notification_template_media_custom
+ {static} int notification_template_part_chronometer
+ {static} int notification_template_part_time
- <<Create>> layout()
}
class android.support.v4.R.string {
+ {static} int status_bar_notification_info_overflow
- <<Create>> string()
}
class android.support.v4.R.style {
+ {static} int TextAppearance_Compat_Notification
+ {static} int TextAppearance_Compat_Notification_Info
+ {static} int TextAppearance_Compat_Notification_Info_Media
+ {static} int TextAppearance_Compat_Notification_Line2
+ {static} int TextAppearance_Compat_Notification_Line2_Media
+ {static} int TextAppearance_Compat_Notification_Media
+ {static} int TextAppearance_Compat_Notification_Time
+ {static} int TextAppearance_Compat_Notification_Time_Media
+ {static} int TextAppearance_Compat_Notification_Title
+ {static} int TextAppearance_Compat_Notification_Title_Media
+ {static} int Widget_Compat_NotificationActionContainer
+ {static} int Widget_Compat_NotificationActionText
- <<Create>> style()
}
class android.support.v4.R.styleable {
+ {static} int[] FontFamily
+ {static} int FontFamily_fontProviderAuthority
+ {static} int FontFamily_fontProviderCerts
+ {static} int FontFamily_fontProviderFetchStrategy
+ {static} int FontFamily_fontProviderFetchTimeout
+ {static} int FontFamily_fontProviderPackage
+ {static} int FontFamily_fontProviderQuery
+ {static} int[] FontFamilyFont
+ {static} int FontFamilyFont_font
+ {static} int FontFamilyFont_fontStyle
+ {static} int FontFamilyFont_fontWeight
- <<Create>> styleable()
}
class de.yaacc.upnp.server.contentdirectory.MusicArtistsFolderBrowser {
+ <<Create>> MusicArtistsFolderBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
- Integer getSize(YaaccContentDirectory,String)
- Integer getMusicTrackSize(YaaccContentDirectory,String)
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
class org.fourthline.cling.support.lastchange.EventedValueUnsignedIntegerTwoBytes {
+ <<Create>> EventedValueUnsignedIntegerTwoBytes(UnsignedIntegerTwoBytes)
+ <<Create>> EventedValueUnsignedIntegerTwoBytes(Map.Entry<String,String>[])
# Datatype getDatatype()
}
class org.fourthline.cling.model.message.header.UDNHeader {
+ <<Create>> UDNHeader()
+ <<Create>> UDNHeader(UDN)
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.support.model.dlna.message.DLNAHeaders {
- {static} Logger log
# Map<DLNAHeader.Type,List<UpnpHeader>> parsedDLNAHeaders
+ <<Create>> DLNAHeaders()
+ <<Create>> DLNAHeaders(Map<String,List<String>>)
+ <<Create>> DLNAHeaders(ByteArrayInputStream)
# void parseHeaders()
# void addParsedValue(DLNAHeader.Type,UpnpHeader)
+ List<String> put(String,List<String>)
+ void add(String,String)
+ List<String> remove(Object)
+ void clear()
+ boolean containsKey(DLNAHeader.Type)
+ List<UpnpHeader> get(DLNAHeader.Type)
+ void add(DLNAHeader.Type,UpnpHeader)
+ void remove(DLNAHeader.Type)
+ UpnpHeader[] getAsArray(DLNAHeader.Type)
+ UpnpHeader getFirstHeader(DLNAHeader.Type)
+ H getFirstHeader(DLNAHeader.Type,Class<H>)
+ void log()
}
class org.fourthline.cling.support.model.PersonWithRole {
- String role
+ <<Create>> PersonWithRole(String)
+ <<Create>> PersonWithRole(String,String)
+ String getRole()
+ void setOnElement(Element)
}
class org.fourthline.cling.controlpoint.event.Search {
# UpnpHeader searchType
# int mxSeconds
+ <<Create>> Search()
+ <<Create>> Search(UpnpHeader)
+ <<Create>> Search(UpnpHeader,int)
+ <<Create>> Search(int)
+ UpnpHeader getSearchType()
+ int getMxSeconds()
}
class org.fourthline.cling.test.control.ActionXMLProcessingTest {
+ {static} String ENCODED_REQUEST
+ {static} String ALIAS_ENCODED_REQUEST
+ {static} Object[][] processors()
+ void writeReadRequest(SOAPActionProcessor)
+ void writeReadResponse(SOAPActionProcessor)
+ void writeFailureReadFailure(SOAPActionProcessor)
+ void readEncodedRequest(SOAPActionProcessor)
+ void readEncodedRequestWithAlias(SOAPActionProcessor)
+ void writeDecodedResponse(SOAPActionProcessor)
}
class org.fourthline.cling.model.message.header.AVClientInfoHeader {
+ <<Create>> AVClientInfoHeader()
+ <<Create>> AVClientInfoHeader(String)
+ void setString(String)
+ String getString()
}
class de.yaacc.upnp.server.contentdirectory.MusicFolderBrowser {
+ <<Create>> MusicFolderBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
abstract class org.seamless.xml.DOM {
+ {static} URI XML_SCHEMA_NAMESPACE
+ {static} String CDATA_BEGIN
+ {static} String CDATA_END
- Document dom
+ <<Create>> DOM(Document)
+ Document getW3CDocument()
+ Element createRoot(String)
+ {abstract}String getRootElementNamespace()
+ {abstract}DOMElement getRoot(XPath)
+ {abstract}DOM copy()
}
class org.fourthline.cling.support.model.item.MusicVideoClip {
+ {static} Class CLASS
+ <<Create>> MusicVideoClip()
+ <<Create>> MusicVideoClip(Item)
+ <<Create>> MusicVideoClip(String,Container,String,String,Res)
+ <<Create>> MusicVideoClip(String,String,String,String,Res)
+ PersonWithRole getFirstArtist()
+ PersonWithRole[] getArtists()
+ MusicVideoClip setArtists(PersonWithRole[])
+ StorageMedium getStorageMedium()
+ MusicVideoClip setStorageMedium(StorageMedium)
+ String getAlbum()
+ MusicVideoClip setAlbum(String)
+ String getFirstScheduledStartTime()
+ String[] getScheduledStartTimes()
+ MusicVideoClip setScheduledStartTimes(String[])
+ String getFirstScheduledEndTime()
+ String[] getScheduledEndTimes()
+ MusicVideoClip setScheduledEndTimes(String[])
+ Person getFirstContributor()
+ Person[] getContributors()
+ MusicVideoClip setContributors(Person[])
+ String getDate()
+ MusicVideoClip setDate(String)
}
abstract class org.fourthline.cling.support.igd.callback.GetExternalIP {
+ <<Create>> GetExternalIP(Service)
+ void success(ActionInvocation)
# {abstract}void success(String)
}
abstract class org.fourthline.cling.support.avtransport.callback.Previous {
- {static} Logger log
# <<Create>> Previous(ActionInvocation,ControlPoint)
# <<Create>> Previous(ActionInvocation)
+ <<Create>> Previous(Service)
+ <<Create>> Previous(UnsignedIntegerFourBytes,Service)
+ void success(ActionInvocation)
}
class org.seamless.util.Pager {
- Long numOfRecords
- Integer page
- Long pageSize
+ <<Create>> Pager()
+ <<Create>> Pager(Long)
+ <<Create>> Pager(Long,Integer)
+ <<Create>> Pager(Long,Integer,Long)
+ Long getNumOfRecords()
+ void setNumOfRecords(Long)
+ Integer getPage()
+ void setPage(Integer)
+ Long getPageSize()
+ void setPageSize(Long)
+ int getNextPage()
+ int getPreviousPage()
+ int getFirstPage()
+ long getIndexRangeBegin()
+ long getIndexRangeEnd()
+ long getLastPage()
+ boolean isPreviousPageAvailable()
+ boolean isNextPageAvailable()
+ boolean isSeveralPages()
+ String toString()
}
class org.fourthline.cling.support.model.item.MusicTrack {
+ {static} Class CLASS
+ <<Create>> MusicTrack()
+ <<Create>> MusicTrack(Item)
+ <<Create>> MusicTrack(String,Container,String,String,String,String,Res)
+ <<Create>> MusicTrack(String,Container,String,String,String,PersonWithRole,Res)
+ <<Create>> MusicTrack(String,String,String,String,String,String,Res)
+ <<Create>> MusicTrack(String,String,String,String,String,PersonWithRole,Res)
+ PersonWithRole getFirstArtist()
+ PersonWithRole[] getArtists()
+ MusicTrack setArtists(PersonWithRole[])
+ String getAlbum()
+ MusicTrack setAlbum(String)
+ Integer getOriginalTrackNumber()
+ MusicTrack setOriginalTrackNumber(Integer)
+ String getFirstPlaylist()
+ String[] getPlaylists()
+ MusicTrack setPlaylists(String[])
+ StorageMedium getStorageMedium()
+ MusicTrack setStorageMedium(StorageMedium)
+ Person getFirstContributor()
+ Person[] getContributors()
+ MusicTrack setContributors(Person[])
+ String getDate()
+ MusicTrack setDate(String)
}
class org.fourthline.cling.support.lastchange.Event {
# List<InstanceID> instanceIDs
+ <<Create>> Event()
+ <<Create>> Event(List<InstanceID>)
+ List<InstanceID> getInstanceIDs()
+ InstanceID getInstanceID(UnsignedIntegerFourBytes)
+ void clear()
+ void setEventedValue(UnsignedIntegerFourBytes,EventedValue)
+ EV getEventedValue(UnsignedIntegerFourBytes,Class<EV>)
+ boolean hasChanges()
}
class org.fourthline.cling.test.data.SampleServiceOne {
+ {static} URL getDescriptorURL()
+ {static} URI getThisDescriptorURI()
+ {static} URI getThisControlURI()
+ {static} URI getThisEventSubscriptionURI()
+ {static} ServiceId getThisServiceId()
+ {static} ServiceType getThisServiceType()
+ {static} void assertMatch(Service,Service)
+ ServiceType getServiceType()
+ ServiceId getServiceId()
+ URI getDescriptorURI()
+ URI getControlURI()
+ URI getEventSubscriptionURI()
+ Action[] getActions()
+ StateVariable[] getStateVariables()
}
class example.localservice.SwitchPowerAnnotatedClass {
- boolean power
+ void setTarget(boolean)
+ boolean getTarget()
+ boolean getStatus()
}
class de.yaacc.upnp.server.YaaccMediaReceiverRegistrarService {
- UpnpClient upnpClient
+ <<Create>> YaaccMediaReceiverRegistrarService(UpnpClient)
}
interface org.fourthline.cling.binding.AllowedValueProvider {
+ String[] getValues()
}
class org.fourthline.cling.test.model.IncompatibilityTest {
+ void validateMSFTServiceType()
+ void validateAzureusServiceId()
+ void validatePSAudioBridgeServiceId()
+ void validateSpacesInServiceType()
+ void validateIntelServiceId()
+ void readColonRelativePaths()
+ void validateCallbackURILength()
+ void parseUDADeviceTypeFractions()
+ void parseInvalidDLNADoc()
+ void invalidStateVarDefaultValue()
+ void switchedMinimumMaximumValueRange()
+ void invalidIntegerValue()
+ void parseBrokenServiceType()
+ void parseBrokenServiceId()
+ void parseServiceNameAsServiceId()
+ void parseEyeTVDeviceType()
+ void parseEyeTVServiceType()
+ void parseCeytonInfiniTVServiceType()
+ void parseEyeconServiceId()
+ void parseEscientDeviceType()
+ void parseKodakServiceId()
}
class org.fourthline.cling.test.model.IconTest {
+ void validIcons()
+ void invalidIcons()
}
class org.fourthline.cling.support.model.dlna.message.header.SupportedHeader {
+ <<Create>> SupportedHeader()
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.support.connectionmanager.ConnectionManagerException {
+ <<Create>> ConnectionManagerException(int,String)
+ <<Create>> ConnectionManagerException(int,String,Throwable)
+ <<Create>> ConnectionManagerException(ErrorCode,String)
+ <<Create>> ConnectionManagerException(ErrorCode)
+ <<Create>> ConnectionManagerException(ConnectionManagerErrorCode,String)
+ <<Create>> ConnectionManagerException(ConnectionManagerErrorCode)
}
class org.fourthline.cling.support.connectionmanager.ConnectionManagerService {
- {static} Logger log
# PropertyChangeSupport propertyChangeSupport
# Map<Integer,ConnectionInfo> activeConnections
# ProtocolInfos sourceProtocolInfo
# ProtocolInfos sinkProtocolInfo
+ <<Create>> ConnectionManagerService()
+ <<Create>> ConnectionManagerService(ProtocolInfos,ProtocolInfos)
+ <<Create>> ConnectionManagerService(ConnectionInfo)
+ <<Create>> ConnectionManagerService(ProtocolInfos,ProtocolInfos,ConnectionInfo)
+ <<Create>> ConnectionManagerService(PropertyChangeSupport,ProtocolInfos,ProtocolInfos,ConnectionInfo)
+ PropertyChangeSupport getPropertyChangeSupport()
+ ConnectionInfo getCurrentConnectionInfo(int)
+ CSV<UnsignedIntegerFourBytes> getCurrentConnectionIDs()
+ void getProtocolInfo()
+ ProtocolInfos getSourceProtocolInfo()
+ ProtocolInfos getSinkProtocolInfo()
}
class de.yaacc.browser.ContentItemPlayTask {
+ {static} int PLAY_CURRENT
+ {static} int PLAY_ALL
- ContentListClickListener parent
+ <<Create>> ContentItemPlayTask(ContentListClickListener)
+ Void doInBackground(Integer)
}
class org.fourthline.cling.support.renderingcontrol.lastchange.ChannelVolume {
# Channel channel
# Integer volume
+ <<Create>> ChannelVolume(Channel,Integer)
+ Channel getChannel()
+ Integer getVolume()
+ String toString()
}
class org.fourthline.cling.model.message.discovery.OutgoingSearchResponseServiceType {
+ <<Create>> OutgoingSearchResponseServiceType(IncomingDatagramMessage,Location,LocalDevice,ServiceType)
}
class org.fourthline.cling.test.gena.IncomingSubscriptionLifecycleTest {
+ void subscriptionLifecycle()
+ void subscriptionLifecycleFailedResponse()
}
class org.fourthline.cling.test.control.InvalidActionXMLProcessingTest {
+ {static} Object[][] invalidXMLFile()
+ {static} Object[][] invalidRecoverableXMLFile()
+ {static} Object[][] invalidUnrecoverableXMLFile()
+ void readRequestDefaultFailure(String)
+ void readRequestRecoverableFailure(String)
+ void readRequestRecoveringFailure(String)
+ void readRequestPull(String)
+ void readRequestRecovering(String)
+ void uppercaseOutputArguments()
# void readRequest(String,UpnpService)
+ StreamRequestMessage createRequestMessage(Action,String)
}
class org.fourthline.cling.registry.event.DeviceDiscovery {
# D device
+ <<Create>> DeviceDiscovery(D)
+ D getDevice()
}
class de.yaacc.upnp.server.contentdirectory.RootFolderBrowser {
+ <<Create>> RootFolderBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
- Integer getSize()
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
- boolean isServingImages()
- boolean isServingVideos()
- boolean isServingMusic()
}
class org.fourthline.cling.model.types.csv.CSVInteger {
+ <<Create>> CSVInteger()
+ <<Create>> CSVInteger(String)
}
abstract class de.yaacc.upnp.callback.avtransport.SetSyncOffset {
- {static} Logger log
+ <<Create>> SetSyncOffset(UnsignedIntegerFourBytes,Service,String)
+ void success(ActionInvocation)
}
class org.fourthline.cling.android.AndroidNetworkAddressFactory {
- {static} Logger log
+ <<Create>> AndroidNetworkAddressFactory(int)
# boolean requiresNetworkInterface()
# boolean isUsableAddress(NetworkInterface,InetAddress)
+ InetAddress getLocalAddress(NetworkInterface,boolean,InetAddress)
# void discoverNetworkInterfaces()
}
class org.fourthline.cling.model.types.csv.CSVString {
+ <<Create>> CSVString()
+ <<Create>> CSVString(String)
}
enum de.yaacc.browser.BrowserTabs {
+  SERVER
+  CONTENT
+  RECEIVER
+  PLAYER
+ {static} BrowserTabs valueOf(int)
}
class org.seamless.http.RequestInfo {
- {static} Logger log
+ {static} boolean isPS3Request(String,String)
+ {static} boolean isAndroidBubbleUPnPRequest(String)
+ {static} boolean isJRiverRequest(String)
+ {static} boolean isWMPRequest(String)
+ {static} boolean isXbox360Request(String,String)
}
class org.fourthline.cling.model.meta.ActionArgument {
- {static} Logger log
- String name
- String[] aliases
- String relatedStateVariableName
- Direction direction
- boolean returnValue
- Action<S> action
+ <<Create>> ActionArgument(String,String,Direction)
+ <<Create>> ActionArgument(String,String[],String,Direction)
+ <<Create>> ActionArgument(String,String,Direction,boolean)
+ <<Create>> ActionArgument(String,String[],String,Direction,boolean)
+ String getName()
+ String[] getAliases()
+ boolean isNameOrAlias(String)
+ String getRelatedStateVariableName()
+ Direction getDirection()
+ boolean isReturnValue()
+ Action<S> getAction()
~ void setAction(Action<S>)
+ Datatype getDatatype()
+ List<ValidationError> validate()
+ ActionArgument<S> deepCopy()
+ String toString()
}
enum org.fourthline.cling.model.meta.Direction {
+  IN
+  OUT
}
class de.yaacc.databinding.ActivityImageViewerBinding {
- RelativeLayout rootView
+ ImageView imageView
+ RelativeLayout layout
- <<Create>> ActivityImageViewerBinding(RelativeLayout,ImageView,RelativeLayout)
+ RelativeLayout getRoot()
+ {static} ActivityImageViewerBinding inflate(LayoutInflater)
+ {static} ActivityImageViewerBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityImageViewerBinding bind(View)
}
class org.fourthline.cling.model.message.header.TimeoutHeader {
+ {static} Integer INFINITE_VALUE
+ {static} Pattern PATTERN
+ <<Create>> TimeoutHeader()
+ <<Create>> TimeoutHeader(int)
+ <<Create>> TimeoutHeader(Integer)
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.binding.annotations.AnnotationLocalServiceBinder {
- {static} Logger log
+ LocalService read(Class<?>)
+ LocalService read(Class<?>,ServiceId,ServiceType,boolean,Class[])
+ LocalService read(Class<?>,ServiceId,ServiceType,boolean,Set<Class>)
# Set<Class> readStringConvertibleTypes(Class[])
# Map<StateVariable,StateVariableAccessor> readStateVariables(Class<?>,Set<Class>)
# Map<Action,ActionExecutor> readActions(Class<?>,Map<StateVariable,StateVariableAccessor>,Set<Class>)
# boolean isActionExcluded(Action)
~ {static} String toUpnpStateVariableName(String)
~ {static} String toJavaStateVariableName(String)
~ {static} String toUpnpActionName(String)
~ {static} String toJavaActionName(String)
}
class org.fourthline.cling.test.data.SampleDeviceEmbeddedOne {
+ <<Create>> SampleDeviceEmbeddedOne(DeviceIdentity,Service,Device)
+ DeviceType getDeviceType()
+ DeviceDetails getDeviceDetails()
+ DeviceDetailsProvider getDeviceDetailsProvider()
+ Icon[] getIcons()
+ {static} UDN getEmbeddedOneUDN()
}
class org.fourthline.cling.mock.MockUpnpService {
# UpnpServiceConfiguration configuration
# ControlPoint controlPoint
# ProtocolFactory protocolFactory
# Registry registry
# MockRouter router
# NetworkAddressFactory networkAddressFactory
+ <<Create>> MockUpnpService()
+ <<Create>> MockUpnpService(MockUpnpServiceConfiguration)
+ <<Create>> MockUpnpService(boolean,boolean)
+ <<Create>> MockUpnpService(boolean,boolean,boolean)
+ <<Create>> MockUpnpService(boolean,MockUpnpServiceConfiguration)
# ProtocolFactory createProtocolFactory(UpnpService,boolean)
# MockRouter createRouter()
+ UpnpServiceConfiguration getConfiguration()
+ ControlPoint getControlPoint()
+ ProtocolFactory getProtocolFactory()
+ Registry getRegistry()
+ MockRouter getRouter()
+ void shutdown()
}
class org.fourthline.cling.mock.MockUpnpService.MockProtocolFactory {
- boolean sendsAlive
+ <<Create>> MockProtocolFactory(UpnpService,boolean)
+ SendingNotificationAlive createSendingNotificationAlive(LocalDevice)
+ SendingSearch createSendingSearch(UpnpHeader,int)
}
abstract class org.fourthline.cling.support.avtransport.impl.state.NoMediaPresent {
- {static} Logger log
+ <<Create>> NoMediaPresent(T)
+ void onEntry()
+ {abstract}Class<? extends AbstractState> setTransportURI(URI,String)
+ TransportAction[] getCurrentTransportActions()
}
class org.fourthline.cling.model.message.discovery.OutgoingNotificationRequestUDN {
+ <<Create>> OutgoingNotificationRequestUDN(Location,LocalDevice,NotificationSubtype)
}
class org.fourthline.cling.registry.RegistrationException {
+ List<ValidationError> errors
+ <<Create>> RegistrationException(String)
+ <<Create>> RegistrationException(String,Throwable)
+ <<Create>> RegistrationException(String,List<ValidationError>)
+ List<ValidationError> getErrors()
}
class org.fourthline.cling.model.message.UpnpHeaders {
- {static} Logger log
# Map<UpnpHeader.Type,List<UpnpHeader>> parsedHeaders
+ <<Create>> UpnpHeaders()
+ <<Create>> UpnpHeaders(Map<String,List<String>>)
+ <<Create>> UpnpHeaders(ByteArrayInputStream)
+ <<Create>> UpnpHeaders(boolean)
# void parseHeaders()
# void addParsedValue(UpnpHeader.Type,UpnpHeader)
+ List<String> put(String,List<String>)
+ void add(String,String)
+ List<String> remove(Object)
+ void clear()
+ boolean containsKey(UpnpHeader.Type)
+ List<UpnpHeader> get(UpnpHeader.Type)
+ void add(UpnpHeader.Type,UpnpHeader)
+ void remove(UpnpHeader.Type)
+ UpnpHeader[] getAsArray(UpnpHeader.Type)
+ UpnpHeader getFirstHeader(UpnpHeader.Type)
+ H getFirstHeader(UpnpHeader.Type,Class<H>)
+ String getFirstHeaderString(UpnpHeader.Type)
+ void log()
}
class org.fourthline.cling.binding.annotations.AnnotationActionBinder {
- {static} Logger log
# UpnpAction annotation
# Method method
# Map<StateVariable,StateVariableAccessor> stateVariables
# Set<Class> stringConvertibleTypes
+ <<Create>> AnnotationActionBinder(Method,Map<StateVariable,StateVariableAccessor>,Set<Class>)
+ UpnpAction getAnnotation()
+ Map<StateVariable,StateVariableAccessor> getStateVariables()
+ Method getMethod()
+ Set<Class> getStringConvertibleTypes()
+ Action appendAction(Map<Action,ActionExecutor>)
# ActionExecutor createExecutor(Map<ActionArgument<LocalService>,StateVariableAccessor>)
# List<ActionArgument> createInputArguments()
# Map<ActionArgument<LocalService>,StateVariableAccessor> createOutputArguments()
# StateVariableAccessor findOutputArgumentAccessor(StateVariable,String,boolean)
# StateVariable findRelatedStateVariable(String,String,String)
# void validateType(StateVariable,Class)
# StateVariable getStateVariable(String)
}
interface org.fourthline.cling.model.message.control.ActionRequestMessage {
}
class de.yaacc.upnp.server.contentdirectory.ImagesFolderBrowser {
+ <<Create>> ImagesFolderBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
interface org.fourthline.cling.support.lastchange.LastChangeDelegator {
+ LastChange getLastChange()
+ void appendCurrentState(LastChange,UnsignedIntegerFourBytes)
+ {abstract}UnsignedIntegerFourBytes[] getCurrentInstanceIds()
}
class org.fourthline.cling.model.types.UDADeviceType {
+ {static} String DEFAULT_NAMESPACE
+ {static} Pattern PATTERN
+ <<Create>> UDADeviceType(String)
+ <<Create>> UDADeviceType(String,int)
+ {static} UDADeviceType valueOf(String)
}
class de.yaacc.upnp.YaaccStreamingClientConfigurationImpl {
+ <<Create>> YaaccStreamingClientConfigurationImpl(ExecutorService)
+ <<Create>> YaaccStreamingClientConfigurationImpl(ExecutorService,int)
+ int getRequestRetryCount()
+ String getUserAgentValue(int,int)
}
class org.fourthline.cling.test.data.SampleUSNHeaders {
+ {static} void assertUSNHeaders(List<OutgoingDatagramMessage>,LocalDevice,LocalDevice,UpnpHeader.Type)
}
class org.fourthline.cling.test.data.SampleDeviceRoot {
+ <<Create>> SampleDeviceRoot(DeviceIdentity,Service,Device)
+ {static} UDN getRootUDN()
+ {static} URI getDeviceDescriptorURI()
+ {static} URL getDeviceDescriptorURL()
+ {static} void assertMatch(Device,Device)
+ {static} void assertMatch(Device,Device,boolean)
+ {static} void assertLocalResourcesMatch(Resource[])
# {static} Resource getLocalResource(Resource[],URI)
# {static} void assertDeviceMatch(Device,Device)
# {static} void assertDeviceMatch(Device,Device,boolean)
+ DeviceType getDeviceType()
+ DeviceDetails getDeviceDetails()
+ DeviceDetailsProvider getDeviceDetailsProvider()
+ Icon[] getIcons()
}
class de.yaacc.databinding.ActivityYaaccLogBinding {
- RelativeLayout rootView
+ TextView yaaccLogContent
+ ScrollView yaaccLogScrollView
- <<Create>> ActivityYaaccLogBinding(RelativeLayout,TextView,ScrollView)
+ RelativeLayout getRoot()
+ {static} ActivityYaaccLogBinding inflate(LayoutInflater)
+ {static} ActivityYaaccLogBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityYaaccLogBinding bind(View)
}
class org.fourthline.cling.binding.annotations.AnnotationStateVariableBinder {
- {static} Logger log
# UpnpStateVariable annotation
# String name
# StateVariableAccessor accessor
# Set<Class> stringConvertibleTypes
+ <<Create>> AnnotationStateVariableBinder(UpnpStateVariable,String,StateVariableAccessor,Set<Class>)
+ UpnpStateVariable getAnnotation()
+ String getName()
+ StateVariableAccessor getAccessor()
+ Set<Class> getStringConvertibleTypes()
# StateVariable createStateVariable()
# Datatype createDatatype()
# String createDefaultValue(Datatype)
# String[] getAllowedValues(Class)
# StateVariableAllowedValueRange getAllowedValueRange(long,long,long)
# String[] getAllowedValuesFromProvider()
# StateVariableAllowedValueRange getAllowedRangeFromProvider()
}
class org.fourthline.cling.model.meta.StateVariableAllowedValueRange {
- {static} Logger log
- long minimum
- long maximum
- long step
+ <<Create>> StateVariableAllowedValueRange(long,long)
+ <<Create>> StateVariableAllowedValueRange(long,long,long)
+ long getMinimum()
+ long getMaximum()
+ long getStep()
+ boolean isInRange(long)
+ List<ValidationError> validate()
+ String toString()
}
class org.fourthline.cling.model.types.DateTimeDatatype {
# String[] readFormats
# String writeFormat
+ <<Create>> DateTimeDatatype(String[],String)
+ Calendar valueOf(String)
+ String getString(Calendar)
# String normalizeTimeZone(String)
# Date getDateValue(String,String[])
# TimeZone getTimeZone()
}
class org.fourthline.cling.test.ssdp.NotifyAliveConcurrentTest {
}
class org.fourthline.cling.model.message.discovery.OutgoingNotificationRequestDeviceType {
+ <<Create>> OutgoingNotificationRequestDeviceType(Location,LocalDevice,NotificationSubtype)
}
class de.yaacc.upnp.server.contentdirectory.MusicArtistFolderBrowser {
+ <<Create>> MusicArtistFolderBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
- String getName(YaaccContentDirectory,String)
- Integer getSize(YaaccContentDirectory,String)
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
enum org.fourthline.cling.support.avtransport.AVTransportErrorCode {
+  TRANSITION_NOT_AVAILABLE
+  NO_CONTENTS
+  READ_ERROR
+  PLAYBACK_FORMAT_NOT_SUPPORTED
+  TRANSPORT_LOCKED
+  WRITE_ERROR
+  MEDIA_PROTECTED
+  RECORD_FORMAT_NOT_SUPPORTED
+  MEDIA_FULL
+  SEEKMODE_NOT_SUPPORTED
+  ILLEGAL_SEEK_TARGET
+  PLAYMODE_NOT_SUPPORTED
+  RECORDQUALITYMODE_NOT_SUPPORTED
+  ILLEGAL_MIME_TYPE
+  CONTENT_BUSY
+  RESOURCE_NOT_FOUND
+  INVALID_INSTANCE_ID
- int code
- String description
~ <<Create>> AVTransportErrorCode(int,String)
+ int getCode()
+ String getDescription()
+ {static} AVTransportErrorCode getByCode(int)
}
class org.fourthline.cling.model.resource.ServiceDescriptorResource {
+ <<Create>> ServiceDescriptorResource(URI,LocalService)
}
class org.fourthline.cling.support.model.item.VideoItem {
+ {static} Class CLASS
+ <<Create>> VideoItem()
+ <<Create>> VideoItem(Item)
+ <<Create>> VideoItem(String,Container,String,String,Res)
+ <<Create>> VideoItem(String,String,String,String,Res)
+ String getFirstGenre()
+ String[] getGenres()
+ VideoItem setGenres(String[])
+ String getDescription()
+ VideoItem setDescription(String)
+ String getLongDescription()
+ VideoItem setLongDescription(String)
+ Person getFirstProducer()
+ Person[] getProducers()
+ VideoItem setProducers(Person[])
+ String getRating()
+ VideoItem setRating(String)
+ PersonWithRole getFirstActor()
+ PersonWithRole[] getActors()
+ VideoItem setActors(PersonWithRole[])
+ Person getFirstDirector()
+ Person[] getDirectors()
+ VideoItem setDirectors(Person[])
+ Person getFirstPublisher()
+ Person[] getPublishers()
+ VideoItem setPublishers(Person[])
+ String getLanguage()
+ VideoItem setLanguage(String)
+ URI getFirstRelation()
+ URI[] getRelations()
+ VideoItem setRelations(URI[])
}
class org.seamless.util.Iterators {
}
class org.seamless.util.Iterators.Empty {
+ boolean hasNext()
+ E next()
+ void remove()
}
class org.seamless.util.Iterators.Singular {
# E element
# int current
+ <<Create>> Singular(E)
+ boolean hasNext()
+ E next()
+ void remove()
}
abstract class org.seamless.util.Iterators.Synchronized {
~ Iterator<E> wrapped
~ int nextIndex
~ boolean removedCurrent
+ <<Create>> Synchronized(Collection<E>)
+ boolean hasNext()
+ E next()
+ void remove()
# {abstract}void synchronizedRemove(int)
}
class org.fourthline.cling.support.messagebox.model.MessageScheduleReminder {
- DateTime startTime
- NumberName owner
- String subject
- DateTime endTime
- String location
- String body
+ <<Create>> MessageScheduleReminder(DateTime,NumberName,String,DateTime,String,String)
+ <<Create>> MessageScheduleReminder(DisplayType,DateTime,NumberName,String,DateTime,String,String)
+ DateTime getStartTime()
+ NumberName getOwner()
+ String getSubject()
+ DateTime getEndTime()
+ String getLocation()
+ String getBody()
+ void appendMessageElements(MessageElement)
}
class org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueChannelVolume {
+ <<Create>> EventedValueChannelVolume(ChannelVolume)
+ <<Create>> EventedValueChannelVolume(Map.Entry<String,String>[])
# ChannelVolume valueOf(Map.Entry<String,String>[])
+ Map.Entry<String,String>[] getAttributes()
+ String toString()
# Datatype getDatatype()
}
class de.yaacc.databinding.BrowseItemCheckableBinding {
- RelativeLayout rootView
+ CheckBox browseItemCheckbox
+ ImageView browseItemIcon
+ TextView browseItemName
- <<Create>> BrowseItemCheckableBinding(RelativeLayout,CheckBox,ImageView,TextView)
+ RelativeLayout getRoot()
+ {static} BrowseItemCheckableBinding inflate(LayoutInflater)
+ {static} BrowseItemCheckableBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} BrowseItemCheckableBinding bind(View)
}
class org.seamless.util.logging.SystemOutLoggingHandler {
+ <<Create>> SystemOutLoggingHandler()
+ void close()
+ void publish(LogRecord)
}
class org.seamless.util.logging.SystemOutLoggingHandler.SimpleFormatter {
+ String format(LogRecord)
+ String pad(String,int)
+ String toClassString(String,int)
}
class org.fourthline.cling.model.message.header.EventSequenceHeader {
+ <<Create>> EventSequenceHeader()
+ <<Create>> EventSequenceHeader(long)
+ void setString(String)
+ String getString()
}
class org.fourthline.cling.support.model.TransportSettings {
- PlayMode playMode
- RecordQualityMode recQualityMode
+ <<Create>> TransportSettings()
+ <<Create>> TransportSettings(PlayMode)
+ <<Create>> TransportSettings(PlayMode,RecordQualityMode)
+ PlayMode getPlayMode()
+ RecordQualityMode getRecQualityMode()
}
class de.yaacc.browser.TabBrowserActivity {
+ {static} boolean leftSettings
- {static} String[] permissions
- {static} String CURRENT_TAB_KEY
- TabLayout tabLayout
- ViewPager2 viewPager
- FragmentStateAdapter pagerAdapter
- UpnpClient upnpClient
- Intent serverService
# void onSaveInstanceState(Bundle)
- boolean checkIfAlreadyhavePermission()
- void requestForSpecificPermission()
+ void onCreate(Bundle)
+ void setCurrentTab(BrowserTabs)
- SharedPreferences getPreferences()
+ void onResume()
- Intent getYaaccUpnpServerService()
+ void onBackPressed()
+ void onCreateContextMenu(ContextMenu,View,ContextMenuInfo)
+ boolean onCreateOptionsMenu(Menu)
+ boolean onOptionsItemSelected(MenuItem)
+ void deviceAdded(Device<?,?,?>)
+ void deviceRemoved(Device<?,?,?>)
+ void deviceUpdated(Device<?,?,?>)
+ void onClick(View)
}
class de.yaacc.upnp.server.contentdirectory.ImagesByBucketNamesFolderBrowser {
+ <<Create>> ImagesByBucketNamesFolderBrowser(Context)
+ DIDLObject browseMeta(YaaccContentDirectory,String,long,long,SortCriterion[])
- Integer getSize(YaaccContentDirectory,String)
- Integer getBucketNameFolderSize(YaaccContentDirectory,String)
+ List<Container> browseContainer(YaaccContentDirectory,String,long,long,SortCriterion[])
+ List<Item> browseItem(YaaccContentDirectory,String,long,long,SortCriterion[])
}
class example.igd.PortMappingTest {
+ void addDeleteWithListener()
+ void addDeleteManually()
}
class example.igd.PortMappingTest.TestConnection {
~ boolean[] tests
# void addPortMapping(PortMapping)
# void deletePortMapping(PortMapping)
+ PortMapping getGenericPortMappingEntry(UnsignedIntegerTwoBytes)
}
class example.igd.PortMappingTest.UpnpServiceImpl {
~ <<Create>> UpnpServiceImpl(RegistryListener)
}
class org.fourthline.cling.model.types.DLNACaps {
~ String[] caps
+ <<Create>> DLNACaps(String[])
+ String[] getCaps()
+ {static} DLNACaps valueOf(String)
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
class android.support.mediacompat.R {
- <<Create>> R()
}
class android.support.mediacompat.R.attr {
+ {static} int font
+ {static} int fontProviderAuthority
+ {static} int fontProviderCerts
+ {static} int fontProviderFetchStrategy
+ {static} int fontProviderFetchTimeout
+ {static} int fontProviderPackage
+ {static} int fontProviderQuery
+ {static} int fontStyle
+ {static} int fontWeight
- <<Create>> attr()
}
class android.support.mediacompat.R.bool {
+ {static} int abc_action_bar_embed_tabs
- <<Create>> bool()
}
class android.support.mediacompat.R.color {
+ {static} int notification_action_color_filter
+ {static} int notification_icon_bg_color
+ {static} int notification_material_background_media_default_color
+ {static} int primary_text_default_material_dark
+ {static} int ripple_material_light
+ {static} int secondary_text_default_material_dark
+ {static} int secondary_text_default_material_light
- <<Create>> color()
}
class android.support.mediacompat.R.dimen {
+ {static} int compat_button_inset_horizontal_material
+ {static} int compat_button_inset_vertical_material
+ {static} int compat_button_padding_horizontal_material
+ {static} int compat_button_padding_vertical_material
+ {static} int compat_control_corner_material
+ {static} int notification_action_icon_size
+ {static} int notification_action_text_size
+ {static} int notification_big_circle_margin
+ {static} int notification_content_margin_start
+ {static} int notification_large_icon_height
+ {static} int notification_large_icon_width
+ {static} int notification_main_column_padding_top
+ {static} int notification_media_narrow_margin
+ {static} int notification_right_icon_size
+ {static} int notification_right_side_padding_top
+ {static} int notification_small_icon_background_padding
+ {static} int notification_small_icon_size_as_large
+ {static} int notification_subtext_size
+ {static} int notification_top_pad
+ {static} int notification_top_pad_large_text
- <<Create>> dimen()
}
class android.support.mediacompat.R.drawable {
+ {static} int notification_action_background
+ {static} int notification_bg
+ {static} int notification_bg_low
+ {static} int notification_bg_low_normal
+ {static} int notification_bg_low_pressed
+ {static} int notification_bg_normal
+ {static} int notification_bg_normal_pressed
+ {static} int notification_icon_background
+ {static} int notification_template_icon_bg
+ {static} int notification_template_icon_low_bg
+ {static} int notification_tile_bg
+ {static} int notify_panel_notification_icon_bg
- <<Create>> drawable()
}
class android.support.mediacompat.R.id {
+ {static} int action0
+ {static} int action_container
+ {static} int action_divider
+ {static} int action_image
+ {static} int action_text
+ {static} int actions
+ {static} int async
+ {static} int blocking
+ {static} int cancel_action
+ {static} int chronometer
+ {static} int end_padder
+ {static} int forever
+ {static} int icon
+ {static} int icon_group
+ {static} int info
+ {static} int italic
+ {static} int line1
+ {static} int line3
+ {static} int media_actions
+ {static} int normal
+ {static} int notification_background
+ {static} int notification_main_column
+ {static} int notification_main_column_container
+ {static} int right_icon
+ {static} int right_side
+ {static} int status_bar_latest_event_content
+ {static} int text
+ {static} int text2
+ {static} int time
+ {static} int title
- <<Create>> id()
}
class android.support.mediacompat.R.integer {
+ {static} int cancel_button_image_alpha
+ {static} int status_bar_notification_info_maxnum
- <<Create>> integer()
}
class android.support.mediacompat.R.layout {
+ {static} int notification_action
+ {static} int notification_action_tombstone
+ {static} int notification_media_action
+ {static} int notification_media_cancel_action
+ {static} int notification_template_big_media
+ {static} int notification_template_big_media_custom
+ {static} int notification_template_big_media_narrow
+ {static} int notification_template_big_media_narrow_custom
+ {static} int notification_template_custom_big
+ {static} int notification_template_icon_group
+ {static} int notification_template_lines_media
+ {static} int notification_template_media
+ {static} int notification_template_media_custom
+ {static} int notification_template_part_chronometer
+ {static} int notification_template_part_time
- <<Create>> layout()
}
class android.support.mediacompat.R.string {
+ {static} int status_bar_notification_info_overflow
- <<Create>> string()
}
class android.support.mediacompat.R.style {
+ {static} int TextAppearance_Compat_Notification
+ {static} int TextAppearance_Compat_Notification_Info
+ {static} int TextAppearance_Compat_Notification_Info_Media
+ {static} int TextAppearance_Compat_Notification_Line2
+ {static} int TextAppearance_Compat_Notification_Line2_Media
+ {static} int TextAppearance_Compat_Notification_Media
+ {static} int TextAppearance_Compat_Notification_Time
+ {static} int TextAppearance_Compat_Notification_Time_Media
+ {static} int TextAppearance_Compat_Notification_Title
+ {static} int TextAppearance_Compat_Notification_Title_Media
+ {static} int Widget_Compat_NotificationActionContainer
+ {static} int Widget_Compat_NotificationActionText
- <<Create>> style()
}
class android.support.mediacompat.R.styleable {
+ {static} int[] FontFamily
+ {static} int FontFamily_fontProviderAuthority
+ {static} int FontFamily_fontProviderCerts
+ {static} int FontFamily_fontProviderFetchStrategy
+ {static} int FontFamily_fontProviderFetchTimeout
+ {static} int FontFamily_fontProviderPackage
+ {static} int FontFamily_fontProviderQuery
+ {static} int[] FontFamilyFont
+ {static} int FontFamilyFont_font
+ {static} int FontFamilyFont_fontStyle
+ {static} int FontFamilyFont_fontWeight
- <<Create>> styleable()
}
class org.fourthline.cling.test.model.UtilTest {
# DocumentBuilderFactory documentBuilderFactory
# DocumentBuilder documentBuilder
+ <<Create>> UtilTest()
+ {static} String documentToString(Document)
+ void validUDAName()
+ void csvToString()
+ void stringToCsv()
+ void printDOM1()
+ void printDOM2()
+ void printDOM3()
+ void printDOM4()
+ void printDOM5()
+ void printDOM6()
+ void printDOM7()
+ void parseTimeStrings()
+ void parseInvalidTimeString()
}
class org.fourthline.cling.support.model.dlna.types.NormalPlayTimeRange {
+ {static} String PREFIX
- NormalPlayTime timeStart
- NormalPlayTime timeEnd
- NormalPlayTime timeDuration
+ <<Create>> NormalPlayTimeRange(long,long)
+ <<Create>> NormalPlayTimeRange(NormalPlayTime,NormalPlayTime)
+ <<Create>> NormalPlayTimeRange(NormalPlayTime,NormalPlayTime,NormalPlayTime)
+ NormalPlayTime getTimeStart()
+ NormalPlayTime getTimeEnd()
+ NormalPlayTime getTimeDuration()
+ String getString()
+ String getString(boolean)
+ {static} NormalPlayTimeRange valueOf(String)
+ {static} NormalPlayTimeRange valueOf(String,boolean)
}
class org.fourthline.cling.protocol.async.SendingNotificationByebye {
- {static} Logger log
+ <<Create>> SendingNotificationByebye(UpnpService,LocalDevice)
# void execute()
# NotificationSubtype getNotificationSubtype()
}
abstract class de.yaacc.upnp.callback.avtransport.SyncPlay {
- {static} Logger log
+ <<Create>> SyncPlay(UnsignedIntegerFourBytes,Service,String,String,String,String)
+ void success(ActionInvocation)
}
class org.seamless.xhtml.Href {
- URI uri
+ <<Create>> Href(URI)
+ URI getURI()
+ {static} Href fromString(String)
+ String toString()
+ boolean equals(Object)
+ int hashCode()
}
class org.fourthline.cling.protocol.sync.SendingRenewal {
- {static} Logger log
# RemoteGENASubscription subscription
+ <<Create>> SendingRenewal(UpnpService,RemoteGENASubscription)
# IncomingSubscribeResponseMessage executeSync()
# void onRenewalFailure()
}
class org.fourthline.cling.model.types.UDN {
- {static} Logger log
+ {static} String PREFIX
- String identifierString
+ <<Create>> UDN(String)
+ <<Create>> UDN(UUID)
+ boolean isUDA11Compliant()
+ String getIdentifierString()
+ {static} UDN valueOf(String)
+ {static} UDN uniqueSystemIdentifier(String)
+ String toString()
+ boolean equals(Object)
+ int hashCode()
}
class org.seamless.util.OS {
+ {static} boolean checkForLinux()
+ {static} boolean checkForHp()
+ {static} boolean checkForSolaris()
+ {static} boolean checkForWindows()
+ {static} boolean checkForMac()
- {static} boolean checkForPresence(String,String)
}
class org.fourthline.cling.model.message.UpnpResponse {
- int statusCode
- String statusMessage
+ <<Create>> UpnpResponse(int,String)
+ <<Create>> UpnpResponse(Status)
+ int getStatusCode()
+ String getStatusMessage()
+ boolean isFailed()
+ String getResponseDetails()
+ String toString()
}
enum org.fourthline.cling.model.message.Status {
+  OK
+  BAD_REQUEST
+  NOT_FOUND
+  METHOD_NOT_SUPPORTED
+  PRECONDITION_FAILED
+  UNSUPPORTED_MEDIA_TYPE
+  INTERNAL_SERVER_ERROR
+  NOT_IMPLEMENTED
- int statusCode
- String statusMsg
~ <<Create>> Status(int,String)
+ int getStatusCode()
+ String getStatusMsg()
+ {static} Status getByStatusCode(int)
}
class org.fourthline.cling.model.meta.Icon {
- {static} Logger log
- MimeType mimeType
- int width
- int height
- int depth
- URI uri
- byte[] data
- Device device
+ <<Create>> Icon(String,int,int,int,URI)
+ <<Create>> Icon(String,int,int,int,URL)
+ <<Create>> Icon(String,int,int,int,File)
+ <<Create>> Icon(String,int,int,int,String,InputStream)
+ <<Create>> Icon(String,int,int,int,String,byte[])
+ <<Create>> Icon(String,int,int,int,String,String)
# <<Create>> Icon(MimeType,int,int,int,URI,byte[])
+ MimeType getMimeType()
+ int getWidth()
+ int getHeight()
+ int getDepth()
+ URI getUri()
+ byte[] getData()
+ Device getDevice()
~ void setDevice(Device)
+ List<ValidationError> validate()
+ Icon deepCopy()
+ String toString()
}
abstract class org.fourthline.cling.transport.spi.AbstractStreamClient {
- {static} Logger log
+ StreamResponseMessage sendRequest(StreamRequestMessage)
# {abstract}REQUEST createRequest(StreamRequestMessage)
# {abstract}Callable<StreamResponseMessage> createCallable(StreamRequestMessage,REQUEST)
# {abstract}boolean abort(REQUEST,String)
# {abstract}boolean logExecutionException(Throwable)
# void onFinally(REQUEST)
}
class de.yaacc.upnp.server.YaaccUpnpServerService {
- {static} String UDN_ID
+ {static} String MEDIA_SERVER_UDN_ID
+ {static} String MEDIA_RENDERER_UDN_ID
+ {static} int PORT
~ SharedPreferences preferences
- LocalDevice localServer
- LocalDevice localRenderer
- UpnpClient upnpClient
- boolean watchdog
- HttpServer httpServer
- boolean initialized
+ IBinder onBind(Intent)
+ int onStartCommand(Intent,int,int)
+ void onDestroy()
- void showNotification()
- void cancleNotification()
- void initialize()
- void createHttpServer()
- void startUpnpAliveNotifications()
- int getUpnpNotificationFrequency()
- LocalDevice createMediaRendererDevice()
- LocalDevice createMediaServerDevice()
- Icon[] createDeviceIcons()
- String getLocalServerName()
- LocalService<?>[] createMediaServerServices()
- LocalService<?>[] createMediaRendererServices()
- LocalService<YaaccContentDirectory> createContentDirectoryService()
- LocalService<YaaccAVTransportService> createAVTransportService()
- LocalService<AbstractAudioRenderingControl> createRenderingControl()
- LocalService<AbstractMediaReceiverRegistrarService> createMediaReceiverRegistrarService()
- LocalService<ConnectionManagerService> createServerConnectionManagerService()
- LocalService<ConnectionManagerService> createRendererConnectionManagerService()
- ProtocolInfos getSourceProtocolInfos()
- ProtocolInfos getSinkProtocolInfos()
- byte[] getIconAsByteArray(int)
+ UpnpClient getUpnpClient()
- void setUpnpClient(UpnpClient)
+ boolean isInitialized()
}
class org.fourthline.cling.support.lastchange.LastChange {
- Event event
- LastChangeParser parser
- String previousValue
+ <<Create>> LastChange(String)
+ <<Create>> LastChange(LastChangeParser,Event)
+ <<Create>> LastChange(LastChangeParser)
+ <<Create>> LastChange(LastChangeParser,String)
+ void reset()
+ void setEventedValue(int,EventedValue)
+ void setEventedValue(UnsignedIntegerFourBytes,EventedValue)
+ UnsignedIntegerFourBytes[] getInstanceIDs()
~ EventedValue[] getEventedValues(UnsignedIntegerFourBytes)
+ EV getEventedValue(int,Class<EV>)
+ EV getEventedValue(UnsignedIntegerFourBytes,Class<EV>)
+ void fire(PropertyChangeSupport)
+ String toString()
}
class org.fourthline.cling.protocol.sync.SendingUnsubscribe {
- {static} Logger log
# RemoteGENASubscription subscription
+ <<Create>> SendingUnsubscribe(UpnpService,RemoteGENASubscription)
# StreamResponseMessage executeSync()
# void onUnsubscribe(StreamResponseMessage)
}
class de.yaacc.databinding.ActivityBrowseBinding {
- RelativeLayout rootView
+ ImageButton controlDevices
+ ImageButton controlNext
+ ImageButton controlPrev
+ ImageButton controlReceiverDevices
+ ImageButton controlStop
+ RelativeLayout controls
+ ListView itemList
- <<Create>> ActivityBrowseBinding(RelativeLayout,ImageButton,ImageButton,ImageButton,ImageButton,ImageButton,RelativeLayout,ListView)
+ RelativeLayout getRoot()
+ {static} ActivityBrowseBinding inflate(LayoutInflater)
+ {static} ActivityBrowseBinding inflate(LayoutInflater,ViewGroup,boolean)
+ {static} ActivityBrowseBinding bind(View)
}
class org.fourthline.cling.support.model.dlna.types.NormalPlayTime {
~ {static} Pattern pattern
- long milliseconds
+ <<Create>> NormalPlayTime(long)
+ <<Create>> NormalPlayTime(long,long,long,long)
+ long getMilliseconds()
+ void setMilliseconds(long)
+ String getString()
+ String getString(Format)
+ {static} NormalPlayTime valueOf(String)
}
enum org.fourthline.cling.support.model.dlna.types.Format {
+  SECONDS
+  TIME
}
abstract class org.fourthline.cling.support.avtransport.callback.GetTransportInfo {
- {static} Logger log
+ <<Create>> GetTransportInfo(Service)
+ <<Create>> GetTransportInfo(UnsignedIntegerFourBytes,Service)
+ void success(ActionInvocation)
+ {abstract}void received(ActionInvocation,TransportInfo)
}
class de.yaacc.imageviewer.ImageViewerBroadcastReceiver {
+ {static} String ACTION_PLAY
+ {static} String ACTION_STOP
+ {static} String ACTION_PAUSE
+ {static} String ACTION_NEXT
+ {static} String ACTION_PREVIOUS
+ {static} String ACTION_EXIT
- ImageViewerActivity imageViewer
+ <<Create>> ImageViewerBroadcastReceiver()
+ <<Create>> ImageViewerBroadcastReceiver(ImageViewerActivity)
+ void onReceive(Context,Intent)
+ void registerReceiver()
}
class example.localservice.SwitchPowerWithClientInfo {
- boolean power
+ void setTarget(boolean,RemoteClientInfo)
+ boolean getTarget()
+ boolean getStatus()
}
class org.fourthline.cling.model.state.StateVariableValue {
- StateVariable<S> stateVariable
+ <<Create>> StateVariableValue(StateVariable<S>,Object)
+ StateVariable<S> getStateVariable()
}
class org.fourthline.cling.support.renderingcontrol.lastchange.ChannelLoudness {
# Channel channel
# Boolean loudness
+ <<Create>> ChannelLoudness(Channel,Boolean)
+ Channel getChannel()
+ Boolean getLoudness()
+ String toString()
}
class org.fourthline.cling.support.model.container.GenreContainer {
+ {static} Class CLASS
+ <<Create>> GenreContainer()
+ <<Create>> GenreContainer(Container)
+ <<Create>> GenreContainer(String,Container,String,String,Integer)
+ <<Create>> GenreContainer(String,String,String,String,Integer)
}
class org.seamless.util.io.IO {
+ {static} String LINE_SEPARATOR
- {static} int DEFAULT_BUFFER_SIZE
+ {static} String makeRelativePath(String,String)
+ {static} void recursiveRename(File,String,String)
+ {static} void findFiles(File,FileFinder)
+ {static} boolean deleteFile(File)
+ {static} void copyFile(File,File)
+ {static} byte[] readBytes(InputStream)
+ {static} byte[] readBytes(File)
+ {static} void writeBytes(OutputStream,byte[])
+ {static} void writeBytes(File,byte[])
+ {static} void writeUTF8(OutputStream,String)
+ {static} void writeUTF8(File,String)
+ {static} String readLines(InputStream)
+ {static} String readLines(File)
+ {static} String[] readLines(File,boolean)
+ {static} String[] readLines(File,boolean,Character)
+ {static} String[] readLines(File,boolean,Character,boolean)
+ {static} void closeQuietly(Reader)
+ {static} void closeQuietly(Writer)
+ {static} void closeQuietly(InputStream)
+ {static} void closeQuietly(OutputStream)
+ {static} byte[] toByteArray(InputStream)
+ {static} byte[] toByteArray(Reader)
+ {static} byte[] toByteArray(Reader,String)
+ {static} byte[] toByteArray(String)
+ {static} char[] toCharArray(InputStream)
+ {static} char[] toCharArray(InputStream,String)
+ {static} char[] toCharArray(Reader)
+ {static} String toString(InputStream)
+ {static} String toString(InputStream,String)
+ {static} String toString(Reader)
+ {static} String toString(byte[])
+ {static} String toString(byte[],String)
+ {static} InputStream toInputStream(String)
+ {static} InputStream toInputStream(String,String)
+ {static} void write(byte[],OutputStream)
+ {static} void write(byte[],Writer)
+ {static} void write(byte[],Writer,String)
+ {static} void write(char[],Writer)
+ {static} void write(char[],OutputStream)
+ {static} void write(char[],OutputStream,String)
+ {static} void write(String,Writer)
+ {static} void write(String,OutputStream)
+ {static} void write(String,OutputStream,String)
+ {static} void write(StringBuffer,Writer)
+ {static} void write(StringBuffer,OutputStream)
+ {static} void write(StringBuffer,OutputStream,String)
+ {static} int copy(InputStream,OutputStream)
+ {static} long copyLarge(InputStream,OutputStream)
+ {static} void copy(InputStream,Writer)
+ {static} void copy(InputStream,Writer,String)
+ {static} int copy(Reader,Writer)
+ {static} long copyLarge(Reader,Writer)
+ {static} void copy(Reader,OutputStream)
+ {static} void copy(Reader,OutputStream,String)
+ {static} boolean contentEquals(InputStream,InputStream)
+ {static} boolean contentEquals(Reader,Reader)
}
interface org.seamless.util.io.IO.FileFinder {
+ void found(File)
}
class org.fourthline.cling.support.model.dlna.DLNAFlagsAttribute {
+ <<Create>> DLNAFlagsAttribute()
+ <<Create>> DLNAFlagsAttribute(DLNAFlags)
+ void setString(String,String)
+ String getString()
}
class de.yaacc.player.ThirdPartieMusicPlayerActivity {
- PlayerService playerService
+ void onServiceConnected(ComponentName,IBinder)
+ void onServiceDisconnected(ComponentName)
# void initialize()
- void exit()
# void onRestart()
# void onResume()
# void onCreate(Bundle)
- Player getPlayer()
# void onDestroy()
+ boolean onCreateOptionsMenu(Menu)
+ boolean onOptionsItemSelected(MenuItem)
}
class org.fourthline.cling.test.ssdp.SearchResponseTest {
+ void receivedValidResponse()
+ void receivedInvalidSearchResponses()
+ void receivedAlreadyKnownLocalUDN()
+ void receiveEmbeddedTriggersUpdate()
# IncomingSearchResponse createResponseMessage(UpnpHeader)
}
interface org.fourthline.cling.binding.xml.ServiceDescriptorBinder {
+ T describe(T,String)
+ T describe(T,Document)
+ String generate(Service)
+ Document buildDOM(Service)
}
class org.fourthline.cling.transport.impl.NetworkAddressFactoryImpl {
+ {static} int DEFAULT_TCP_HTTP_LISTEN_PORT
- {static} Logger log
# Set<String> useInterfaces
# Set<String> useAddresses
# List<NetworkInterface> networkInterfaces
# List<InetAddress> bindAddresses
# int streamListenPort
+ <<Create>> NetworkAddressFactoryImpl()
+ <<Create>> NetworkAddressFactoryImpl(int)
# boolean requiresNetworkInterface()
+ void logInterfaceInformation()
+ InetAddress getMulticastGroup()
+ int getMulticastPort()
+ int getStreamListenPort()
+ Iterator<NetworkInterface> getNetworkInterfaces()
+ Iterator<InetAddress> getBindAddresses()
+ boolean hasUsableNetwork()
+ byte[] getHardwareAddress(InetAddress)
+ InetAddress getBroadcastAddress(InetAddress)
+ Short getAddressNetworkPrefixLength(InetAddress)
+ InetAddress getLocalAddress(NetworkInterface,boolean,InetAddress)
# List<InterfaceAddress> getInterfaceAddresses(NetworkInterface)
# List<InetAddress> getInetAddresses(NetworkInterface)
# InetAddress getBindAddressInSubnetOf(InetAddress)
# boolean isInSubnet(byte[],byte[],short)
# void discoverNetworkInterfaces()
# boolean isUsableNetworkInterface(NetworkInterface)
# void discoverBindAddresses()
# boolean isUsableAddress(NetworkInterface,InetAddress)
# void logInterfaceInformation(NetworkInterface)
}
abstract class org.fourthline.cling.support.messagebox.model.Message {
# Random randomGenerator
- int id
- Category category
- DisplayType displayType
+ <<Create>> Message(Category,DisplayType)
+ <<Create>> Message(int,Category,DisplayType)
+ int getId()
+ Category getCategory()
+ DisplayType getDisplayType()
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
enum org.fourthline.cling.support.messagebox.model.Category {
+  SMS
+  INCOMING_CALL
+  SCHEDULE_REMINDER
+ String text
~ <<Create>> Category(String)
}
enum org.fourthline.cling.support.messagebox.model.DisplayType {
+  MINIMUM
+  MAXIMUM
+ String text
~ <<Create>> DisplayType(String)
}


de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.MusicGenresFolderBrowser
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityThirdPartieMusicPlayerBinding
org.seamless.xhtml.XHTMLElement <|-- org.seamless.xhtml.Anchor
org.fourthline.cling.model.Validatable <|.. org.fourthline.cling.model.meta.Action
de.yaacc.player.AbstractPlayer <|-- de.yaacc.player.MultiContentPlayer
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityMultiContentPlayerBinding
org.fourthline.cling.registry.RegistryItems <|-- org.fourthline.cling.registry.RemoteItems
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.avtransport.callback.GetMediaInfo
org.seamless.statemachine.RuntimeException <|-- org.seamless.statemachine.TransitionException
org.fourthline.cling.model.message.UpnpOperation <|-- org.fourthline.cling.model.message.UpnpRequest
org.fourthline.cling.protocol.Runnable <|.. org.fourthline.cling.protocol.RetrieveRemoteDescriptors
org.seamless.xml.DOMParser <|-- org.seamless.xhtml.XHTMLParser
android.app.Activity <|-- de.yaacc.util.YaaccLogActivity
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.ContentFeaturesHeader
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.igd.callback.PortMappingDelete
org.fourthline.cling.protocol.ReceivingAsync <|-- org.fourthline.cling.protocol.async.ReceivingNotification
org.fourthline.cling.support.lastchange.LastChangeDelegator <|.. org.fourthline.cling.support.renderingcontrol.AbstractAudioRenderingControl
org.fourthline.cling.support.avtransport.impl.AVTransportStateMachine <|-- example.mediarenderer.MyRendererStateMachine
org.fourthline.cling.protocol.SendingSync <|-- org.fourthline.cling.protocol.sync.SendingAction
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.RealTimeInfoHeader
org.fourthline.cling.model.action.ActionInvocation <|-- org.fourthline.cling.model.action.RemoteActionInvocation
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.InterfaceMacHeader
org.fourthline.cling.model.message.StreamRequestMessage <|-- org.fourthline.cling.model.message.gena.OutgoingUnsubscribeRequestMessage
org.fourthline.cling.controlpoint.Runnable <|.. org.fourthline.cling.controlpoint.ActionCallback
org.fourthline.cling.controlpoint.ActionCallback +.. org.fourthline.cling.controlpoint.ActionCallback.Default
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.controlpoint.ActionCallback.Default
org.fourthline.cling.transport.spi.DatagramProcessor <|.. org.fourthline.cling.transport.impl.DatagramProcessorImpl
org.fourthline.cling.transport.spi.MulticastReceiver <|.. org.fourthline.cling.transport.impl.MulticastReceiverImpl
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.avtransport.callback.GetPositionInfo
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.MusicAlbumsFolderBrowser
org.fourthline.cling.model.types.ServiceType <|-- org.fourthline.cling.model.types.UDAServiceType
org.fourthline.cling.model.DefaultServiceManager <|-- org.fourthline.cling.support.lastchange.LastChangeAwareServiceManager
org.fourthline.cling.transport.spi.MulticastReceiverConfiguration <|.. org.fourthline.cling.transport.impl.MulticastReceiverConfigurationImpl
org.fourthline.cling.model.resource.Resource <|-- org.fourthline.cling.model.resource.DeviceDescriptorResource
java.io.Serializable <|.. de.yaacc.browser.Navigator
org.fourthline.cling.support.model.item.VideoItem <|-- org.fourthline.cling.support.model.item.VideoBroadcast
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.BufferInfoHeader
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.renderingcontrol.callback.SetMute
org.fourthline.cling.model.action.ActionException <|-- org.fourthline.cling.model.action.ActionCancelledException
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.EXTHeader
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.ShortDatatype
org.fourthline.cling.controlpoint.ControlPoint <|.. org.fourthline.cling.controlpoint.ControlPointImpl
org.fourthline.cling.model.message.OutgoingDatagramMessage <|-- org.fourthline.cling.model.message.discovery.OutgoingNotificationRequest
org.fourthline.cling.support.lastchange.EventedValue <|-- org.fourthline.cling.support.lastchange.EventedValueURI
org.fourthline.cling.model.resource.Resource <|-- org.fourthline.cling.model.resource.ServiceEventSubscriptionResource
example.binarylight.Runnable <|.. example.binarylight.BinaryLightServer
java.beans.PropertyChangeListener <|.. org.fourthline.cling.model.gena.LocalGENASubscription
org.fourthline.cling.model.gena.GENASubscription <|-- org.fourthline.cling.model.gena.LocalGENASubscription
org.fourthline.cling.model.message.StreamRequestMessage <|-- org.fourthline.cling.model.message.gena.OutgoingRenewalRequestMessage
org.fourthline.cling.model.message.discovery.OutgoingSearchResponse <|-- org.fourthline.cling.model.message.discovery.OutgoingSearchResponseDeviceType
android.app.Activity <|-- de.yaacc.util.AboutActivity
org.fourthline.cling.support.model.container.Album <|-- org.fourthline.cling.support.model.container.PhotoAlbum
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.avtransport.callback.Next
android.os.AsyncTask <|-- de.yaacc.util.image.IconDownloadTask
android.widget.BaseAdapter <|-- de.yaacc.browser.BrowseReceiverDeviceAdapter
de.yaacc.browser.BrowseReceiverDeviceAdapter +.. de.yaacc.browser.BrowseReceiverDeviceAdapter.ViewHolder
org.fourthline.cling.support.model.container.Container <|-- org.fourthline.cling.support.model.container.StorageVolume
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.Base64Datatype
android.view.View.OnClickListener <|.. de.yaacc.browser.ContentListFragment
de.yaacc.upnp.UpnpClientListener <|.. de.yaacc.browser.ContentListFragment
androidx.fragment.app.Fragment <|-- de.yaacc.browser.ContentListFragment
org.fourthline.cling.UpnpService +.. org.fourthline.cling.UpnpService.Start
org.fourthline.cling.UpnpService +.. org.fourthline.cling.UpnpService.Shutdown
java.io.Serializable <|.. de.yaacc.browser.Position
org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl <|-- org.fourthline.cling.binding.xml.RecoveringUDA10DeviceDescriptorBinderImpl
org.fourthline.cling.transport.impl.SOAPActionProcessorImpl <|-- org.fourthline.cling.transport.impl.PullSOAPActionProcessorImpl
org.fourthline.cling.model.state.StateVariableAccessor <|-- org.fourthline.cling.model.state.FieldStateVariableAccessor
org.fourthline.cling.support.shared.Map <|.. org.fourthline.cling.support.shared.AbstractMap
org.fourthline.cling.support.shared.AbstractMap +.. org.fourthline.cling.support.shared.AbstractMap.SimpleImmutableEntry
org.fourthline.cling.support.shared.Entry <|.. org.fourthline.cling.support.shared.AbstractMap.SimpleImmutableEntry
org.fourthline.cling.support.shared.Serializable <|.. org.fourthline.cling.support.shared.AbstractMap.SimpleImmutableEntry
org.fourthline.cling.support.shared.AbstractMap +.. org.fourthline.cling.support.shared.AbstractMap.SimpleEntry
org.fourthline.cling.support.shared.Entry <|.. org.fourthline.cling.support.shared.AbstractMap.SimpleEntry
org.fourthline.cling.support.shared.Serializable <|.. org.fourthline.cling.support.shared.AbstractMap.SimpleEntry
org.fourthline.cling.protocol.ReceivingAsync <|-- org.fourthline.cling.protocol.async.ReceivingSearch
org.fourthline.cling.model.action.ActionException <|-- org.fourthline.cling.support.avtransport.AVTransportException
android.widget.BaseAdapter <|-- de.yaacc.browser.BrowseDeviceAdapter
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityBrowseBinding
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.ContentTypeHeader
android.content.ServiceConnection <|.. de.yaacc.player.MultiContentPlayerActivity
android.app.Activity <|-- de.yaacc.player.MultiContentPlayerActivity
org.fourthline.cling.support.avtransport.impl.state.Stopped <|-- example.mediarenderer.MyRendererStopped
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.CallbackHeader
org.fourthline.cling.support.contentdirectory.callback.Browse <|-- de.yaacc.upnp.callback.contentdirectory.ContentDirectoryBrowseActionCallback
org.fourthline.cling.support.model.ProtocolInfo <|-- org.fourthline.cling.support.model.dlna.DLNAProtocolInfo
org.fourthline.cling.model.message.discovery.OutgoingNotificationRequest <|-- org.fourthline.cling.model.message.discovery.OutgoingNotificationRequestRootDevice
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityTabBrowseBinding
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityMusicPlayerBinding
de.yaacc.upnp.UpnpClientListener <|.. de.yaacc.browser.PlayerListFragment
androidx.fragment.app.Fragment <|-- de.yaacc.browser.PlayerListFragment
org.fourthline.cling.support.lastchange.EventedValue <|-- org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueChannelMute
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.avtransport.callback.Play
example.messagebox.MessageBoxSampleData +.. example.messagebox.MessageBoxSampleData.MessageBoxService
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.ServerHeader
org.seamless.xhtml.XHTMLElement <|-- org.seamless.xhtml.Body
org.fourthline.cling.support.model.container.GenreContainer <|-- org.fourthline.cling.support.model.container.MovieGenre
org.fourthline.cling.model.message.StreamRequestMessage <|-- org.fourthline.cling.model.message.gena.IncomingSubscribeRequestMessage
de.yaacc.upnp.UpnpClientListener <|.. de.yaacc.browser.ReceiverListFragment
androidx.fragment.app.Fragment <|-- de.yaacc.browser.ReceiverListFragment
java.util.ArrayList <|-- org.fourthline.cling.model.types.csv.CSV
org.fourthline.cling.model.action.AbstractActionExecutor <|-- org.fourthline.cling.model.action.MethodActionExecutor
android.app.Activity <|-- de.yaacc.settings.SettingsActivity
org.seamless.http.HttpFetch +.. org.seamless.http.HttpFetch.RepresentationFactory
org.fourthline.cling.support.avtransport.impl.AVTransportStateMachine <|-- de.yaacc.upnp.server.avtransport.AvTransportStateMachine
org.fourthline.cling.support.model.container.Container <|-- org.fourthline.cling.support.model.container.Album
org.fourthline.cling.support.model.dlna.DLNAAttribute <|-- org.fourthline.cling.support.model.dlna.DLNAProfileAttribute
de.yaacc.R +.. de.yaacc.R.array
de.yaacc.R +.. de.yaacc.R.attr
de.yaacc.R +.. de.yaacc.R.bool
de.yaacc.R +.. de.yaacc.R.color
de.yaacc.R +.. de.yaacc.R.dimen
de.yaacc.R +.. de.yaacc.R.drawable
de.yaacc.R +.. de.yaacc.R.id
de.yaacc.R +.. de.yaacc.R.integer
de.yaacc.R +.. de.yaacc.R.layout
de.yaacc.R +.. de.yaacc.R.menu
de.yaacc.R +.. de.yaacc.R.mipmap
de.yaacc.R +.. de.yaacc.R.string
de.yaacc.R +.. de.yaacc.R.style
de.yaacc.R +.. de.yaacc.R.styleable
de.yaacc.R +.. de.yaacc.R.xml
org.fourthline.cling.protocol.ProtocolFactory <|.. org.fourthline.cling.mock.MockProtocolFactory
org.fourthline.cling.support.lastchange.LastChangeParser <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportLastChangeParser
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.USNRootDeviceHeader
org.fourthline.cling.model.profile.DeviceDetailsProvider <|.. org.fourthline.cling.model.profile.HeaderDeviceDetailsProvider
org.fourthline.cling.model.profile.HeaderDeviceDetailsProvider +.. org.fourthline.cling.model.profile.HeaderDeviceDetailsProvider.Key
org.fourthline.cling.protocol.SendingSync <|-- org.fourthline.cling.protocol.sync.SendingEvent
org.fourthline.cling.protocol.async.SendingNotification <|-- org.fourthline.cling.protocol.async.SendingNotificationAlive
org.fourthline.cling.UpnpService <|.. org.fourthline.cling.ManagedUpnpService
org.fourthline.cling.ManagedUpnpService +.. org.fourthline.cling.ManagedUpnpService.RegistryListenerAdapter
org.fourthline.cling.RegistryListener <|.. org.fourthline.cling.ManagedUpnpService.RegistryListenerAdapter
org.fourthline.cling.test.data.SampleDeviceRoot <|-- org.fourthline.cling.test.data.SampleDeviceRootLocal
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.GetAvailableSeekRangeHeader
org.fourthline.cling.model.types.UnsignedVariableInteger <|-- org.fourthline.cling.model.types.UnsignedIntegerOneByte
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityMusicPlayerBinding
org.fourthline.cling.protocol.ReceivingSync <|-- org.fourthline.cling.protocol.sync.ReceivingRetrieval
org.fourthline.cling.protocol.Runnable <|.. org.fourthline.cling.protocol.SendingAsync
org.seamless.xml.DOMElement <|-- org.fourthline.cling.support.messagebox.parser.MessageElement
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.connectionmanager.callback.GetProtocolInfo
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.renderingcontrol.callback.SetVolume
org.fourthline.cling.support.model.item.AudioItem <|-- org.fourthline.cling.support.model.item.AudioBook
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.RangeHeader
org.fourthline.cling.support.model.DIDLObject <|-- org.fourthline.cling.support.model.item.Item
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.URIDatatype
de.yaacc.player.Player <|.. de.yaacc.player.AbstractPlayer
android.content.ServiceConnection <|.. de.yaacc.player.AbstractPlayer
javax.xml.namespace.NamespaceContext <|.. org.seamless.xml.NamespaceContextMap
java.util.HashMap <|-- org.seamless.xml.NamespaceContextMap
org.apache.hc.core5.http.nio.AsyncServerRequestHandler <|.. de.yaacc.upnp.YaaccAsyncStreamServerRequestHandler
org.fourthline.cling.transport.spi.UpnpStream <|-- de.yaacc.upnp.YaaccAsyncStreamServerRequestHandler
org.fourthline.cling.transport.spi.Runnable <|.. org.fourthline.cling.transport.spi.UpnpStream
de.yaacc.upnp.server.avtransport.AvTransportVariable +.. de.yaacc.upnp.server.avtransport.AvTransportVariable.CurrentTransportActions
de.yaacc.upnp.server.avtransport.EventedValueEnumArray <|-- de.yaacc.upnp.server.avtransport.AvTransportVariable.CurrentTransportActions
org.fourthline.cling.model.ServiceManager <|.. org.fourthline.cling.model.DefaultServiceManager
org.fourthline.cling.model.DefaultServiceManager +.. org.fourthline.cling.model.DefaultServiceManager.DefaultPropertyChangeListener
org.fourthline.cling.model.PropertyChangeListener <|.. org.fourthline.cling.model.DefaultServiceManager.DefaultPropertyChangeListener
org.fourthline.cling.support.model.container.Album <|-- org.fourthline.cling.support.model.container.MusicAlbum
org.fourthline.cling.model.message.header.ServiceTypeHeader <|-- org.fourthline.cling.model.message.header.UDAServiceTypeHeader
org.fourthline.cling.model.Validatable <|.. org.fourthline.cling.model.meta.DeviceDetails
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.MusicGenreItemBrowser
org.fourthline.cling.protocol.ReceivingSync <|-- org.fourthline.cling.protocol.sync.ReceivingAction
org.fourthline.cling.binding.RuntimeException <|-- org.fourthline.cling.binding.LocalServiceBindingException
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.RootDeviceHeader
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityAvtransportPlayerBinding
org.fourthline.cling.test.local.LocalActionInvocationEnumTest +.. org.fourthline.cling.test.local.LocalActionInvocationEnumTest.TestServiceOne
org.fourthline.cling.test.local.LocalActionInvocationEnumTest +.. org.fourthline.cling.test.local.LocalActionInvocationEnumTest.TestServiceTwo
org.fourthline.cling.test.local.LocalActionInvocationEnumTest +.. org.fourthline.cling.test.local.LocalActionInvocationEnumTest.TestServiceThree
org.fourthline.cling.test.local.LocalActionInvocationEnumTest.TestServiceThree +.. org.fourthline.cling.test.local.LocalActionInvocationEnumTest.TestServiceThree.TargetHolder
org.fourthline.cling.test.local.LocalActionInvocationEnumTest +.. org.fourthline.cling.test.local.LocalActionInvocationEnumTest.TestServiceFour
org.fourthline.cling.test.local.LocalActionInvocationEnumTest.TestServiceFour +.. org.fourthline.cling.test.local.LocalActionInvocationEnumTest.TestServiceFour.TargetHolder
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.connectionmanager.callback.PrepareForConnection
org.fourthline.cling.model.meta.Service <|-- org.fourthline.cling.model.meta.RemoteService
android.os.AsyncTask <|-- de.yaacc.util.FileDownloader
example.mediaserver.ContentDirectoryBrowseTest +.. example.mediaserver.ContentDirectoryBrowseTest.MP3ContentDirectory
example.mediaserver.AbstractContentDirectoryService <|-- example.mediaserver.ContentDirectoryBrowseTest.MP3ContentDirectory
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.IntegerDatatype
org.fourthline.cling.test.local.LocalActionInvocationDatatypesTest +.. org.fourthline.cling.test.local.LocalActionInvocationDatatypesTest.LocalTestServiceOne
org.fourthline.cling.test.local.LocalActionInvocationDatatypesTest +.. org.fourthline.cling.test.local.LocalActionInvocationDatatypesTest.StringsHolder
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.PragmaHeader
org.fourthline.cling.protocol.Runnable <|.. org.fourthline.cling.protocol.ReceivingAsync
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.VideoItemBrowser
org.fourthline.cling.registry.Registry <|.. org.fourthline.cling.registry.RegistryImpl
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.ImageAllItemBrowser
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.BinHexDatatype
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.MusicAllTitlesFolderBrowser
android.support.v4.R +.. android.support.v4.R.attr
android.support.v4.R +.. android.support.v4.R.bool
android.support.v4.R +.. android.support.v4.R.color
android.support.v4.R +.. android.support.v4.R.dimen
android.support.v4.R +.. android.support.v4.R.drawable
android.support.v4.R +.. android.support.v4.R.id
android.support.v4.R +.. android.support.v4.R.integer
android.support.v4.R +.. android.support.v4.R.layout
android.support.v4.R +.. android.support.v4.R.string
android.support.v4.R +.. android.support.v4.R.style
android.support.v4.R +.. android.support.v4.R.styleable
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.UnsignedIntegerOneByteDatatype
example.localservice.MyServiceWithAllowedValueRangeProvider +.. example.localservice.MyServiceWithAllowedValueRangeProvider.MyAllowedValueProvider
example.localservice.AllowedValueRangeProvider <|.. example.localservice.MyServiceWithAllowedValueRangeProvider.MyAllowedValueProvider
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.CharacterDatatype
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.avtransport.callback.SetAVTransportURI
org.fourthline.cling.transport.impl.PullSOAPActionProcessorImpl <|-- org.fourthline.cling.transport.impl.RecoveringSOAPActionProcessorImpl
org.fourthline.cling.support.model.item.ImageItem <|-- org.fourthline.cling.support.model.item.Photo
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.FragmentServerListBinding
org.fourthline.cling.support.avtransport.impl.state.AbstractState <|-- org.fourthline.cling.support.avtransport.impl.state.PausedPlay
org.fourthline.cling.UpnpServiceConfiguration <|.. org.fourthline.cling.DefaultUpnpServiceConfiguration
org.fourthline.cling.DefaultUpnpServiceConfiguration +.. org.fourthline.cling.DefaultUpnpServiceConfiguration.ClingExecutor
org.fourthline.cling.ThreadPoolExecutor <|-- org.fourthline.cling.DefaultUpnpServiceConfiguration.ClingExecutor
org.fourthline.cling.DefaultUpnpServiceConfiguration +.. org.fourthline.cling.DefaultUpnpServiceConfiguration.ClingThreadFactory
org.fourthline.cling.ThreadFactory <|.. org.fourthline.cling.DefaultUpnpServiceConfiguration.ClingThreadFactory
org.fourthline.cling.model.meta.Device <|-- org.fourthline.cling.model.meta.LocalDevice
org.fourthline.cling.model.types.csv.CSV <|-- org.fourthline.cling.model.types.csv.CSVShort
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.PragmaHeader
org.fourthline.cling.support.messagebox.model.Message <|-- org.fourthline.cling.support.messagebox.model.MessageIncomingCall
org.fourthline.cling.support.model.container.Container <|-- org.fourthline.cling.support.model.container.StorageSystem
org.fourthline.cling.model.RuntimeException <|-- org.fourthline.cling.model.UnsupportedDataException
org.fourthline.cling.support.model.container.Container <|-- org.fourthline.cling.support.model.container.PlaylistContainer
org.fourthline.cling.model.Validatable <|.. org.fourthline.cling.model.meta.Device
org.fourthline.cling.support.renderingcontrol.AbstractAudioRenderingControl <|-- de.yaacc.upnp.server.YaaccAudioRenderingControlService
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.MusicArtistItemBrowser
org.fourthline.cling.test.ssdp.RegistryExpirationTest +.. org.fourthline.cling.test.ssdp.RegistryExpirationTest.TestRunnable
org.fourthline.cling.test.ssdp.Runnable <|.. org.fourthline.cling.test.ssdp.RegistryExpirationTest.TestRunnable
org.fourthline.cling.support.model.dlna.DLNAAttribute <|-- org.fourthline.cling.support.model.dlna.DLNAOperationsAttribute
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.connectionmanager.callback.ConnectionComplete
android.content.ServiceConnection <|.. de.yaacc.player.AVTransportPlayerActivity
android.app.Activity <|-- de.yaacc.player.AVTransportPlayerActivity
org.seamless.xml.Exception <|-- org.seamless.xml.ParserException
org.fourthline.cling.support.avtransport.AbstractAVTransportService <|-- org.fourthline.cling.support.avtransport.impl.AVTransportService
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.VideosFolderBrowser
org.fourthline.cling.model.types.csv.CSV <|-- org.fourthline.cling.model.types.csv.CSVBoolean
org.fourthline.cling.registry.Runnable <|.. org.fourthline.cling.registry.RegistryMaintainer
android.widget.BaseAdapter <|-- de.yaacc.browser.PlayerListItemAdapter
de.yaacc.browser.PlayerListItemAdapter +.. de.yaacc.browser.PlayerListItemAdapter.ViewHolder
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.ContentRangeHeader
org.fourthline.cling.model.action.ActionExecutor <|.. org.fourthline.cling.model.action.AbstractActionExecutor
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.AboutBinding
example.igd.ConnectionInfoTest +.. example.igd.ConnectionInfoTest.TestConnection
example.igd.WANIPConnectionService <|-- example.igd.ConnectionInfoTest.TestConnection
org.fourthline.cling.model.message.discovery.OutgoingSearchResponse <|-- org.fourthline.cling.model.message.discovery.OutgoingSearchResponseRootDevice
org.fourthline.cling.protocol.ReceivingSync <|-- org.fourthline.cling.protocol.sync.ReceivingUnsubscribe
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityServerListBinding
org.fourthline.cling.support.model.container.Container <|-- org.fourthline.cling.support.model.container.PersonContainer
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.FragmentDemoObjectBinding
org.fourthline.cling.model.message.UpnpMessage <|-- org.fourthline.cling.model.message.IncomingDatagramMessage
org.fourthline.cling.transport.spi.StreamServerConfiguration <|.. de.yaacc.upnp.YaaccAsyncStreamServerConfigurationImpl
org.fourthline.cling.model.resource.Resource <|-- org.fourthline.cling.model.resource.ServiceEventCallbackResource
example.controlpoint.EventSubscriptionTest <|-- example.localservice.EventProviderTest
de.yaacc.upnp.UpnpClientListener <|.. de.yaacc.settings.SettingsFragment
android.preference.PreferenceFragment <|-- de.yaacc.settings.SettingsFragment
org.fourthline.cling.protocol.ReceivingSync <|-- org.fourthline.cling.protocol.sync.ReceivingEvent
org.fourthline.cling.test.local.LocalDeviceBindingAdvertisementTest +.. org.fourthline.cling.test.local.LocalDeviceBindingAdvertisementTest.DemoBinaryLight
de.yaacc.util.SwipeReceiver <|.. de.yaacc.imageviewer.ImageViewerActivity
android.content.ServiceConnection <|.. de.yaacc.imageviewer.ImageViewerActivity
android.app.Activity <|-- de.yaacc.imageviewer.ImageViewerActivity
org.fourthline.cling.support.avtransport.impl.state.AbstractState <|-- org.fourthline.cling.support.avtransport.impl.state.Playing
org.seamless.xml.DOMElement <|-- org.seamless.xhtml.XHTMLElement
org.fourthline.cling.transport.spi.InitializationException <|-- org.fourthline.cling.transport.spi.NoNetworkException
org.fourthline.cling.model.action.ActionException <|-- org.fourthline.cling.support.renderingcontrol.RenderingControlException
org.fourthline.cling.model.message.UpnpMessage <|-- org.fourthline.cling.model.message.OutgoingDatagramMessage
org.fourthline.cling.model.types.ServiceId <|-- org.fourthline.cling.model.types.UDAServiceId
org.fourthline.cling.support.lastchange.EventedValue <|-- org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueChannelVolumeDB
org.fourthline.cling.model.message.OutgoingDatagramMessage <|-- org.fourthline.cling.model.message.discovery.OutgoingSearchRequest
org.seamless.xml.DOMElement +.. org.seamless.xml.DOMElement.Builder
org.seamless.xml.DOMElement +.. org.seamless.xml.DOMElement.ArrayBuilder
org.seamless.xml.Builder <|-- org.seamless.xml.DOMElement.ArrayBuilder
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.FragmentContentListBinding
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.TimeSeekRangeHeader
org.fourthline.cling.support.model.Connection +.. org.fourthline.cling.support.model.Connection.StatusInfo
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.contentdirectory.callback.GetSystemUpdateID
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.avtransport.callback.GetDeviceCapabilities
org.fourthline.cling.test.control.ActionSampleData +.. org.fourthline.cling.test.control.ActionSampleData.LocalTestService
org.fourthline.cling.test.control.ActionSampleData +.. org.fourthline.cling.test.control.ActionSampleData.LocalTestServiceThrowsException
org.fourthline.cling.test.control.LocalTestService <|-- org.fourthline.cling.test.control.ActionSampleData.LocalTestServiceThrowsException
org.fourthline.cling.test.control.ActionSampleData +.. org.fourthline.cling.test.control.ActionSampleData.LocalTestServiceDelays
org.fourthline.cling.test.control.LocalTestService <|-- org.fourthline.cling.test.control.ActionSampleData.LocalTestServiceDelays
org.fourthline.cling.test.control.ActionSampleData +.. org.fourthline.cling.test.control.ActionSampleData.LocalTestServiceExtended
org.fourthline.cling.test.control.LocalTestService <|-- org.fourthline.cling.test.control.ActionSampleData.LocalTestServiceExtended
org.fourthline.cling.test.control.ActionSampleData +.. org.fourthline.cling.test.control.ActionSampleData.LocalTestServiceWithClientInfo
org.fourthline.cling.model.message.StreamResponseMessage <|-- org.fourthline.cling.model.message.gena.OutgoingEventResponseMessage
org.fourthline.cling.protocol.Exception <|-- org.fourthline.cling.protocol.ProtocolCreationException
android.app.Service <|-- de.yaacc.upnp.UpnpRegistryService
de.yaacc.upnp.UpnpRegistryService +.. de.yaacc.upnp.UpnpRegistryService.Binder
de.yaacc.upnp.AndroidUpnpService <|.. de.yaacc.upnp.UpnpRegistryService.Binder
de.yaacc.upnp.Binder <|-- de.yaacc.upnp.UpnpRegistryService.Binder
org.fourthline.cling.registry.event.DeviceDiscovery <|-- org.fourthline.cling.registry.event.RemoteDeviceDiscovery
org.fourthline.cling.support.model.item.VideoItem <|-- org.fourthline.cling.support.model.item.Movie
org.fourthline.cling.support.lastchange.LastChangeDelegator <|.. org.fourthline.cling.support.avtransport.AbstractAVTransportService
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.YaaccProgressDialogBinding
org.fourthline.cling.model.resource.Resource <|-- org.fourthline.cling.model.resource.ServiceControlResource
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.MANHeader
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.ServiceTypeHeader
org.fourthline.cling.transport.spi.Runnable <|-- org.fourthline.cling.transport.spi.StreamServer
org.fourthline.cling.registry.event.DeviceDiscovery <|-- org.fourthline.cling.registry.event.LocalDeviceDiscovery
org.fourthline.cling.model.types.csv.CSV <|-- org.fourthline.cling.model.types.csv.CSVUnsignedIntegerFourBytes
org.fourthline.cling.model.types.csv.CSV <|-- org.fourthline.cling.model.types.csv.CSVBytes
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.ImagesAllFolderBrowser
org.fourthline.cling.DefaultUpnpServiceConfiguration <|-- de.yaacc.upnp.YaaccUpnpServiceConfiguration
org.seamless.xml.DOMParser <|-- org.fourthline.cling.support.messagebox.parser.MessageDOMParser
org.seamless.xhtml.XHTMLElement <|-- org.seamless.xhtml.Root
de.yaacc.player.AbstractPlayer <|-- de.yaacc.player.SyncAVTransportPlayer
de.yaacc.player.SyncAVTransportPlayer +.. de.yaacc.player.SyncAVTransportPlayer.InternalSetAVTransportURI
de.yaacc.player.SetAVTransportURI <|-- de.yaacc.player.SyncAVTransportPlayer.InternalSetAVTransportURI
de.yaacc.player.SyncAVTransportPlayer +.. de.yaacc.player.SyncAVTransportPlayer.ActionState
java.lang.reflect.InvocationHandler <|.. org.seamless.statemachine.StateMachineInvocationHandler
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.CustomDatatype
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.BrowseItemCheckableBinding
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.FloatDatatype
org.fourthline.cling.transport.RouterImpl <|-- org.fourthline.cling.android.AndroidRouter
org.fourthline.cling.android.AndroidRouter +.. org.fourthline.cling.android.AndroidRouter.ConnectivityBroadcastReceiver
org.fourthline.cling.android.BroadcastReceiver <|-- org.fourthline.cling.android.AndroidRouter.ConnectivityBroadcastReceiver
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.NTEventHeader
org.fourthline.cling.model.message.control.ActionResponseMessage <|.. org.fourthline.cling.model.message.control.IncomingActionResponseMessage
org.fourthline.cling.model.message.StreamResponseMessage <|-- org.fourthline.cling.model.message.control.IncomingActionResponseMessage
org.fourthline.cling.model.message.StreamRequestMessage <|-- org.fourthline.cling.model.message.gena.IncomingEventRequestMessage
org.fourthline.cling.test.control.ActionInvokeIncomingTest +.. org.fourthline.cling.test.control.ActionInvokeIncomingTest.ConcurrentGetTest
org.fourthline.cling.test.control.Runnable <|.. org.fourthline.cling.test.control.ActionInvokeIncomingTest.ConcurrentGetTest
org.fourthline.cling.transport.spi.AbstractStreamClient <|-- de.yaacc.upnp.YaaccStreamingClientImpl
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.EventTypeHeader
org.fourthline.cling.model.types.csv.CSV <|-- org.fourthline.cling.model.types.csv.CSVUnsignedIntegerOneByte
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.StringDatatype
android.os.AsyncTask <|-- de.yaacc.imageviewer.RetrieveImageTask
de.yaacc.imageviewer.RetrieveImageTask +.. de.yaacc.imageviewer.RetrieveImageTask.FlushedInputStream
de.yaacc.imageviewer.FilterInputStream <|-- de.yaacc.imageviewer.RetrieveImageTask.FlushedInputStream
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.DoubleDatatype
org.fourthline.cling.protocol.ReceivingAsync <|-- org.fourthline.cling.protocol.ReceivingSync
org.fourthline.cling.model.types.csv.CSV <|-- org.fourthline.cling.model.types.csv.CSVUnsignedIntegerTwoBytes
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.MusicGenreFolderBrowser
org.fourthline.cling.support.lastchange.EventedValue <|-- org.fourthline.cling.support.lastchange.EventedValueEnumArray
org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderImpl <|-- org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl
org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.RootHandler
org.fourthline.cling.binding.xml.ServiceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.RootHandler
org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ActionListHandler
org.fourthline.cling.binding.xml.ServiceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ActionListHandler
org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ActionHandler
org.fourthline.cling.binding.xml.ServiceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ActionHandler
org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ActionArgumentListHandler
org.fourthline.cling.binding.xml.ServiceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ActionArgumentListHandler
org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ActionArgumentHandler
org.fourthline.cling.binding.xml.ServiceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ActionArgumentHandler
org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.StateVariableListHandler
org.fourthline.cling.binding.xml.ServiceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.StateVariableListHandler
org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.StateVariableHandler
org.fourthline.cling.binding.xml.ServiceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.StateVariableHandler
org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.AllowedValueListHandler
org.fourthline.cling.binding.xml.ServiceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.AllowedValueListHandler
org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.AllowedValueRangeHandler
org.fourthline.cling.binding.xml.ServiceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.AllowedValueRangeHandler
org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ServiceDescriptorHandler
org.fourthline.cling.binding.xml.Handler <|-- org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl.ServiceDescriptorHandler
example.localservice.MyServiceWithAllowedValueProvider +.. example.localservice.MyServiceWithAllowedValueProvider.MyAllowedValueProvider
example.localservice.AllowedValueProvider <|.. example.localservice.MyServiceWithAllowedValueProvider.MyAllowedValueProvider
org.fourthline.cling.test.local.LocalActionInvocationNullTest +.. org.fourthline.cling.test.local.LocalActionInvocationNullTest.LocalTestServiceOne
org.fourthline.cling.test.local.LocalActionInvocationNullTest +.. org.fourthline.cling.test.local.LocalActionInvocationNullTest.MyString
android.support.mediacompat.R +.. android.support.mediacompat.R.attr
android.support.mediacompat.R +.. android.support.mediacompat.R.bool
android.support.mediacompat.R +.. android.support.mediacompat.R.color
android.support.mediacompat.R +.. android.support.mediacompat.R.dimen
android.support.mediacompat.R +.. android.support.mediacompat.R.drawable
android.support.mediacompat.R +.. android.support.mediacompat.R.id
android.support.mediacompat.R +.. android.support.mediacompat.R.integer
android.support.mediacompat.R +.. android.support.mediacompat.R.layout
android.support.mediacompat.R +.. android.support.mediacompat.R.string
android.support.mediacompat.R +.. android.support.mediacompat.R.style
android.support.mediacompat.R +.. android.support.mediacompat.R.styleable
android.app.Application <|-- de.yaacc.Yaacc
java.io.Serializable <|.. org.seamless.util.time.DateFormat
org.fourthline.cling.test.local.LocalActionInvocationCSVTest +.. org.fourthline.cling.test.local.LocalActionInvocationCSVTest.TestServiceOne
org.fourthline.cling.binding.xml.Descriptor +.. org.fourthline.cling.binding.xml.Descriptor.Device
org.fourthline.cling.binding.xml.Descriptor +.. org.fourthline.cling.binding.xml.Descriptor.Service
example.messagebox.MessageBoxTest +.. example.messagebox.MessageBoxTest.MyTV
example.messagebox.MessageBoxService <|-- example.messagebox.MessageBoxTest.MyTV
org.fourthline.cling.registry.DefaultRegistryListener <|-- org.fourthline.cling.support.igd.PortMappingListener
org.fourthline.cling.transport.spi.DatagramIOConfiguration <|.. org.fourthline.cling.transport.impl.DatagramIOConfigurationImpl
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityTabBrowseBinding
example.igd.IGDSampleData +.. example.igd.IGDSampleData.WANIPConnectionService
org.seamless.util.io.Base64Coder +.. org.seamless.util.io.Base64Coder.InputStream
org.seamless.util.io.FilterInputStream <|-- org.seamless.util.io.Base64Coder.InputStream
org.seamless.util.io.Base64Coder +.. org.seamless.util.io.Base64Coder.OutputStream
org.seamless.util.io.FilterOutputStream <|-- org.seamless.util.io.Base64Coder.OutputStream
org.w3c.dom.ls.LSResourceResolver <|.. org.seamless.xml.CatalogResourceResolver
org.seamless.xml.CatalogResourceResolver +.. org.seamless.xml.CatalogResourceResolver.Input
org.seamless.xml.LSInput <|.. org.seamless.xml.CatalogResourceResolver.Input
org.fourthline.cling.model.types.csv.CSV <|-- org.fourthline.cling.model.types.csv.CSVURI
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.STAllHeader
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.BrowseItemBinding
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityImageViewerBinding
org.fourthline.cling.support.model.container.PersonContainer <|-- org.fourthline.cling.support.model.container.MusicArtist
org.fourthline.cling.model.types.csv.CSV <|-- org.fourthline.cling.model.types.csv.CSVCharacter
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.ImageByBucketNameItemBrowser
org.fourthline.cling.test.transport.StreamServerClientTest +.. org.fourthline.cling.test.transport.StreamServerClientTest.TestProtocol
org.fourthline.cling.test.transport.ReceivingSync <|-- org.fourthline.cling.test.transport.StreamServerClientTest.TestProtocol
org.fourthline.cling.test.transport.StreamServerClientTest +.. org.fourthline.cling.test.transport.StreamServerClientTest.OKEmptyResponse
org.fourthline.cling.test.transport.TestProtocol <|-- org.fourthline.cling.test.transport.StreamServerClientTest.OKEmptyResponse
org.fourthline.cling.test.transport.StreamServerClientTest +.. org.fourthline.cling.test.transport.StreamServerClientTest.OKBodyResponse
org.fourthline.cling.test.transport.TestProtocol <|-- org.fourthline.cling.test.transport.StreamServerClientTest.OKBodyResponse
org.fourthline.cling.test.transport.StreamServerClientTest +.. org.fourthline.cling.test.transport.StreamServerClientTest.NoResponse
org.fourthline.cling.test.transport.TestProtocol <|-- org.fourthline.cling.test.transport.StreamServerClientTest.NoResponse
org.fourthline.cling.test.transport.StreamServerClientTest +.. org.fourthline.cling.test.transport.StreamServerClientTest.DelayedResponse
org.fourthline.cling.test.transport.TestProtocol <|-- org.fourthline.cling.test.transport.StreamServerClientTest.DelayedResponse
org.fourthline.cling.test.transport.StreamServerClientTest +.. org.fourthline.cling.test.transport.StreamServerClientTest.TooLongResponse
org.fourthline.cling.test.transport.TestProtocol <|-- org.fourthline.cling.test.transport.StreamServerClientTest.TooLongResponse
org.fourthline.cling.test.transport.StreamServerClientTest +.. org.fourthline.cling.test.transport.StreamServerClientTest.CheckAliveResponse
org.fourthline.cling.test.transport.TestProtocol <|-- org.fourthline.cling.test.transport.StreamServerClientTest.CheckAliveResponse
org.fourthline.cling.test.transport.StreamServerClientTest +.. org.fourthline.cling.test.transport.StreamServerClientTest.CheckAliveLongResponse
org.fourthline.cling.test.transport.TestProtocol <|-- org.fourthline.cling.test.transport.StreamServerClientTest.CheckAliveLongResponse
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.MusicAllTitleItemBrowser
org.fourthline.cling.model.message.StreamResponseMessage <|-- org.fourthline.cling.model.message.gena.IncomingSubscribeResponseMessage
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.ImagesByBucketNameFolderBrowser
org.fourthline.cling.support.lastchange.EventedValue <|-- org.fourthline.cling.support.lastchange.EventedValueString
org.fourthline.cling.binding.xml.DeviceDescriptorBinder <|.. org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl
org.xml.sax.ErrorHandler <|.. org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl
org.fourthline.cling.model.meta.DeviceIdentity <|-- org.fourthline.cling.model.meta.RemoteDeviceIdentity
org.fourthline.cling.model.action.Exception <|-- org.fourthline.cling.model.action.ActionException
de.yaacc.player.Player <|.. de.yaacc.player.LocalImagePlayer
android.content.ServiceConnection <|.. de.yaacc.player.LocalImagePlayer
org.fourthline.cling.transport.Exception <|-- org.fourthline.cling.transport.RouterException
org.fourthline.cling.binding.xml.Exception <|-- org.fourthline.cling.binding.xml.DescriptorBindingException
org.fourthline.cling.model.message.StreamResponseMessage <|-- org.fourthline.cling.model.message.gena.OutgoingSubscribeResponseMessage
org.fourthline.cling.model.message.OutgoingDatagramMessage <|-- org.fourthline.cling.model.message.discovery.OutgoingSearchResponse
org.fourthline.cling.model.state.Command <|.. org.fourthline.cling.model.state.AccessCommand
org.fourthline.cling.model.Validatable <|.. org.fourthline.cling.model.meta.StateVariableTypeDetails
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.MXHeader
android.support.compat.R +.. android.support.compat.R.attr
android.support.compat.R +.. android.support.compat.R.bool
android.support.compat.R +.. android.support.compat.R.color
android.support.compat.R +.. android.support.compat.R.dimen
android.support.compat.R +.. android.support.compat.R.drawable
android.support.compat.R +.. android.support.compat.R.id
android.support.compat.R +.. android.support.compat.R.integer
android.support.compat.R +.. android.support.compat.R.layout
android.support.compat.R +.. android.support.compat.R.string
android.support.compat.R +.. android.support.compat.R.style
android.support.compat.R +.. android.support.compat.R.styleable
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.LocationHeader
org.seamless.xhtml.XHTMLElement <|-- org.seamless.xhtml.Head
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.HostHeader
android.support.coreui.R +.. android.support.coreui.R.attr
android.support.coreui.R +.. android.support.coreui.R.bool
android.support.coreui.R +.. android.support.coreui.R.color
android.support.coreui.R +.. android.support.coreui.R.dimen
android.support.coreui.R +.. android.support.coreui.R.drawable
android.support.coreui.R +.. android.support.coreui.R.id
android.support.coreui.R +.. android.support.coreui.R.integer
android.support.coreui.R +.. android.support.coreui.R.layout
android.support.coreui.R +.. android.support.coreui.R.string
android.support.coreui.R +.. android.support.coreui.R.style
android.support.coreui.R +.. android.support.coreui.R.styleable
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.BrowseItemBinding
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.PeerManagerHeader
org.fourthline.cling.support.model.container.Container <|-- org.fourthline.cling.support.model.container.StorageFolder
android.app.Activity <|-- de.yaacc.upnp.server.YaaccUpnpServerControlActivity
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.avtransport.callback.Stop
org.fourthline.cling.support.model.dlna.DLNAAttribute <|-- org.fourthline.cling.support.model.dlna.DLNAConversionIndicatorAttribute
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.avtransport.callback.Seek
org.fourthline.cling.support.messagebox.model.ElementAppender <|.. org.fourthline.cling.support.messagebox.model.NumberName
org.seamless.xhtml.XHTMLElement <|-- org.seamless.xhtml.Link
org.fourthline.cling.model.Validatable <|.. org.fourthline.cling.model.meta.DeviceIdentity
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.igd.callback.GetStatusInfo
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.ServiceUSNHeader
org.fourthline.cling.controlpoint.ActionCallback <|-- de.yaacc.upnp.callback.avtransport.SyncStop
android.app.Service <|-- de.yaacc.musicplayer.BackgroundMusicService
de.yaacc.musicplayer.BackgroundMusicService +.. de.yaacc.musicplayer.BackgroundMusicService.BackgroundMusicServiceBinder
de.yaacc.musicplayer.Binder <|-- de.yaacc.musicplayer.BackgroundMusicService.BackgroundMusicServiceBinder
android.os.AsyncTask <|-- de.yaacc.browser.BrowseItemLoadTask
de.yaacc.upnp.server.avtransport.YaaccState <|.. de.yaacc.upnp.server.avtransport.AvTransportMediaRendererStopped
org.fourthline.cling.support.avtransport.impl.state.Stopped <|-- de.yaacc.upnp.server.avtransport.AvTransportMediaRendererStopped
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.MusicAlbumFolderBrowser
org.fourthline.cling.controlpoint.Runnable <|.. org.fourthline.cling.controlpoint.SubscriptionCallback
android.widget.AdapterView.OnItemClickListener <|.. de.yaacc.browser.ServerListClickListener
de.yaacc.upnp.server.avtransport.YaaccState <|.. de.yaacc.upnp.server.avtransport.AvTransportMediaRendererPlaying
org.fourthline.cling.support.avtransport.impl.state.Playing <|-- de.yaacc.upnp.server.avtransport.AvTransportMediaRendererPlaying
android.view.View.OnTouchListener <|.. de.yaacc.util.ActivitySwipeDetector
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityYaaccLogBinding
org.fourthline.cling.support.model.item.Item <|-- org.fourthline.cling.support.model.item.AudioItem
de.yaacc.player.AbstractPlayer <|-- de.yaacc.player.AVTransportPlayer
de.yaacc.player.AVTransportPlayer +.. de.yaacc.player.AVTransportPlayer.InternalSetAVTransportURI
de.yaacc.player.SetAVTransportURI <|-- de.yaacc.player.AVTransportPlayer.InternalSetAVTransportURI
de.yaacc.player.AVTransportPlayer +.. de.yaacc.player.AVTransportPlayer.ActionState
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.ScmsFlagHeader
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.FragmentReceiverListBinding
example.mediarenderer.MediaRendererSampleData +.. example.mediarenderer.MediaRendererSampleData.AudioRenderingControlService
example.mediarenderer.AbstractAudioRenderingControl <|-- example.mediarenderer.MediaRendererSampleData.AudioRenderingControlService
org.fourthline.cling.UpnpService <|.. org.fourthline.cling.UpnpServiceImpl
android.content.BroadcastReceiver <|-- de.yaacc.upnp.server.ServerAutostart
org.fourthline.cling.protocol.ReceivingAsync <|-- org.fourthline.cling.protocol.async.ReceivingSearchResponse
org.fourthline.cling.support.model.DIDLObject <|-- org.fourthline.cling.support.model.container.Container
de.yaacc.player.AVTransportPlayer <|-- de.yaacc.player.AVTransportController
example.registry.RegistryListenerTest +.. example.registry.RegistryListenerTest.RegistryListener
example.registry.RegistryListenerTest +.. example.registry.RegistryListenerTest.QuickstartRegistryListener
example.registry.DefaultRegistryListener <|-- example.registry.RegistryListenerTest.QuickstartRegistryListener
example.registry.RegistryListenerTest +.. example.registry.RegistryListenerTest.FailureQuickstartRegistryListener
example.registry.DefaultRegistryListener <|-- example.registry.RegistryListenerTest.FailureQuickstartRegistryListener
example.registry.RegistryListenerTest +.. example.registry.RegistryListenerTest.MyListener
example.registry.DefaultRegistryListener <|-- example.registry.RegistryListenerTest.MyListener
org.fourthline.cling.protocol.ProtocolFactory <|.. org.fourthline.cling.protocol.ProtocolFactoryImpl
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.SubscriptionIdHeader
org.fourthline.cling.test.data.SampleServiceOne <|-- org.fourthline.cling.test.data.SampleServiceOneUndescribed
org.fourthline.cling.model.Exception <|-- org.fourthline.cling.model.ValidationException
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.UnsignedIntegerTwoBytesDatatype
org.fourthline.cling.support.model.dlna.RuntimeException <|-- org.fourthline.cling.support.model.dlna.InvalidDLNAProtocolAttributeException
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.DeviceTypeHeader
org.fourthline.cling.model.message.discovery.OutgoingNotificationRequest <|-- org.fourthline.cling.model.message.discovery.OutgoingNotificationRequestServiceType
org.fourthline.cling.transport.spi.SOAPActionProcessor <|.. org.fourthline.cling.transport.impl.SOAPActionProcessorImpl
org.xml.sax.ErrorHandler <|.. org.fourthline.cling.transport.impl.SOAPActionProcessorImpl
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.UnsignedIntegerFourBytesDatatype
example.binarylight.Runnable <|.. example.binarylight.BinaryLightClient
example.binarylight.BinaryLightClient +.. example.binarylight.BinaryLightClient.SetTargetActionInvocation
example.binarylight.ActionInvocation <|-- example.binarylight.BinaryLightClient.SetTargetActionInvocation
org.fourthline.cling.model.message.control.ActionMessage <|-- org.fourthline.cling.model.message.control.ActionResponseMessage
org.fourthline.cling.model.state.StateVariableAccessor <|-- org.fourthline.cling.model.state.GetterStateVariableAccessor
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.TransportState
org.fourthline.cling.support.avtransport.lastchange.EventedValueEnum <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.TransportState
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.TransportStatus
org.fourthline.cling.support.avtransport.lastchange.EventedValueEnum <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.TransportStatus
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.RecordStorageMedium
org.fourthline.cling.support.avtransport.lastchange.EventedValueEnum <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.RecordStorageMedium
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.PossibleRecordStorageMedia
org.fourthline.cling.support.avtransport.lastchange.EventedValueEnumArray <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.PossibleRecordStorageMedia
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.PossiblePlaybackStorageMedia
org.fourthline.cling.support.avtransport.lastchange.PossibleRecordStorageMedia <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.PossiblePlaybackStorageMedia
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentPlayMode
org.fourthline.cling.support.avtransport.lastchange.EventedValueEnum <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentPlayMode
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.TransportPlaySpeed
org.fourthline.cling.support.avtransport.lastchange.EventedValueString <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.TransportPlaySpeed
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.RecordMediumWriteStatus
org.fourthline.cling.support.avtransport.lastchange.EventedValueEnum <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.RecordMediumWriteStatus
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentRecordQualityMode
org.fourthline.cling.support.avtransport.lastchange.EventedValueEnum <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentRecordQualityMode
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.PossibleRecordQualityModes
org.fourthline.cling.support.avtransport.lastchange.EventedValueEnumArray <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.PossibleRecordQualityModes
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.NumberOfTracks
org.fourthline.cling.support.avtransport.lastchange.EventedValueUnsignedIntegerFourBytes <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.NumberOfTracks
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTrack
org.fourthline.cling.support.avtransport.lastchange.EventedValueUnsignedIntegerFourBytes <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTrack
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTrackDuration
org.fourthline.cling.support.avtransport.lastchange.EventedValueString <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTrackDuration
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentMediaDuration
org.fourthline.cling.support.avtransport.lastchange.EventedValueString <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentMediaDuration
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTrackMetaData
org.fourthline.cling.support.avtransport.lastchange.EventedValueString <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTrackMetaData
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTrackURI
org.fourthline.cling.support.avtransport.lastchange.EventedValueURI <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTrackURI
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.AVTransportURI
org.fourthline.cling.support.avtransport.lastchange.EventedValueURI <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.AVTransportURI
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.NextAVTransportURI
org.fourthline.cling.support.avtransport.lastchange.EventedValueURI <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.NextAVTransportURI
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.AVTransportURIMetaData
org.fourthline.cling.support.avtransport.lastchange.EventedValueString <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.AVTransportURIMetaData
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.NextAVTransportURIMetaData
org.fourthline.cling.support.avtransport.lastchange.EventedValueString <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.NextAVTransportURIMetaData
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTransportActions
org.fourthline.cling.support.avtransport.lastchange.EventedValueEnumArray <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.CurrentTransportActions
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.RelativeTimePosition
org.fourthline.cling.support.avtransport.lastchange.EventedValueString <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.RelativeTimePosition
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.AbsoluteTimePosition
org.fourthline.cling.support.avtransport.lastchange.EventedValueString <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.AbsoluteTimePosition
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.RelativeCounterPosition
org.fourthline.cling.support.avtransport.lastchange.EventedValueString <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.RelativeCounterPosition
org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable +.. org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.AbsoluteCounterPosition
org.fourthline.cling.support.avtransport.lastchange.EventedValueString <|-- org.fourthline.cling.support.avtransport.lastchange.AVTransportVariable.AbsoluteCounterPosition
org.fourthline.cling.model.message.IncomingDatagramMessage <|-- org.fourthline.cling.model.message.discovery.IncomingSearchRequest
org.fourthline.cling.model.message.IncomingDatagramMessage <|-- org.fourthline.cling.model.message.discovery.IncomingSearchResponse
org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl <|-- org.fourthline.cling.transport.impl.RecoveringGENAEventProcessorImpl
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.renderingcontrol.callback.GetVolume
de.yaacc.R +.. de.yaacc.R.array
de.yaacc.R +.. de.yaacc.R.attr
de.yaacc.R +.. de.yaacc.R.bool
de.yaacc.R +.. de.yaacc.R.color
de.yaacc.R +.. de.yaacc.R.dimen
de.yaacc.R +.. de.yaacc.R.drawable
de.yaacc.R +.. de.yaacc.R.id
de.yaacc.R +.. de.yaacc.R.integer
de.yaacc.R +.. de.yaacc.R.layout
de.yaacc.R +.. de.yaacc.R.menu
de.yaacc.R +.. de.yaacc.R.mipmap
de.yaacc.R +.. de.yaacc.R.string
de.yaacc.R +.. de.yaacc.R.style
de.yaacc.R +.. de.yaacc.R.styleable
de.yaacc.R +.. de.yaacc.R.xml
java.util.logging.Handler <|-- org.fourthline.cling.android.FixedAndroidLogHandler
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.BooleanDatatype
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.renderingcontrol.callback.GetMute
de.yaacc.browser.OnScrollListener <|.. de.yaacc.browser.BrowseItemAdapter
android.widget.BaseAdapter <|-- de.yaacc.browser.BrowseItemAdapter
de.yaacc.browser.BrowseItemAdapter +.. de.yaacc.browser.BrowseItemAdapter.ViewHolder
org.fourthline.cling.transport.spi.Runnable <|-- org.fourthline.cling.transport.spi.DatagramIO
org.fourthline.cling.model.message.discovery.OutgoingSearchResponse <|-- org.fourthline.cling.model.message.discovery.OutgoingSearchResponseUDN
org.fourthline.cling.transport.spi.StreamClientConfiguration <|.. org.fourthline.cling.transport.spi.AbstractStreamClientConfiguration
org.fourthline.cling.controlpoint.ActionCallback <|-- de.yaacc.upnp.callback.avtransport.GetSyncOffset
org.fourthline.cling.support.messagebox.model.Message <|-- org.fourthline.cling.support.messagebox.model.MessageSMS
org.fourthline.cling.support.model.AVTransport <|-- de.yaacc.upnp.server.avtransport.AvTransport
org.fourthline.cling.model.message.StreamRequestMessage <|-- org.fourthline.cling.model.message.gena.OutgoingEventRequestMessage
org.fourthline.cling.model.types.UnsignedVariableInteger <|-- org.fourthline.cling.model.types.UnsignedIntegerFourBytes
org.fourthline.cling.model.message.UpnpMessage <|-- org.fourthline.cling.model.message.StreamRequestMessage
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityReceiverListBinding
org.fourthline.cling.protocol.SendingAsync <|-- org.fourthline.cling.protocol.SendingSync
org.fourthline.cling.model.types.RuntimeException <|-- org.fourthline.cling.model.types.InvalidValueException
de.yaacc.player.AbstractPlayer <|-- de.yaacc.player.LocalThirdPartieMusicPlayer
org.fourthline.cling.model.types.Datatype <|.. org.fourthline.cling.model.types.AbstractDatatype
org.fourthline.cling.transport.spi.DatagramIO <|.. org.fourthline.cling.transport.impl.DatagramIOImpl
org.fourthline.cling.model.Validatable <|.. org.fourthline.cling.model.meta.UDAVersion
org.fourthline.cling.model.message.UpnpMessage <|-- org.fourthline.cling.model.message.StreamResponseMessage
org.fourthline.cling.transport.impl.GENAEventProcessorImpl <|-- org.fourthline.cling.transport.impl.PullGENAEventProcessorImpl
org.fourthline.cling.support.messagebox.model.ElementAppender <|.. org.fourthline.cling.support.messagebox.model.DateTime
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.support.model.dlna.message.header.DLNAHeader
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.DeviceUSNHeader
org.fourthline.cling.model.gena.GENASubscription <|-- org.fourthline.cling.model.gena.RemoteGENASubscription
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.FriendlyNameHeader
android.support.fragment.R +.. android.support.fragment.R.attr
android.support.fragment.R +.. android.support.fragment.R.bool
android.support.fragment.R +.. android.support.fragment.R.color
android.support.fragment.R +.. android.support.fragment.R.dimen
android.support.fragment.R +.. android.support.fragment.R.drawable
android.support.fragment.R +.. android.support.fragment.R.id
android.support.fragment.R +.. android.support.fragment.R.integer
android.support.fragment.R +.. android.support.fragment.R.layout
android.support.fragment.R +.. android.support.fragment.R.string
android.support.fragment.R +.. android.support.fragment.R.style
android.support.fragment.R +.. android.support.fragment.R.styleable
org.fourthline.cling.protocol.ReceivingSync <|-- org.fourthline.cling.protocol.sync.ReceivingSubscribe
org.fourthline.cling.transport.spi.RuntimeException <|-- org.fourthline.cling.transport.spi.InitializationException
example.mediaserver.ConnectionManagerPeerTest +.. example.mediaserver.ConnectionManagerPeerTest.PeeringConnectionManager
example.mediaserver.AbstractPeeringConnectionManagerService <|-- example.mediaserver.ConnectionManagerPeerTest.PeeringConnectionManager
example.mediaserver.ConnectionManagerPeerTest +.. example.mediaserver.ConnectionManagerPeerTest.CountingListener
example.mediaserver.PropertyChangeListener <|.. example.mediaserver.ConnectionManagerPeerTest.CountingListener
org.fourthline.cling.support.model.item.Item <|-- org.fourthline.cling.support.model.item.ImageItem
org.fourthline.cling.support.lastchange.EventedValue <|-- org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueChannelLoudness
android.support.compat.R +.. android.support.compat.R.attr
android.support.compat.R +.. android.support.compat.R.bool
android.support.compat.R +.. android.support.compat.R.color
android.support.compat.R +.. android.support.compat.R.dimen
android.support.compat.R +.. android.support.compat.R.drawable
android.support.compat.R +.. android.support.compat.R.id
android.support.compat.R +.. android.support.compat.R.integer
android.support.compat.R +.. android.support.compat.R.layout
android.support.compat.R +.. android.support.compat.R.string
android.support.compat.R +.. android.support.compat.R.style
android.support.compat.R +.. android.support.compat.R.styleable
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.PlaySpeedHeader
java.io.Serializable <|.. org.seamless.http.Representation
android.app.Service <|-- de.yaacc.player.PlayerService
de.yaacc.player.PlayerService +.. de.yaacc.player.PlayerService.PlayerServiceBinder
de.yaacc.player.Binder <|-- de.yaacc.player.PlayerService.PlayerServiceBinder
org.fourthline.cling.model.action.ActionException <|-- org.fourthline.cling.support.contentdirectory.ContentDirectoryException
org.fourthline.cling.model.types.csv.CSV <|-- org.fourthline.cling.model.types.csv.CSVDouble
org.fourthline.cling.model.message.StreamRequestMessage <|-- org.fourthline.cling.model.message.gena.OutgoingSubscribeRequestMessage
org.fourthline.cling.model.types.Datatype <|.. de.yaacc.upnp.model.types.SyncOffset
org.fourthline.cling.registry.event.DeviceDiscovery <|-- org.fourthline.cling.registry.event.FailedRemoteDeviceDiscovery
org.fourthline.cling.support.lastchange.EventedValue <|-- org.fourthline.cling.support.lastchange.EventedValueEnum
org.fourthline.cling.protocol.SendingAsync <|-- org.fourthline.cling.protocol.async.SendingSearch
de.yaacc.upnp.server.avtransport.YaaccState <|.. de.yaacc.upnp.server.avtransport.AvTransportMediaRendererNoMediaPresent
org.fourthline.cling.support.avtransport.impl.state.NoMediaPresent <|-- de.yaacc.upnp.server.avtransport.AvTransportMediaRendererNoMediaPresent
org.fourthline.cling.test.data.SampleService <|-- org.fourthline.cling.test.data.SampleServiceTwo
org.seamless.test.util.IteratorsTest +.. org.seamless.test.util.IteratorsTest.Foo
org.seamless.test.util.IteratorsTest +.. org.seamless.test.util.IteratorsTest.Iterate
org.seamless.test.util.Callable <|.. org.seamless.test.util.IteratorsTest.Iterate
org.fourthline.cling.registry.RegistryItems <|-- org.fourthline.cling.registry.LocalItems
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.SCIDHeader
de.yaacc.upnp.UpnpClientListener <|.. de.yaacc.browser.ServerListFragment
androidx.fragment.app.Fragment <|-- de.yaacc.browser.ServerListFragment
android.support.coreutils.R +.. android.support.coreutils.R.attr
android.support.coreutils.R +.. android.support.coreutils.R.bool
android.support.coreutils.R +.. android.support.coreutils.R.color
android.support.coreutils.R +.. android.support.coreutils.R.dimen
android.support.coreutils.R +.. android.support.coreutils.R.drawable
android.support.coreutils.R +.. android.support.coreutils.R.id
android.support.coreutils.R +.. android.support.coreutils.R.integer
android.support.coreutils.R +.. android.support.coreutils.R.layout
android.support.coreutils.R +.. android.support.coreutils.R.string
android.support.coreutils.R +.. android.support.coreutils.R.style
android.support.coreutils.R +.. android.support.coreutils.R.styleable
org.fourthline.cling.controlpoint.ActionCallback <|-- de.yaacc.upnp.callback.avtransport.SyncPause
example.localservice.SwitchPowerBeanReturn +.. example.localservice.SwitchPowerBeanReturn.StatusHolder
org.seamless.xml.SAXParser <|-- org.fourthline.cling.support.lastchange.LastChangeParser
org.fourthline.cling.support.lastchange.LastChangeParser +.. org.fourthline.cling.support.lastchange.LastChangeParser.RootHandler
org.fourthline.cling.support.lastchange.Handler <|-- org.fourthline.cling.support.lastchange.LastChangeParser.RootHandler
org.fourthline.cling.support.lastchange.LastChangeParser +.. org.fourthline.cling.support.lastchange.LastChangeParser.InstanceIDHandler
org.fourthline.cling.support.lastchange.Handler <|-- org.fourthline.cling.support.lastchange.LastChangeParser.InstanceIDHandler
org.fourthline.cling.model.message.header.DeviceTypeHeader <|-- org.fourthline.cling.model.message.header.UDADeviceTypeHeader
org.seamless.xml.SAXParser +.. org.seamless.xml.SAXParser.SimpleErrorHandler
org.seamless.xml.ErrorHandler <|.. org.seamless.xml.SAXParser.SimpleErrorHandler
org.seamless.xml.SAXParser +.. org.seamless.xml.SAXParser.Handler
org.seamless.xml.DefaultHandler <|-- org.seamless.xml.SAXParser.Handler
android.support.coreui.R +.. android.support.coreui.R.attr
android.support.coreui.R +.. android.support.coreui.R.bool
android.support.coreui.R +.. android.support.coreui.R.color
android.support.coreui.R +.. android.support.coreui.R.dimen
android.support.coreui.R +.. android.support.coreui.R.drawable
android.support.coreui.R +.. android.support.coreui.R.id
android.support.coreui.R +.. android.support.coreui.R.integer
android.support.coreui.R +.. android.support.coreui.R.layout
android.support.coreui.R +.. android.support.coreui.R.string
android.support.coreui.R +.. android.support.coreui.R.style
android.support.coreui.R +.. android.support.coreui.R.styleable
org.fourthline.cling.support.connectionmanager.ConnectionManagerService <|-- org.fourthline.cling.support.connectionmanager.AbstractPeeringConnectionManagerService
org.seamless.statemachine.StateMachine <|-- org.fourthline.cling.support.avtransport.impl.AVTransportStateMachine
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityContentListBinding
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.AvailableRangeHeader
org.fourthline.cling.support.model.DIDLObject +.. org.fourthline.cling.support.model.DIDLObject.Property
org.fourthline.cling.support.model.DIDLObject.Property +.. org.fourthline.cling.support.model.DIDLObject.Property.NAMESPACE
org.fourthline.cling.support.model.DIDLObject.Property +.. org.fourthline.cling.support.model.DIDLObject.Property.PropertyPersonWithRole
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.PropertyPersonWithRole
org.fourthline.cling.support.model.DIDLObject.Property +.. org.fourthline.cling.support.model.DIDLObject.Property.DC
org.fourthline.cling.support.model.DIDLObject.Property.DC +.. org.fourthline.cling.support.model.DIDLObject.Property.DC.NAMESPACE
org.fourthline.cling.support.model.NAMESPACE <|-- org.fourthline.cling.support.model.DIDLObject.Property.DC.NAMESPACE
org.fourthline.cling.support.model.DIDLObject.Property.DC +.. org.fourthline.cling.support.model.DIDLObject.Property.DC.DESCRIPTION
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.DC.DESCRIPTION
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.DC.DESCRIPTION
org.fourthline.cling.support.model.DIDLObject.Property.DC +.. org.fourthline.cling.support.model.DIDLObject.Property.DC.PUBLISHER
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.DC.PUBLISHER
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.DC.PUBLISHER
org.fourthline.cling.support.model.DIDLObject.Property.DC +.. org.fourthline.cling.support.model.DIDLObject.Property.DC.CONTRIBUTOR
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.DC.CONTRIBUTOR
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.DC.CONTRIBUTOR
org.fourthline.cling.support.model.DIDLObject.Property.DC +.. org.fourthline.cling.support.model.DIDLObject.Property.DC.DATE
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.DC.DATE
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.DC.DATE
org.fourthline.cling.support.model.DIDLObject.Property.DC +.. org.fourthline.cling.support.model.DIDLObject.Property.DC.LANGUAGE
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.DC.LANGUAGE
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.DC.LANGUAGE
org.fourthline.cling.support.model.DIDLObject.Property.DC +.. org.fourthline.cling.support.model.DIDLObject.Property.DC.RELATION
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.DC.RELATION
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.DC.RELATION
org.fourthline.cling.support.model.DIDLObject.Property.DC +.. org.fourthline.cling.support.model.DIDLObject.Property.DC.RIGHTS
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.DC.RIGHTS
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.DC.RIGHTS
org.fourthline.cling.support.model.DIDLObject.Property +.. org.fourthline.cling.support.model.DIDLObject.Property.SEC
org.fourthline.cling.support.model.DIDLObject.Property.SEC +.. org.fourthline.cling.support.model.DIDLObject.Property.SEC.NAMESPACE
org.fourthline.cling.support.model.NAMESPACE <|-- org.fourthline.cling.support.model.DIDLObject.Property.SEC.NAMESPACE
org.fourthline.cling.support.model.DIDLObject.Property.SEC +.. org.fourthline.cling.support.model.DIDLObject.Property.SEC.CAPTIONINFOEX
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.SEC.CAPTIONINFOEX
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.SEC.CAPTIONINFOEX
org.fourthline.cling.support.model.DIDLObject.Property.SEC +.. org.fourthline.cling.support.model.DIDLObject.Property.SEC.CAPTIONINFO
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.SEC.CAPTIONINFO
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.SEC.CAPTIONINFO
org.fourthline.cling.support.model.DIDLObject.Property.SEC +.. org.fourthline.cling.support.model.DIDLObject.Property.SEC.TYPE
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.SEC.TYPE
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.SEC.TYPE
org.fourthline.cling.support.model.DIDLObject.Property +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.NAMESPACE
org.fourthline.cling.support.model.NAMESPACE <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.NAMESPACE
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ARTIST
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ARTIST
org.fourthline.cling.support.model.PropertyPersonWithRole <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ARTIST
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ACTOR
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ACTOR
org.fourthline.cling.support.model.PropertyPersonWithRole <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ACTOR
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.AUTHOR
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.AUTHOR
org.fourthline.cling.support.model.PropertyPersonWithRole <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.AUTHOR
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.PRODUCER
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.PRODUCER
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.PRODUCER
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.DIRECTOR
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.DIRECTOR
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.DIRECTOR
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.GENRE
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.GENRE
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.GENRE
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ALBUM
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ALBUM
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ALBUM
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.PLAYLIST
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.PLAYLIST
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.PLAYLIST
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.REGION
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.REGION
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.REGION
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RATING
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RATING
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RATING
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.TOC
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.TOC
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.TOC
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ALBUM_ART_URI
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ALBUM_ART_URI
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ALBUM_ART_URI
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ARTIST_DISCO_URI
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ARTIST_DISCO_URI
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ARTIST_DISCO_URI
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.LYRICS_URI
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.LYRICS_URI
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.LYRICS_URI
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_TOTAL
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_TOTAL
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_TOTAL
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_USED
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_USED
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_USED
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_FREE
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_FREE
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_FREE
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_MAX_PARTITION
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_MAX_PARTITION
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_MAX_PARTITION
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_MEDIUM
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_MEDIUM
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.STORAGE_MEDIUM
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.LONG_DESCRIPTION
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.LONG_DESCRIPTION
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.LONG_DESCRIPTION
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ICON
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ICON
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ICON
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RADIO_CALL_SIGN
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RADIO_CALL_SIGN
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RADIO_CALL_SIGN
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RADIO_STATION_ID
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RADIO_STATION_ID
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RADIO_STATION_ID
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RADIO_BAND
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RADIO_BAND
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.RADIO_BAND
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.CHANNEL_NR
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.CHANNEL_NR
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.CHANNEL_NR
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.CHANNEL_NAME
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.CHANNEL_NAME
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.CHANNEL_NAME
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.SCHEDULED_START_TIME
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.SCHEDULED_START_TIME
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.SCHEDULED_START_TIME
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.SCHEDULED_END_TIME
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.SCHEDULED_END_TIME
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.SCHEDULED_END_TIME
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.DVD_REGION_CODE
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.DVD_REGION_CODE
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.DVD_REGION_CODE
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ORIGINAL_TRACK_NUMBER
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ORIGINAL_TRACK_NUMBER
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ORIGINAL_TRACK_NUMBER
org.fourthline.cling.support.model.DIDLObject.Property.UPNP +.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.USER_ANNOTATION
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.UPNP.USER_ANNOTATION
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.UPNP.USER_ANNOTATION
org.fourthline.cling.support.model.DIDLObject.Property +.. org.fourthline.cling.support.model.DIDLObject.Property.DLNA
org.fourthline.cling.support.model.DIDLObject.Property.DLNA +.. org.fourthline.cling.support.model.DIDLObject.Property.DLNA.NAMESPACE
org.fourthline.cling.support.model.NAMESPACE <|-- org.fourthline.cling.support.model.DIDLObject.Property.DLNA.NAMESPACE
org.fourthline.cling.support.model.DIDLObject.Property.DLNA +.. org.fourthline.cling.support.model.DIDLObject.Property.DLNA.PROFILE_ID
org.fourthline.cling.support.model.NAMESPACE <|.. org.fourthline.cling.support.model.DIDLObject.Property.DLNA.PROFILE_ID
org.fourthline.cling.support.model.Property <|-- org.fourthline.cling.support.model.DIDLObject.Property.DLNA.PROFILE_ID
org.fourthline.cling.support.model.DIDLObject +.. org.fourthline.cling.support.model.DIDLObject.Class
android.support.coreutils.R +.. android.support.coreutils.R.attr
android.support.coreutils.R +.. android.support.coreutils.R.bool
android.support.coreutils.R +.. android.support.coreutils.R.color
android.support.coreutils.R +.. android.support.coreutils.R.dimen
android.support.coreutils.R +.. android.support.coreutils.R.drawable
android.support.coreutils.R +.. android.support.coreutils.R.id
android.support.coreutils.R +.. android.support.coreutils.R.integer
android.support.coreutils.R +.. android.support.coreutils.R.layout
android.support.coreutils.R +.. android.support.coreutils.R.string
android.support.coreutils.R +.. android.support.coreutils.R.style
android.support.coreutils.R +.. android.support.coreutils.R.styleable
android.os.AsyncTask <|-- de.yaacc.util.image.ImageDownloadTask
org.fourthline.cling.support.avtransport.impl.state.NoMediaPresent <|-- example.mediarenderer.MyRendererNoMediaPresent
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityYaaccUpnpServerControlBinding
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.BufferBytesHeader
android.widget.AdapterView.OnItemClickListener <|.. de.yaacc.browser.BrowseReceiverDeviceClickListener
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.TransferModeHeader
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.AboutBinding
android.content.BroadcastReceiver <|-- de.yaacc.musicplayer.BackgroundMusicBroadcastReceiver
org.fourthline.cling.support.lastchange.LastChangeDelegator <|.. de.yaacc.upnp.server.avtransport.YaaccAVTransportService
android.widget.AdapterView.OnItemClickListener <|.. de.yaacc.browser.ContentListClickListener
org.fourthline.cling.controlpoint.ActionCallback <|-- de.yaacc.upnp.callback.avtransport.AdjustSyncOffset
org.seamless.xml.SAXParser <|-- org.fourthline.cling.support.contentdirectory.DIDLParser
org.fourthline.cling.support.contentdirectory.DIDLParser +.. org.fourthline.cling.support.contentdirectory.DIDLParser.DIDLObjectHandler
org.fourthline.cling.support.contentdirectory.Handler <|-- org.fourthline.cling.support.contentdirectory.DIDLParser.DIDLObjectHandler
org.fourthline.cling.support.contentdirectory.DIDLParser +.. org.fourthline.cling.support.contentdirectory.DIDLParser.RootHandler
org.fourthline.cling.support.contentdirectory.Handler <|-- org.fourthline.cling.support.contentdirectory.DIDLParser.RootHandler
org.fourthline.cling.support.contentdirectory.DIDLParser +.. org.fourthline.cling.support.contentdirectory.DIDLParser.ContainerHandler
org.fourthline.cling.support.contentdirectory.DIDLObjectHandler <|-- org.fourthline.cling.support.contentdirectory.DIDLParser.ContainerHandler
org.fourthline.cling.support.contentdirectory.DIDLParser +.. org.fourthline.cling.support.contentdirectory.DIDLParser.ItemHandler
org.fourthline.cling.support.contentdirectory.DIDLObjectHandler <|-- org.fourthline.cling.support.contentdirectory.DIDLParser.ItemHandler
org.fourthline.cling.support.contentdirectory.DIDLParser +.. org.fourthline.cling.support.contentdirectory.DIDLParser.ResHandler
org.fourthline.cling.support.contentdirectory.Handler <|-- org.fourthline.cling.support.contentdirectory.DIDLParser.ResHandler
org.fourthline.cling.support.contentdirectory.DIDLParser +.. org.fourthline.cling.support.contentdirectory.DIDLParser.DescMetaHandler
org.fourthline.cling.support.contentdirectory.Handler <|-- org.fourthline.cling.support.contentdirectory.DIDLParser.DescMetaHandler
org.fourthline.cling.model.message.IncomingDatagramMessage <|-- org.fourthline.cling.model.message.discovery.IncomingNotificationRequest
org.fourthline.cling.protocol.SendingSync <|-- org.fourthline.cling.protocol.sync.SendingSubscribe
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.connectionmanager.callback.GetCurrentConnectionInfo
org.fourthline.cling.model.types.csv.CSV <|-- org.fourthline.cling.model.types.csv.CSVDate
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityMultiContentPlayerBinding
org.fourthline.cling.support.lastchange.LastChangeParser <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlLastChangeParser
org.fourthline.cling.model.meta.Action <|-- org.fourthline.cling.model.meta.QueryStateVariableAction
org.fourthline.cling.model.resource.Resource <|-- org.fourthline.cling.model.resource.IconResource
org.fourthline.cling.support.model.item.Item <|-- org.fourthline.cling.support.model.item.PlaylistItem
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.MusicAlbumItemBrowser
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.MaxPrateHeader
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.contentdirectory.callback.Browse
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.PresetNameList
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueString <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.PresetNameList
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Brightness
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueUnsignedIntegerTwoBytes <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Brightness
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Contrast
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueUnsignedIntegerTwoBytes <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Contrast
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Sharpness
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueUnsignedIntegerTwoBytes <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Sharpness
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.RedVideoGain
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueUnsignedIntegerTwoBytes <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.RedVideoGain
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.BlueVideoGain
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueUnsignedIntegerTwoBytes <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.BlueVideoGain
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.GreenVideoGain
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueUnsignedIntegerTwoBytes <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.GreenVideoGain
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.RedVideoBlackLevel
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueUnsignedIntegerTwoBytes <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.RedVideoBlackLevel
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.BlueVideoBlackLevel
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueUnsignedIntegerTwoBytes <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.BlueVideoBlackLevel
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.GreenVideoBlackLevel
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueUnsignedIntegerTwoBytes <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.GreenVideoBlackLevel
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.ColorTemperature
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueUnsignedIntegerTwoBytes <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.ColorTemperature
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.HorizontalKeystone
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueShort <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.HorizontalKeystone
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.VerticalKeystone
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueShort <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.VerticalKeystone
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Mute
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueChannelMute <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Mute
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.VolumeDB
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueChannelVolumeDB <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.VolumeDB
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Volume
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueChannelVolume <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Volume
org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable +.. org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Loudness
org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueChannelLoudness <|-- org.fourthline.cling.support.renderingcontrol.lastchange.RenderingControlVariable.Loudness
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.messagebox.AddMessage
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.MaxAgeHeader
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.YaaccProgressDialogBinding
android.content.ServiceConnection <|.. de.yaacc.player.MusicPlayerActivity
android.app.Activity <|-- de.yaacc.player.MusicPlayerActivity
org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderImpl <|-- org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl
org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.RootHandler
org.fourthline.cling.binding.xml.DeviceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.RootHandler
org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.SpecVersionHandler
org.fourthline.cling.binding.xml.DeviceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.SpecVersionHandler
org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.DeviceHandler
org.fourthline.cling.binding.xml.DeviceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.DeviceHandler
org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.IconListHandler
org.fourthline.cling.binding.xml.DeviceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.IconListHandler
org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.IconHandler
org.fourthline.cling.binding.xml.DeviceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.IconHandler
org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.ServiceListHandler
org.fourthline.cling.binding.xml.DeviceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.ServiceListHandler
org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.ServiceHandler
org.fourthline.cling.binding.xml.DeviceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.ServiceHandler
org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.DeviceListHandler
org.fourthline.cling.binding.xml.DeviceDescriptorHandler <|-- org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.DeviceListHandler
org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl +.. org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.DeviceDescriptorHandler
org.fourthline.cling.binding.xml.Handler <|-- org.fourthline.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl.DeviceDescriptorHandler
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.AvailableSeekRangeHeader
java.util.ArrayList <|-- org.fourthline.cling.support.model.ProtocolInfos
org.fourthline.cling.test.data.SampleDevice <|-- org.fourthline.cling.test.data.SampleDeviceEmbeddedTwo
org.fourthline.cling.model.message.control.ActionRequestMessage <|.. org.fourthline.cling.model.message.control.IncomingActionRequestMessage
org.fourthline.cling.model.message.StreamRequestMessage <|-- org.fourthline.cling.model.message.control.IncomingActionRequestMessage
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.avtransport.callback.Pause
org.fourthline.cling.transport.spi.GENAEventProcessor <|.. org.fourthline.cling.transport.impl.GENAEventProcessorImpl
org.xml.sax.ErrorHandler <|.. org.fourthline.cling.transport.impl.GENAEventProcessorImpl
org.fourthline.cling.model.message.control.ActionResponseMessage <|.. org.fourthline.cling.model.message.control.OutgoingActionResponseMessage
org.fourthline.cling.model.message.StreamResponseMessage <|-- org.fourthline.cling.model.message.control.OutgoingActionResponseMessage
org.fourthline.cling.support.avtransport.impl.state.Playing <|-- example.mediarenderer.MyRendererPlaying
org.fourthline.cling.support.model.item.Item <|-- org.fourthline.cling.support.model.item.TextItem
org.fourthline.cling.model.message.header.RuntimeException <|-- org.fourthline.cling.model.message.header.InvalidHeaderException
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.contentdirectory.callback.Search
org.fourthline.cling.model.profile.ClientInfo <|-- org.fourthline.cling.model.profile.RemoteClientInfo
org.fourthline.cling.transport.Router <|.. org.fourthline.cling.transport.RouterImpl
org.fourthline.cling.test.data.SampleService <|-- org.fourthline.cling.test.data.SampleServiceThree
org.fourthline.cling.support.model.dlna.DLNAAttribute <|-- org.fourthline.cling.support.model.dlna.DLNAPlaySpeedAttribute
org.fourthline.cling.binding.xml.ServiceDescriptorBinder <|.. org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderImpl
org.xml.sax.ErrorHandler <|.. org.fourthline.cling.binding.xml.UDA10ServiceDescriptorBinderImpl
org.apache.hc.core5.http.io.HttpRequestHandler <|.. de.yaacc.upnp.server.YaaccHttpHandler
de.yaacc.upnp.server.YaaccHttpHandler +.. de.yaacc.upnp.server.YaaccHttpHandler.ContentHolder
org.fourthline.cling.test.model.LocalServiceBindingDatatypesTest +.. org.fourthline.cling.test.model.LocalServiceBindingDatatypesTest.TestServiceOne
org.fourthline.cling.registry.RegistryListener <|.. de.yaacc.upnp.UpnpClient
android.content.ServiceConnection <|.. de.yaacc.upnp.UpnpClient
de.yaacc.upnp.UpnpClient +.. de.yaacc.upnp.UpnpClient.LocalDummyDevice
de.yaacc.upnp.Device <|-- de.yaacc.upnp.UpnpClient.LocalDummyDevice
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityThirdPartieMusicPlayerBinding
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.igd.callback.PortMappingAdd
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.WCTHeader
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityPlayerListBinding
org.seamless.xhtml.XHTMLElement <|-- org.seamless.xhtml.Meta
org.fourthline.cling.test.gena.GenaSampleData +.. org.fourthline.cling.test.gena.GenaSampleData.LocalTestService
org.fourthline.cling.model.message.control.ActionRequestMessage <|.. org.fourthline.cling.model.message.control.OutgoingActionRequestMessage
org.fourthline.cling.model.message.StreamRequestMessage <|-- org.fourthline.cling.model.message.control.OutgoingActionRequestMessage
org.fourthline.cling.support.model.container.GenreContainer <|-- org.fourthline.cling.support.model.container.MusicGenre
org.fourthline.cling.model.types.csv.CSV <|-- org.fourthline.cling.model.types.csv.CSVFloat
org.fourthline.cling.model.types.UnsignedVariableInteger <|-- org.fourthline.cling.model.types.UnsignedIntegerTwoBytes
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.GetContentFeaturesHeader
org.fourthline.cling.model.message.StreamRequestMessage <|-- org.fourthline.cling.model.message.gena.IncomingUnsubscribeRequestMessage
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.FragmentPlayerListBinding
android.content.ServiceConnection <|.. de.yaacc.player.LocalBackgoundMusicPlayer
de.yaacc.player.AbstractPlayer <|-- de.yaacc.player.LocalBackgoundMusicPlayer
de.yaacc.util.image.ImageDownloader +.. de.yaacc.util.image.ImageDownloader.FlushedInputStream
de.yaacc.util.image.FilterInputStream <|-- de.yaacc.util.image.ImageDownloader.FlushedInputStream
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.avtransport.callback.GetCurrentTransportActions
java.io.Serializable <|.. org.seamless.util.time.DateRange
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.messagebox.RemoveMessage
org.fourthline.cling.transport.spi.Runnable <|-- org.fourthline.cling.transport.spi.MulticastReceiver
example.binarylight.SwitchPower <|-- example.localservice.SwitchPowerModerated
org.fourthline.cling.model.action.AbstractActionExecutor <|-- org.fourthline.cling.model.action.QueryStateVariableExecutor
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityAvtransportPlayerBinding
org.seamless.xml.DOM <|-- org.seamless.xhtml.XHTML
org.fourthline.cling.support.model.item.AudioItem <|-- org.fourthline.cling.support.model.item.AudioBroadcast
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityYaaccUpnpServerControlBinding
org.fourthline.cling.model.VariableValue <|-- org.fourthline.cling.model.action.ActionArgumentValue
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.avtransport.callback.SetPlayMode
androidx.viewpager2.adapter.FragmentStateAdapter <|-- de.yaacc.browser.TabBrowserFragmentStateAdapter
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.NTSHeader
org.fourthline.cling.support.lastchange.EventedValue <|-- org.fourthline.cling.support.lastchange.EventedValueUnsignedIntegerFourBytes
org.seamless.xml.DOM <|-- org.fourthline.cling.support.messagebox.parser.MessageDOM
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.SoapActionHeader
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.igd.callback.PortMappingEntryGet
org.fourthline.cling.transport.spi.StreamServer <|.. de.yaacc.upnp.YaaccAsyncStreamServerImpl
org.fourthline.cling.model.Validatable <|.. org.fourthline.cling.model.meta.StateVariable
org.fourthline.cling.transport.Router <|.. org.fourthline.cling.mock.MockRouter
org.fourthline.cling.protocol.SendingAsync <|-- org.fourthline.cling.protocol.async.SendingNotification
org.fourthline.cling.registry.RegistryListener <|.. org.fourthline.cling.registry.DefaultRegistryListener
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.UserAgentHeader
android.support.fragment.R +.. android.support.fragment.R.attr
android.support.fragment.R +.. android.support.fragment.R.bool
android.support.fragment.R +.. android.support.fragment.R.color
android.support.fragment.R +.. android.support.fragment.R.dimen
android.support.fragment.R +.. android.support.fragment.R.drawable
android.support.fragment.R +.. android.support.fragment.R.id
android.support.fragment.R +.. android.support.fragment.R.integer
android.support.fragment.R +.. android.support.fragment.R.layout
android.support.fragment.R +.. android.support.fragment.R.string
android.support.fragment.R +.. android.support.fragment.R.style
android.support.fragment.R +.. android.support.fragment.R.styleable
org.fourthline.cling.support.avtransport.impl.state.AbstractState <|-- org.fourthline.cling.support.avtransport.impl.state.Stopped
android.os.AsyncTask <|-- de.yaacc.browser.ControlPlayerTask
org.xml.sax.ErrorHandler <|.. org.seamless.xml.DOMParser
org.xml.sax.EntityResolver <|.. org.seamless.xml.DOMParser
org.seamless.xml.DOMParser +.. org.seamless.xml.DOMParser.NodeVisitor
java.util.Map <|.. org.seamless.http.Headers
de.yaacc.upnp.server.avtransport.YaaccState <|.. de.yaacc.upnp.server.avtransport.AvTransportMediaRendererPaused
org.fourthline.cling.support.avtransport.impl.state.PausedPlay <|-- de.yaacc.upnp.server.avtransport.AvTransportMediaRendererPaused
org.fourthline.cling.model.meta.Device <|-- org.fourthline.cling.model.meta.RemoteDevice
org.fourthline.cling.DefaultUpnpServiceConfiguration <|-- org.fourthline.cling.mock.MockUpnpServiceConfiguration
org.fourthline.cling.model.meta.Service <|-- org.fourthline.cling.model.meta.LocalService
android.widget.AdapterView.OnItemClickListener <|.. de.yaacc.browser.PlayerListItemClickListener
org.fourthline.cling.support.lastchange.EventedValue <|-- org.fourthline.cling.support.lastchange.EventedValueShort
android.support.v4.R +.. android.support.v4.R.attr
android.support.v4.R +.. android.support.v4.R.bool
android.support.v4.R +.. android.support.v4.R.color
android.support.v4.R +.. android.support.v4.R.dimen
android.support.v4.R +.. android.support.v4.R.drawable
android.support.v4.R +.. android.support.v4.R.id
android.support.v4.R +.. android.support.v4.R.integer
android.support.v4.R +.. android.support.v4.R.layout
android.support.v4.R +.. android.support.v4.R.string
android.support.v4.R +.. android.support.v4.R.style
android.support.v4.R +.. android.support.v4.R.styleable
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.MusicArtistsFolderBrowser
org.fourthline.cling.support.lastchange.EventedValue <|-- org.fourthline.cling.support.lastchange.EventedValueUnsignedIntegerTwoBytes
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.UDNHeader
org.fourthline.cling.model.message.UpnpHeaders <|-- org.fourthline.cling.support.model.dlna.message.DLNAHeaders
org.fourthline.cling.support.model.Person <|-- org.fourthline.cling.support.model.PersonWithRole
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.AVClientInfoHeader
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.MusicFolderBrowser
org.fourthline.cling.support.model.item.VideoItem <|-- org.fourthline.cling.support.model.item.MusicVideoClip
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.igd.callback.GetExternalIP
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.avtransport.callback.Previous
java.io.Serializable <|.. org.seamless.util.Pager
org.fourthline.cling.support.model.item.AudioItem <|-- org.fourthline.cling.support.model.item.MusicTrack
org.fourthline.cling.test.data.SampleService <|-- org.fourthline.cling.test.data.SampleServiceOne
org.fourthline.cling.support.xmicrosoft.AbstractMediaReceiverRegistrarService <|-- de.yaacc.upnp.server.YaaccMediaReceiverRegistrarService
org.fourthline.cling.support.model.dlna.message.header.DLNAHeader <|-- org.fourthline.cling.support.model.dlna.message.header.SupportedHeader
org.fourthline.cling.model.action.ActionException <|-- org.fourthline.cling.support.connectionmanager.ConnectionManagerException
android.os.AsyncTask <|-- de.yaacc.browser.ContentItemPlayTask
org.fourthline.cling.model.message.discovery.OutgoingSearchResponse <|-- org.fourthline.cling.model.message.discovery.OutgoingSearchResponseServiceType
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.RootFolderBrowser
org.fourthline.cling.model.types.csv.CSV <|-- org.fourthline.cling.model.types.csv.CSVInteger
org.fourthline.cling.controlpoint.ActionCallback <|-- de.yaacc.upnp.callback.avtransport.SetSyncOffset
org.fourthline.cling.transport.impl.NetworkAddressFactoryImpl <|-- org.fourthline.cling.android.AndroidNetworkAddressFactory
org.fourthline.cling.model.types.csv.CSV <|-- org.fourthline.cling.model.types.csv.CSVString
org.fourthline.cling.model.Validatable <|.. org.fourthline.cling.model.meta.ActionArgument
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityImageViewerBinding
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.TimeoutHeader
org.fourthline.cling.binding.LocalServiceBinder <|.. org.fourthline.cling.binding.annotations.AnnotationLocalServiceBinder
org.fourthline.cling.test.data.SampleDevice <|-- org.fourthline.cling.test.data.SampleDeviceEmbeddedOne
org.fourthline.cling.UpnpService <|.. org.fourthline.cling.mock.MockUpnpService
org.fourthline.cling.mock.MockUpnpService +.. org.fourthline.cling.mock.MockUpnpService.MockProtocolFactory
org.fourthline.cling.mock.ProtocolFactoryImpl <|-- org.fourthline.cling.mock.MockUpnpService.MockProtocolFactory
org.fourthline.cling.support.avtransport.impl.state.AbstractState <|-- org.fourthline.cling.support.avtransport.impl.state.NoMediaPresent
org.fourthline.cling.model.message.discovery.OutgoingNotificationRequest <|-- org.fourthline.cling.model.message.discovery.OutgoingNotificationRequestUDN
org.fourthline.cling.registry.RuntimeException <|-- org.fourthline.cling.registry.RegistrationException
org.seamless.http.Headers <|-- org.fourthline.cling.model.message.UpnpHeaders
org.fourthline.cling.model.message.control.ActionMessage <|-- org.fourthline.cling.model.message.control.ActionRequestMessage
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.ImagesFolderBrowser
org.fourthline.cling.model.types.DeviceType <|-- org.fourthline.cling.model.types.UDADeviceType
org.fourthline.cling.transport.spi.AbstractStreamClientConfiguration <|-- de.yaacc.upnp.YaaccStreamingClientConfigurationImpl
org.fourthline.cling.test.data.SampleDevice <|-- org.fourthline.cling.test.data.SampleDeviceRoot
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityYaaccLogBinding
org.fourthline.cling.model.Validatable <|.. org.fourthline.cling.model.meta.StateVariableAllowedValueRange
org.fourthline.cling.model.types.AbstractDatatype <|-- org.fourthline.cling.model.types.DateTimeDatatype
org.fourthline.cling.model.message.discovery.OutgoingNotificationRequest <|-- org.fourthline.cling.model.message.discovery.OutgoingNotificationRequestDeviceType
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.MusicArtistFolderBrowser
org.fourthline.cling.model.resource.Resource <|-- org.fourthline.cling.model.resource.ServiceDescriptorResource
org.fourthline.cling.support.model.item.Item <|-- org.fourthline.cling.support.model.item.VideoItem
org.seamless.util.Iterators +.. org.seamless.util.Iterators.Empty
org.seamless.util.Iterator <|.. org.seamless.util.Iterators.Empty
org.seamless.util.Iterators +.. org.seamless.util.Iterators.Singular
org.seamless.util.Iterator <|.. org.seamless.util.Iterators.Singular
org.seamless.util.Iterators +.. org.seamless.util.Iterators.Synchronized
org.seamless.util.Iterator <|.. org.seamless.util.Iterators.Synchronized
org.fourthline.cling.support.messagebox.model.Message <|-- org.fourthline.cling.support.messagebox.model.MessageScheduleReminder
org.fourthline.cling.support.lastchange.EventedValue <|-- org.fourthline.cling.support.renderingcontrol.lastchange.EventedValueChannelVolume
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.BrowseItemCheckableBinding
java.util.logging.StreamHandler <|-- org.seamless.util.logging.SystemOutLoggingHandler
org.seamless.util.logging.SystemOutLoggingHandler +.. org.seamless.util.logging.SystemOutLoggingHandler.SimpleFormatter
org.seamless.util.logging.Formatter <|-- org.seamless.util.logging.SystemOutLoggingHandler.SimpleFormatter
org.fourthline.cling.model.message.header.UpnpHeader <|-- org.fourthline.cling.model.message.header.EventSequenceHeader
android.view.View.OnClickListener <|.. de.yaacc.browser.TabBrowserActivity
de.yaacc.upnp.UpnpClientListener <|.. de.yaacc.browser.TabBrowserActivity
androidx.appcompat.app.AppCompatActivity <|-- de.yaacc.browser.TabBrowserActivity
de.yaacc.upnp.server.contentdirectory.ContentBrowser <|-- de.yaacc.upnp.server.contentdirectory.ImagesByBucketNamesFolderBrowser
example.igd.PortMappingTest +.. example.igd.PortMappingTest.TestConnection
example.igd.WANIPConnectionService <|-- example.igd.PortMappingTest.TestConnection
example.igd.PortMappingTest +.. example.igd.PortMappingTest.UpnpServiceImpl
example.igd.MockUpnpService <|-- example.igd.PortMappingTest.UpnpServiceImpl
android.support.mediacompat.R +.. android.support.mediacompat.R.attr
android.support.mediacompat.R +.. android.support.mediacompat.R.bool
android.support.mediacompat.R +.. android.support.mediacompat.R.color
android.support.mediacompat.R +.. android.support.mediacompat.R.dimen
android.support.mediacompat.R +.. android.support.mediacompat.R.drawable
android.support.mediacompat.R +.. android.support.mediacompat.R.id
android.support.mediacompat.R +.. android.support.mediacompat.R.integer
android.support.mediacompat.R +.. android.support.mediacompat.R.layout
android.support.mediacompat.R +.. android.support.mediacompat.R.string
android.support.mediacompat.R +.. android.support.mediacompat.R.style
android.support.mediacompat.R +.. android.support.mediacompat.R.styleable
org.fourthline.cling.protocol.async.SendingNotification <|-- org.fourthline.cling.protocol.async.SendingNotificationByebye
org.fourthline.cling.controlpoint.ActionCallback <|-- de.yaacc.upnp.callback.avtransport.SyncPlay
org.fourthline.cling.protocol.SendingSync <|-- org.fourthline.cling.protocol.sync.SendingRenewal
org.fourthline.cling.model.message.UpnpOperation <|-- org.fourthline.cling.model.message.UpnpResponse
org.fourthline.cling.model.Validatable <|.. org.fourthline.cling.model.meta.Icon
org.fourthline.cling.transport.spi.StreamClient <|.. org.fourthline.cling.transport.spi.AbstractStreamClient
android.app.Service <|-- de.yaacc.upnp.server.YaaccUpnpServerService
org.fourthline.cling.protocol.SendingSync <|-- org.fourthline.cling.protocol.sync.SendingUnsubscribe
androidx.viewbinding.ViewBinding <|.. de.yaacc.databinding.ActivityBrowseBinding
org.fourthline.cling.controlpoint.ActionCallback <|-- org.fourthline.cling.support.avtransport.callback.GetTransportInfo
android.content.BroadcastReceiver <|-- de.yaacc.imageviewer.ImageViewerBroadcastReceiver
org.fourthline.cling.model.VariableValue <|-- org.fourthline.cling.model.state.StateVariableValue
org.fourthline.cling.support.model.container.Container <|-- org.fourthline.cling.support.model.container.GenreContainer
org.seamless.util.io.IO +.. org.seamless.util.io.IO.FileFinder
org.fourthline.cling.support.model.dlna.DLNAAttribute <|-- org.fourthline.cling.support.model.dlna.DLNAFlagsAttribute
android.content.ServiceConnection <|.. de.yaacc.player.ThirdPartieMusicPlayerActivity
android.app.Activity <|-- de.yaacc.player.ThirdPartieMusicPlayerActivity
org.fourthline.cling.transport.spi.NetworkAddressFactory <|.. org.fourthline.cling.transport.impl.NetworkAddressFactoryImpl
org.fourthline.cling.support.messagebox.model.ElementAppender <|.. org.fourthline.cling.support.messagebox.model.Message
@enduml
